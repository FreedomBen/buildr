var search_data = {"index":{"searchIndex":["abbrev","addrinfo","array","base64","basicsocket","benchmark","tms","bignum","buildr","actsasartifact","ant","apt","archivetask","merge","artifact","artifactnamespace","artifactrequirement","artifactsearch","build","cc","cctask","checks","expectation","clojure","cobertura","coberturacheck","compile","compiletask","compiler","ecj","externaljavac","javac","concattask","doc","base","doctask","groovydoc","groovydocdefaults","javadoc","javadocdefaults","scaladoc","scaladocdefaults","vscaladoc","eclipse","eclipse","java","options","plugin","scala","emma","extension","classmethods","filter","mapper","gitrelease","groovy","easyb","groovysh","groovyc","hgrelease","integrationteststask","intellijidea","ideafile","ideamodule","ideaproject","projectextension","jbehave","jmock","jrebel","junit","report","layout","default","multitest","optionalartifact","options","proxies","pom","package","packagegemtask","packaging","java","aartask","eartask","jartask","manifest","wartask","scala","processstatus","project","rspec","repositories","resourcestask","run","base","javarunner","runtask","scala","check","mockito","projectextension","scalashell","scalatest","scalac","javac","scalacoptions","specs","specs2","settings","shell","base","beanshell","clojure","jirb","shelltask","svnrelease","tartask","test","skipifnotest","testframework","base","jrubybased","classmethods","java","testresult","error","yamlformatter","testng","testtask","unzip","util","versionrequirement","ziptask","cgi","cmath","csv","malformedcsverror","row","table","conditionvariable","debugger__","context","dl","date","delegator","digest","class","instance","dir","env","erb","defmethod","util","enumerable","exception2messagemapper","e2mm","fiddle","file","stat","fileutils","dryrun","lowmethods","nowrite","streamutils_","verbose","find","fixnum","float","forwardable","gserver","gem","loaderror","version","getoptlong","ambiguousoption","error","invalidoption","missingargument","needlessargument","hash","io","ipaddr","ipsocket","irb","abort","irb","integer","json","java","commands","javawrapper","options","kconv","kernel","logger","application","formatter","logdevice","logdevicemutex","severity","logging","matchdata","math","matrix","module","monitor","monitormixin","conditionvariable","timeout","multitkip","command_queue","multitkip_ok","multitkip_pseudotoplevel_evaluable","mutex_m","numeric","object","scala","synchronizer","synchronizer_m","thwait","timeouterror","observable","open3","openobject","openstruct","openuri","httperror","httpredirect","meta","openread","optionparser","acceptables","ambiguousargument","ambiguousoption","arguable","completinghash","completion","invalidargument","invalidoption","list","missingargument","needlessargument","optionmap","parseerror","switch","noargument","optionalargument","placedargument","requiredargument","pp","objectmixin","ppmethods","singleline","pstore","error","pathname","prettyprint","breakable","group","groupqueue","singleline","text","prime","eratosthenesgenerator","eratosthenessieve","generator23","oldcompatibility","pseudoprimegenerator","trialdivision","trialdivisiongenerator","profiler__","progressbar","psych","badalias","exception","queue","rdoc","error","rss","rake","filetask","range","rational","remotetkip","resolv","dns","config","nxdomain","otherresolverror","decodeerror","encodeerror","name","query","requester","requesterror","resource","any","cname","domainname","generic","hinfo","in","a","aaaa","srv","wks","minfo","mx","ns","ptr","soa","txt","hosts","ipv4","ipv6","resolverror","resolvtimeout","sockssocket","string_or_failed_format","scanf","formatspecifier","formatstring","securerandom","set","shell","shellwords","simpledelegator","singleforwardable","singleton","sizedqueue","socket","udpsource","sortedset","string","struct","syck","sync","sync_m","err","lockmodefailer","unknownlocker","tcpsocket","tsort","cyclic","tcltkip","tcltklib","tempfile","remover","threaderror","threadswait","time","timeout","error","tkcomm","tk_cmdtbl","tk_windows","tkcore","interp","tk_object_table","tracer","udpsocket","uri","file","ftp","generic","http","notfounderror","vector","zerovectorerror","webrick","weakref","referror","yaml","zip","zipentry","zipentryset","!()","!=()","%()","&()","&()","&()","&()","*()","*()","*()","**()","**()","**()","**()","**()","+()","+()","+()","+()","+()","-()","-()","-()","-()","/()","/()","/()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<=>()","==()","==()","==()","==()","==()","==()","==()","==()","==()","===()",">>()",">>()","csv()","currentcontext()","delegateclass()","digest()","fail()","fail()","fail()","fail()","fail()","fail()","fail()","i()","mainloop()","raise()","raise()","raise()","raise()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","[]=()","^()","_()","_default_master()","_default_master()","_ip_table()","_ip_table()","_tk_table_list()","_tk_table_list()","__create_safe_slave_obj()","__create_safe_slave_obj()","__create_trusted_slave_obj()","__create_trusted_slave_obj()","__eval()","__eval()","__eval()","__getip()","__getip()","__getobj__()","__getobj__()","__init_ip_env__()","__init_ip_env__()","__initialize__()","__invoke()","__invoke()","__invoke()","__method_missing_alias_for_multitkip__()","__new__()","__pseudo_toplevel()","__pseudo_toplevel()","__pseudo_toplevel()","__pseudo_toplevel()","__pseudo_toplevel=()","__pseudo_toplevel=()","__pseudo_toplevel=()","__pseudo_toplevel=()","__pseudo_toplevel_evaluable=()","__pseudo_toplevel_evaluable=()","__pseudo_toplevel_evaluable=()","__pseudo_toplevel_evaluable=()","__pseudo_toplevel_evaluable?()","__pseudo_toplevel_evaluable?()","__pseudo_toplevel_evaluable?()","__pseudo_toplevel_evaluable?()","__setobj__()","__setobj__()","_add_new_tables()","_add_new_tables()","_add_tk_procs()","_add_tk_procs()","_at()","_callback_entry?()","_callback_entry_class?()","_conv_listelement()","_conv_listelement()","_conv_listelement()","_conv_listelement()","_conv_listelement()","_conv_listelement()","_create_console()","_create_console()","_create_console()","_create_slave_object()","_create_slave_object()","_curr_cmd_id()","_default_delete_hook()","_default_delete_hook()","_destroy_slaves_of_slaveip()","_destroy_slaves_of_slaveip()","_dump()","_eval()","_eval()","_eval()","_eval()","_eval()","_eval_with_enc()","_eval_with_enc()","_eval_with_enc()","_eval_with_enc()","_eval_with_enc()","_eval_without_enc()","_eval_without_enc()","_eval_without_enc()","_eval_without_enc()","_eval_without_enc()","_fromutf8()","_fromutf8()","_fromutf8()","_fromutf8()","_fromutf8()","_fromutf8()","_genobj_for_tkwidget()","_get_global_var()","_get_global_var()","_get_global_var()","_get_global_var()","_get_global_var()","_get_global_var2()","_get_global_var2()","_get_global_var2()","_get_global_var2()","_get_global_var2()","_get_variable()","_get_variable()","_get_variable()","_get_variable()","_get_variable()","_get_variable2()","_get_variable2()","_get_variable2()","_get_variable2()","_get_variable2()","_init_ip_env()","_init_ip_env()","_init_ip_internal()","_init_ip_internal()","_invoke()","_invoke()","_invoke()","_invoke()","_invoke()","_invoke_with_enc()","_invoke_with_enc()","_invoke_with_enc()","_invoke_with_enc()","_invoke_with_enc()","_invoke_without_enc()","_invoke_without_enc()","_invoke_without_enc()","_invoke_without_enc()","_invoke_without_enc()","_ip_id_()","_ip_id_()","_ip_id_()","_ip_id_()","_ip_id_()","_ip_id_()","_is_master_of?()","_is_master_of?()","_is_master_of?()","_load()","_make_menu_embeddable()","_make_menu_embeddable()","_make_menu_embeddable()","_make_menu_embeddable()","_merge_tklist()","_merge_tklist()","_merge_tklist()","_merge_tklist()","_merge_tklist()","_merge_tklist()","_next_cmd_id()","_proc_on_current_safelevel()","_proc_on_current_safelevel()","_proc_on_current_safelevel()","_proc_on_current_safelevel()","_proc_on_safelevel()","_proc_on_safelevel()","_proc_on_safelevel()","_proc_on_safelevel()","_receiver_mainloop()","_receiver_mainloop()","_remove_tk_procs()","_remove_tk_procs()","_return_value()","_return_value()","_return_value()","_return_value()","_return_value()","_set_global_var()","_set_global_var()","_set_global_var()","_set_global_var()","_set_global_var()","_set_global_var2()","_set_global_var2()","_set_global_var2()","_set_global_var2()","_set_global_var2()","_set_variable()","_set_variable()","_set_variable()","_set_variable()","_set_variable()","_set_variable2()","_set_variable2()","_set_variable2()","_set_variable2()","_set_variable2()","_split_tklist()","_split_tklist()","_split_tklist()","_split_tklist()","_split_tklist()","_thread_tkwait()","_thread_tkwait()","_thread_tkwait()","_thread_tkwait()","_thread_tkwait()","_thread_vwait()","_thread_vwait()","_thread_vwait()","_thread_vwait()","_thread_vwait()","_tk_cmd_tbl()","_tk_cmd_tbl()","_tk_table_list()","_tk_table_list()","_tk_windows()","_tk_windows()","_toutf8()","_toutf8()","_toutf8()","_toutf8()","_toutf8()","_toutf8()","_unset_global_var()","_unset_global_var()","_unset_global_var()","_unset_global_var()","_unset_global_var()","_unset_global_var2()","_unset_global_var2()","_unset_global_var2()","_unset_global_var2()","_unset_global_var2()","_unset_variable()","_unset_variable()","_unset_variable()","_unset_variable()","_unset_variable()","_unset_variable2()","_unset_variable2()","_unset_variable2()","_unset_variable2()","_unset_variable2()","abbrev()","abbrev()","abort()","abort()","abort()","abort()","abort()","abort()","absolute?()","absolute?()","accept()","accept()","accept()","accept_loop()","accessor()","acos()","acos!()","acosh()","acosh!()","activate()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add!()","add?()","add_artifact()","add_builtin_type()","add_component()","add_configuration()","add_domain_type()","add_ejb_facet()","add_exploded_ear_artifact()","add_exploded_ejb_artifact()","add_exploded_war_artifact()","add_facet()","add_filter()","add_gwt_configuration()","add_gwt_facet()","add_jpa_facet()","add_jruby_facet()","add_listener()","add_observer()","add_private_type()","add_row()","add_ruby_type()","add_tk_procs()","add_tk_procs()","add_to_composite_component()","add_web_facet()","after_define()","alias()","alias_command()","alias_delete()","alias_delete()","alias_delete()","alias_delete()","alias_info()","alias_info()","alias_info()","alias_info()","alias_target()","alias_target()","alias_target()","alias_target()","aliases()","aliases()","aliases()","aliases()","alive?()","alive?()","alive?()","alive?()","all_load_paths()","all_waits()","all_waits()","all_waits()","all_waits()","allow_ruby_exit=()","allow_ruby_exit=()","allow_ruby_exit=()","allow_ruby_exit=()","allow_ruby_exit=()","allow_ruby_exit?()","allow_ruby_exit?()","allow_ruby_exit?()","allow_ruby_exit?()","allow_ruby_exit?()","ant()","ant()","append()","append_features()","append_features()","append_features()","application()","applies_to?()","applies_to?()","applies_to?()","applies_to?()","apply_spec()","apply_spec_no_validation()","appsend()","apt()","apt()","apt()","array2tk_list()","artifact()","artifact()","artifact()","artifact()","artifact()","artifact()","artifact_ns()","artifacts()","artifacts()","artifacts_component()","ascend()","asin()","asin!()","asinh()","asinh!()","assign_receiver_and_watchdog()","assign_receiver_and_watchdog()","associate()","associate_with()","atan()","atan!()","atan2()","atan2!()","atanh()","atanh!()","available?()","background_call()","background_call()","background_call()","background_call()","background_eval()","background_eval()","background_eval()","background_eval()","background_eval_proc()","background_eval_proc()","background_eval_proc()","background_eval_proc()","background_eval_str()","background_eval_str()","background_eval_str()","background_eval_str()","background_eval_string()","background_eval_string()","background_eval_string()","background_eval_string()","banner()","base()","base64()","base64digest()","base64digest()","base64digest!()","base_dir()","base_dir=()","base_directory()","base_document()","base_document()","before_define()","benchmark()","best_version()","bg_call()","bg_call()","bg_call()","bg_call()","bg_eval()","bg_eval()","bg_eval()","bg_eval()","bg_eval_proc()","bg_eval_proc()","bg_eval_proc()","bg_eval_proc()","bg_eval_str()","bg_eval_str()","bg_eval_str()","bg_eval_str()","bg_eval_string()","bg_eval_string()","bg_eval_string()","bg_eval_string()","bgerror()","bgerror()","bin_path()","binary_mode()","bind()","bind()","bind()","bind()","bind()","bind_all()","bind_append()","bind_append_all()","bind_remove()","bind_remove_all()","bindinfo()","bindinfo_all()","bindir()","block_scanf()","bm()","bmbm()","break()","break?()","break_outmost_groups()","break_points()","break_points()","breakable()","breakable()","broadcast()","broadcast()","build()","build()","build()","build?()","build?()","builders()","builders=()","buildr_project=()","by_col()","by_col!()","by_col_or_row()","by_col_or_row!()","by_row()","by_row!()","cache()","cache_dir()","cache_gem()","call()","call()","call()","call()","call()","call()","callback()","callback_break()","callback_continue()","callback_return()","candidate()","candidate()","candidate()","capture2()","capture2e()","capture3()","cb_entry_class()","cb_entry_class()","cb_error()","cb_error()","cb_eval()","cb_eval()","cb_eval()","cb_eval()","cbrt()","cbrt!()","cc()","cd()","cd()","cd()","changed()","changed?()","changed?()","charset()","chdir()","chdir()","check()","check()","check()","check()","check_break_points()","check_inspect_key()","check_signedness()","check_sizeof()","check_suspend()","children()","chmod()","chmod()","chmod_r()","chown()","chown_r()","classes()","classifier()","classify()","classpath()","classpath()","classpath()","classpath()","classpath=()","classpath=()","classpath=()","classpath_containers()","classpath_containers=()","classpath_from()","classpath_variables()","clean()","clean()","cleanpath()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear_paths()","clear_suspend()","clone()","clone()","clone()","close()","close()","close()","close()","close()","close()","close!()","cmp()","coerce()","coerce()","collect()","collect()","collect!()","collect2()","column()","column_vector()","column_vectors()","columns()","comma_breakable()","commit()","compare_file()","compare_stream()","compile()","compile()","compiler()","compilers()","complete()","complete()","component()","component()","component_clone()","components()","composed?()","concat()","conf()","config_file()","configuration()","configuration=()","configurations_component()","conj()","conjugate()","connect()","connect()","connect_address()","connect_from()","connect_to()","connecting()","connections()","contain?()","contain?()","contain?()","content()","content_encoding()","content_type()","context()","context()","convert()","convert()","converters()","convertible_int()","copy()","copy_attrs()","copy_entry()","copy_file()","copy_stream()","coredump?()","cos()","cos!()","cosh()","cosh!()","count()","count_observers()","covector()","cp()","cp()","cp_r()","create()","create()","create()","create()","create_component()","create_composite_component()","create_header()","create_makefile()","create_slave()","create_table()","create_table()","current_group()","current_snapshot_repo_url()","data()","data_file()","data_file()","datadir()","datetime_format()","datetime_format=()","debug()","debug()","debug=()","debug=()","debug=()","debug?()","debug_command()","debug_eval()","debug_funcname()","debug_method_info()","debug_print_help()","debug_silent_eval()","debug_thread_info()","debug_variable_info()","decode64()","def_alias()","def_alias()","def_alias()","def_alias()","def_class()","def_delegator()","def_delegator()","def_delegators()","def_delegators()","def_e2message()","def_e2message()","def_e2message()","def_e2message()","def_erb_method()","def_exception()","def_exception()","def_exception()","def_exception()","def_head_option()","def_instance_delegator()","def_instance_delegators()","def_method()","def_module()","def_option()","def_single_delegator()","def_single_delegators()","def_system_command()","def_tail_option()","default()","default_classpath_variables()","default_components()","default_components()","default_encoding()","default_encoding()","default_encoding()","default_encoding()","default_encoding=()","default_encoding=()","default_encoding=()","default_encoding=()","default_format()","default_master?()","default_master?()","default_options()","default_record_separator()","default_record_separator=()","default_system_path()","default_system_path=()","define()","define()","define()","define_aliases()","define_aliases()","define_aliases()","define_head()","define_tail()","define_task()","deflate()","delegate()","delegate()","delegating_block()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete?()","delete_cmd()","delete_cmd()","delete_cmd()","delete_cmd()","delete_field()","delete_if()","delete_if()","delete_if()","delete_observer()","delete_observers()","delete_slaves()","delete_slaves()","delete_slaves()","delete_slaves()","deleted?()","deleted?()","deleted?()","deleted?()","deleted?()","depend_rules()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies()","deq()","deq()","deq()","descend()","det()","det_e()","detect_implicit()","detect_vcs()","determinant()","determinant_e()","diagonal()","diagonal?()","difference()","dir()","dir_config()","disconnecting()","display()","display()","display_expression()","display_expressions()","display_frames()","display_list()","divide()","do_one_event()","do_one_event()","do_one_event()","do_one_event()","do_one_event()","doc()","document()","download()","download()","download()","download()","download()","download_m2_snapshot()","dummy_makefile()","dump()","dump()","dump()","dump_stream()","dump_stream()","dump_yaml()","dup()","duration()","e2mm_message()","e2mm_message()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each2()","each_address()","each_address()","each_address()","each_address()","each_child()","each_document()","each_filename()","each_name()","each_name()","each_name()","each_name()","each_node()","each_option()","each_option()","each_prime()","each_resource()","each_strongly_connected_component()","each_strongly_connected_component_from()","each_with_index()","eigen()","eigensystem()","elapsed()","element()","element()","elements()","elements_to_f()","elements_to_f()","elements_to_i()","elements_to_i()","elements_to_r()","elements_to_r()","emitter()","empty()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","enable_config()","encode64()","encoding()","encoding()","encoding()","encoding()","encoding=()","encoding=()","encoding=()","encoding=()","encoding_convert_from()","encoding_convert_from()","encoding_convert_from()","encoding_convert_from()","encoding_convert_to()","encoding_convert_to()","encoding_convert_to()","encoding_convert_to()","encoding_convertfrom()","encoding_convertfrom()","encoding_convertfrom()","encoding_convertfrom()","encoding_convertto()","encoding_convertto()","encoding_convertto()","encoding_convertto()","encoding_name()","encoding_name()","encoding_name()","encoding_name()","encoding_obj()","encoding_obj()","encoding_obj()","encoding_obj()","encoding_table()","encoding_table()","encoding_table()","encoding_table()","engine()","engine?()","engines()","enq()","enq()","enq()","enq()","ensure_gem_subdirectories()","entry()","entry()","environment()","environment()","eql?()","eql?()","eql?()","error()","error()","error()","error?()","error_message()","escape()","eta()","eval()","eval()","eval()","eval()","eval_callback()","eval_callback()","eval_input()","eval_proc()","eval_proc()","eval_proc()","eval_proc()","eval_str()","eval_str()","eval_str()","eval_str()","eval_string()","eval_string()","eval_string()","eval_string()","example_failed()","example_passed()","example_pending()","except()","exclude()","exclude()","exclude()","exclude()","exclude()","exclude()","exclude()","exclude()","exclude()","exclude()","exclude=()","exclude_libs()","exclude_libs=()","excluded_directories()","excn_handle()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","exit()","exit()","exit()","exit()","exit!()","exit!()","exit!()","exit!()","exited?()","exp()","exp!()","expand()","expand_path()","expect()","expectations()","expose_cmd()","expose_cmd()","expose_cmd()","expose_cmd()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extended()","extended()","extension()","extension()","extract()","facet_component()","fail()","fail()","fail_download()","failures_to()","family_addrinfo()","fatal()","fatal?()","fetch()","fetch()","fiddle?()","field()","field?()","field_row?()","fields()","file()","file()","file()","file_path()","filename()","fill_breakable()","filter()","filter()","filter_backtrace()","find()","find()","find_executable()","find_files()","find_header()","find_index()","find_library()","find_proxy()","find_type()","finish()","finished?()","finished?()","first?()","first?()","first?()","first_time()","flatten()","flatten!()","flush()","flush()","for()","force_default_encoding=()","force_default_encoding=()","force_default_encoding=()","force_default_encoding=()","force_default_encoding?()","force_default_encoding?()","force_default_encoding?()","force_default_encoding?()","force_quotes?()","foreach()","foreach()","format()","format()","format_frame()","frame_set_pos()","framework()","framework=()","framework_detection_exclusion_component()","frameworks()","freeze()","from()","from()","from()","from()","from()","from_java_properties()","from_path()","from_prime_division()","from_zip()","gem()","generate()","generate()","generate()","generate()","generate()","generate()","generate_compile_output()","generate_content()","generate_initial_order_entries()","generate_lib()","generate_line()","generate_module_lib()","generate_project_dependency()","generic_parser()","get()","get_bgerror_handler()","get_bgerror_handler()","get_cb_entry()","get_cb_entry()","get_eventloop_tick()","get_eventloop_tick()","get_eventloop_tick()","get_eventloop_tick()","get_eventloop_tick()","get_eventloop_weight()","get_eventloop_weight()","get_eventloop_weight()","get_eventloop_weight()","get_eventloop_weight()","get_limit()","get_limit()","get_limit()","get_limit()","get_no_event_wait()","get_no_event_wait()","get_no_event_wait()","get_no_event_wait()","get_no_event_wait()","get_option()","get_thread()","getaddress()","getaddress()","getaddress()","getaddress()","getaddress()","getaddress_orig()","getaddresses()","getaddresses()","getaddresses()","getaddresses()","getname()","getname()","getname()","getname()","getnames()","getnames()","getnames()","getnames()","getopts()","getopts()","getopts()","getresource()","getresources()","gets()","getwd()","group()","group()","group()","group()","group_path()","group_sub()","growl_notify()","guard()","guard_inspect_key()","guess()","guess()","gunzip()","gzip()","h()","has?()","has?()","has_content?()","has_mainwindow?()","has_mainwindow?()","has_mainwindow?()","has_mainwindow?()","has_mainwindow?()","hash()","hash()","hash()","hash_to_file_name()","have_const()","have_framework()","have_func()","have_header()","have_library()","have_macro()","have_struct_member()","have_type()","have_var()","header?()","header_convert()","header_converters()","header_row?()","header_row?()","headers()","headers()","headers()","help()","help()","help()","help()","hermitian?()","hex()","hidden_cmds()","hidden_cmds()","hidden_cmds()","hidden_cmds()","hide_cmd()","hide_cmd()","hide_cmd()","hide_cmd()","home()","host()","host=()","html_escape()","hton()","http()","http=()","httpd()","httpdate()","httpdate()","https()","https=()","human()","id()","id()","identical?()","identity()","imag()","image_obj()","imaginary()","iml()","iml?()","import()","in_service?()","inc()","inc()","inc()","include()","include()","include()","include()","include()","include()","include()","include()","include()","include?()","include?()","include?()","include?()","included()","included?()","incompatible_argument_styles()","incompatible_argument_styles()","incremental()","index()","index()","inflate()","info()","info()","info?()","inherited()","inherited()","init_ip_env()","init_ip_env()","init_ip_internal()","init_ip_internal()","initial_components()","initial_components()","initialize_copy()","initialize_copy()","initialize_copy()","inject_component()","inject_components()","inner_product()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","install()","install()","install()","install()","install_cmd()","install_cmd()","install_system_commands()","installed?()","installed_version()","installed_version()","instance()","instance()","instance()","instance_delegate()","int_from_prime_division()","integration()","integration()","interrupt()","intersection()","into()","into()","into()","inv()","invalid_namespace?()","invalid_namespace?()","invalid_namespace?()","invalid_namespace?()","invalid_namespace?()","inverse()","invoke_hidden()","invoke_hidden()","invoke_hidden()","invoke_hidden()","invoke_hidden_on_global()","invoke_hidden_on_global()","invoke_hidden_on_global()","invoke_hidden_on_global()","invoke_hidden_on_namespace()","invoke_hidden_on_namespace()","invoke_hidden_on_namespace()","invoke_hidden_on_namespace()","ip6_arpa()","ip6_int()","ip_name()","ip_name()","ip_name()","ip_name()","ipr()","ipr?()","ipv4?()","ipv4_compat()","ipv4_compat?()","ipv4_mapped()","ipv4_mapped?()","ipv6?()","ipv6only!()","irb_abort()","irb_at_exit()","irb_exit()","is_rubytk?()","iseuc()","iseuc()","isjis()","isjis()","iso8601()","iso8601()","issjis()","issjis()","isutf8()","isutf8()","jar_path()","java()","java()","java_args()","java_args()","java_args=()","java_platform?()","javac()","javac()","javadoc()","javadoc()","javadoc()","javadoc_artifact()","jdk_version()","jdk_version()","jobs()","join()","join()","join()","join()","join()","join_nowait()","join_nowait()","jrebel_args()","jrebel_home()","jrebel_props()","jruby()","jruby_artifact()","jruby_gem()","jruby_home()","jruby_installed?()","kconv()","kconv()","keep_if()","key?()","keys()","kill()","language()","last_error()","last_error=()","last_failures()","last_modified()","latest_load_paths()","latest_rubygems_version()","latest_spec_for()","latest_version_for()","launch()","launch()","launch()","launch()","launch()","launch()","launch()","layout()","layout=()","length()","length()","length()","level=()","line_at()","link()","list()","list()","listen()","ln()","ln()","ln_s()","ln_sf()","load()","load()","load()","load()","load()","load()","load()","load()","load_document()","load_documents()","load_env_plugins()","load_file()","load_file()","load_path_insert_index()","load_plugin_files()","load_plugins()","load_stream()","load_stream()","load_yaml()","loaded_path?()","local()","local=()","local_task()","locate()","location_of_caller()","log()","log()","log()","log()","log!()","log10()","log10!()","log2()","log2!()","log=()","logger()","logger=()","lookup()","lower_triangular?()","lup()","lup_decomposition()","m2_repo_var()","magnitude()","main()","main_dependencies()","main_output_dir()","main_source_directories()","mainloop()","mainloop()","mainloop()","mainloop()","mainloop()","mainloop()","mainloop()","mainloop_abort_on_exception()","mainloop_abort_on_exception()","mainloop_abort_on_exception()","mainloop_abort_on_exception()","mainloop_abort_on_exception=()","mainloop_abort_on_exception=()","mainloop_abort_on_exception=()","mainloop_abort_on_exception=()","mainloop_watchdog()","mainloop_watchdog()","mainloop_watchdog()","mainloop_watchdog()","mainloop_watchdog()","make_safe()","make_safe()","make_safe()","make_safe()","make_safe()","make_switch()","make_thread_list()","makedirs()","managed()","manipulable?()","manipulable?()","manipulable?()","manipulable?()","manipulable?()","manipulable?()","map()","map()","map!()","map2()","mark_trusted()","mark_trusted()","mark_trusted()","mark_trusted()","marshal_dump()","marshal_dump()","marshal_load()","marshal_load()","marshal_version()","mask()","mask!()","master?()","master?()","master?()","master?()","match()","max()","max=()","maybe_install_jruby()","measure()","member?()","memberwise()","merge()","merge()","message()","message()","message()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","methods()","minor()","mkdir()","mkdir()","mkdir_p()","mkmf()","mkpath()","mkpath()","mktmpdir()","modifiable()","module_root_component()","modules_component()","mon_enter()","mon_exit()","mon_synchronize()","mon_try_enter()","mountpoint?()","move()","move()","mu_extended()","mu_lock()","mu_locked?()","mu_synchronize()","mu_try_lock()","mu_unlock()","mutex()","mutex()","mutex()","mutex()","mutex()","mutex()","mv()","mv()","name()","name()","name=()","native()","natures()","natures=()","need()","needed?()","needed?()","nest()","nest()","net_excluded_directories()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_cond()","new_document()","new_master()","new_master()","new_ntoh()","new_ostruct_member()","new_runtime()","new_safetk()","new_safetk()","new_safe_slave()","new_safe_slave()","new_slave()","new_slave()","new_trusted_slave()","new_trusted_slave()","next()","next()","next()","next()","next()","next_to()","next_wait()","next_wait()","no_iml()","no_ipr()","norm()","normal?()","normalize()","normalize_path()","notify()","notify_observers()","notify_send()","ns()","ns?()","ntop()","num_waiting()","num_waiting()","object_address_group()","object_group()","object_maker()","off()","on()","on()","on_define()","on_head()","on_tail()","onload()","only()","only_run()","only_run_failed()","open()","open()","open()","open()","open()","open()","open()","operation()","options()","options()","options()","options=()","order()","order!()","order!()","ordering=()","orthogonal?()","output()","output()","output_value()","package()","package_with_javadoc()","package_with_sources()","packages()","packaging()","parent()","parent()","parent=()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse!()","parse!()","parse_csv()","parse_documents()","parse_file()","parse_file()","parse_line()","parse_stream()","parser()","parser()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path_to()","path_to_bin()","paths()","paths=()","pattern()","pattern()","pattern_match()","percentage()","permutation?()","permute()","permute!()","permute!()","pipeline()","pipeline_r()","pipeline_rw()","pipeline_start()","pipeline_w()","platforms()","platforms=()","pom()","pom_xml()","pop()","pop()","pop_inspect_key()","popd()","popdir()","popen2()","popen2e()","popen3()","post_build()","post_install()","post_reset()","post_uninstall()","power!()","power!()","power!()","pp()","pp()","pp()","pp()","pp_hash()","pp_object()","pre_install()","pre_reset()","pre_uninstall()","prefix()","prepare()","prepend()","pretty_inspect()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_inspect()","pretty_print_instance_variables()","prime?()","prime?()","prime_division()","prime_division()","primes()","primes_so_far()","print_profile()","procedure()","profile()","profiles()","program_name()","progress()","project()","project()","project_details_component()","project_root_manager_component()","projects()","projects()","promote_load_path()","prompt()","proper_subset?()","proper_superset?()","properties()","properties()","protected_methods()","providers()","proxy()","proxy_uri()","prune()","pseudo_toplevel_evaluable=()","pseudo_toplevel_evaluable?()","public_methods()","push()","push()","push()","push()","push()","push()","push_inspect_key()","pushd()","pushdir()","puts()","pwd()","quick_emit()","r()","random_bytes()","random_number()","rank()","rank_e()","rate()","rb_appsend()","read()","read()","read()","read()","read()","read()","read()","read_binary()","read_type_class()","readline()","readline()","readlines()","readlines()","ready?()","real()","real?()","realtime()","reason()","rebel_jar()","recover()","rect()","rectangular()","recursion_limit()","recursion_limit()","recursion_limit()","recursion_limit()","recursive_task()","recursive_with_dot_files()","refresh()","regexp()","register()","regular?()","reject()","reject()","reject()","reject!()","relative()","relative?()","relative_dir_inside_dir?()","relative_path()","relative_path_from()","release()","release_to()","release_to=()","remote()","remote=()","remove()","remove()","remove_dir()","remove_entry()","remove_entry_secure()","remove_file()","remove_tk_procs()","remove_tk_procs()","render()","replace()","replace_extension()","reply()","report()","report_dir()","report_to()","report_to()","report_to()","reports()","reports=()","repositories()","required_location()","requirement=()","requirement?()","requirement?()","requirement_hash()","requires()","resolve_path()","resolve_path()","resolve_path_from_base()","resolver()","resources()","resources()","respond_to_missing?()","restart()","restart()","restart()","restart()","restart()","restart()","result()","resume()","resume_all()","return_headers?()","reverse()","rewind()","rewind()","rewind()","rewind()","rewind()","rfc2822()","rfc2822()","rfc822()","rfc822()","rjb()","rm()","rm()","rm_f()","rm_r()","rm_rf()","rm_rf()","rmdir()","rmdir()","rmtree()","rmtree()","root()","root()","root()","root()","root?()","root?()","root?()","roots()","round()","row()","row_size()","row_vector()","row_vectors()","rows()","rsqrt()","ruby()","ruby()","ruby_version()","run()","run()","run()","run()","run()","run()","run()","run()","run_against()","run_tests()","runner()","runner?()","runner_config()","runner_config()","runner_content()","runners()","running_mainloop?()","running_mainloop?()","safe?()","safe?()","safe?()","safe?()","safe?()","safe_base?()","safe_base?()","safe_base?()","safe_base?()","safe_base?()","safe_level()","safe_level()","safe_level()","safe_level()","safe_level=()","safe_level=()","safe_level=()","safe_level=()","safe_unlink()","safeip_add_to_access_path()","safeip_add_to_access_path()","safeip_configinfo()","safeip_configinfo()","safeip_configure()","safeip_configure()","safeip_delete()","safeip_delete()","safeip_find_in_access_path()","safeip_find_in_access_path()","safeip_set_log_cmd()","safeip_set_log_cmd()","satisfied_by?()","satisfied_by?()","scala_home()","scalac_options()","scalar()","scalaz_dependencies()","scanf()","scanf()","scanf()","search()","searcher()","select()","select()","select()","select()","select()","select!()","select_by_lang()","select_by_lang()","select_by_lang()","select_by_name()","select_by_name()","select_by_name()","select_from()","selected?()","send()","send()","separator()","seplist()","serve()","set()","set()","set_backtrace()","set_bgerror_handler()","set_bgerror_handler()","set_cb_error()","set_cb_error()","set_eoutvar()","set_error()","set_eventloop_tick()","set_eventloop_tick()","set_eventloop_tick()","set_eventloop_tick()","set_eventloop_tick()","set_eventloop_weight()","set_eventloop_weight()","set_eventloop_weight()","set_eventloop_weight()","set_eventloop_weight()","set_get_line_procs()","set_last_thread()","set_last_thread()","set_limit()","set_limit()","set_limit()","set_limit()","set_log()","set_no_event_wait()","set_no_event_wait()","set_no_event_wait()","set_no_event_wait()","set_no_event_wait()","set_option()","set_options()","set_safe_level()","set_safe_level()","set_safe_level()","set_safe_level()","set_suspend()","set_trace()","set_trace()","set_trace_all()","settings()","setup()","setup()","setup()","setup()","sh()","share_stderr()","share_stderr()","share_stderr()","share_stderr()","share_stdin()","share_stdin()","share_stdin()","share_stdin()","share_stdio()","share_stdio()","share_stdio()","share_stdio()","share_stdout()","share_stdout()","share_stdout()","share_stdout()","shell()","shellescape()","shellescape()","shelljoin()","shelljoin()","shellsplit()","shellsplit()","shellwords()","shift()","shift()","shift()","short_names()","shutdown()","signal()","signal()","signal_handle()","signal_status()","simplelist()","sin()","sin!()","single_delegate()","singleline_format()","singleline_pp()","singular?()","sinh()","sinh!()","size()","size()","size()","size()","skip_blanks?()","skip_content!()","skip_content?()","slave?()","slave?()","slave?()","slave?()","slaves()","slaves()","slaves()","slaves()","sleep()","slice_ary()","snapshot?()","source_index()","sources()","sources()","sources=()","sources_artifact()","spec()","specify()","specify()","specify()","specs()","specs()","specs()","split()","sqrt()","sqrt()","sqrt!()","square?()","start()","start()","start()","start()","start()","start()","start_profile()","starting()","stdout()","stdout()","stdout=()","stop()","stop()","stop_next()","stop_profile()","stopped?()","stopped?()","stopping()","strict_decode64()","strict_encode64()","strongly_connected_components()","strptime()","struct()","subdomain_of?()","subset?()","subst()","subtract()","succ()","succ()","succ()","succ()","succ()","succ()","success?()","suffix()","suffix_pattern()","suffixes()","summarize()","summarize()","summarize()","superset?()","suspend()","suspend_all()","suspend_context()","suspend_input_method()","suspend_name()","suspend_workspace()","switch_name()","symlink()","symmetric?()","sync_exclusive?()","sync_exclusive?()","sync_extend()","sync_extend()","sync_inspect()","sync_inspect()","sync_lock()","sync_lock()","sync_locked?()","sync_locked?()","sync_shared?()","sync_shared?()","sync_synchronize()","sync_synchronize()","sync_try_lock()","sync_try_lock()","sync_unlock()","sync_unlock()","synchronize()","system_path=()","t()","table()","table()","table()","tag_release()","tag_release()","tag_release()","tagurize()","taint()","tan()","tan!()","tanh()","tanh!()","tar()","target()","target()","target()","target=()","task()","tcp()","tcp_server_loop()","tcp_server_sockets()","teardown()","teardown()","terminate()","terminate()","terminate()","terminated?()","test()","test()","test=()","test_dependencies()","test_dependency_details()","test_output_dir()","test_source_directories()","tests()","tests()","tests()","tests()","text()","text()","thnum()","thread_eval_proc()","thread_eval_proc()","thread_eval_proc()","thread_eval_proc()","thread_list()","thread_list_all()","time()","time()","timeout()","timeout()","timestamp()","title()","tk_cmd_tbl()","tk_cmd_tbl()","tk_object_table()","tk_object_table()","tk_tcl2ruby()","tk_windows()","tk_windows()","tmpdir()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_csv()","to_csv()","to_csv()","to_eval()","to_eval()","to_eval()","to_eval()","to_hash()","to_hash()","to_hash()","to_hash()","to_i()","to_i()","to_int()","to_java()","to_java_properties()","to_json()","to_name()","to_name()","to_range()","to_requirement_spec()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_set()","to_spec()","to_spec()","to_spec_hash()","to_string()","to_sym()","to_sym()","to_sym()","to_sym()","toeuc()","toeuc()","tojis()","tojis()","tolocale()","tolocale()","top()","top()","tosjis()","tosjis()","total()","touch()","touch()","toutf16()","toutf16()","toutf32()","toutf32()","toutf8()","toutf8()","tr()","trace()","trace()","trace?()","trace?()","trace_func()","trace_func()","transaction()","transfer()","transfer_stderr()","transfer_stderr()","transfer_stderr()","transfer_stderr()","transfer_stdin()","transfer_stdin()","transfer_stdin()","transfer_stdin()","transfer_stdio()","transfer_stdio()","transfer_stdio()","transfer_stdio()","transfer_stdout()","transfer_stdout()","transfer_stdout()","transfer_stdout()","transform()","transitive()","transpose()","trust()","try_activate()","try_const()","try_implicit()","try_mon_enter()","try_type()","tsort()","tsort_each()","tsort_each_child()","tsort_each_node()","u()","udp_server_loop()","udp_server_loop_on()","udp_server_recv()","udp_server_sockets()","ui()","unalias_command()","unconverted_fields?()","undef_system_command()","uninstall()","uninstall_cmd()","uninstall_cmd()","union()","unit()","unitary?()","unix()","unix_server_loop()","unix_server_socket()","unknown()","unlink()","unresolved_deps()","untaint()","untrust()","unversioned_spec()","unversioned_spec()","unzip()","update_classpath()","update_manifest()","update_version_to_next()","update_version_to_next()","update_version_to_next()","upload()","upload()","upload()","upload()","upload()","upload()","upload_task()","upper_bound()","upper_bound=()","upper_triangular?()","uptodate?()","url_encode()","url_for_path()","urlsafe_base64()","urlsafe_decode64()","urlsafe_encode64()","use()","use_fsc()","use_installed?()","use_paths()","user()","user_home()","using()","using()","using()","using()","using()","using()","using()","uuid()","values()","values_at()","values_at()","values_at()","var_list()","vcs_component()","ver()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version=()","version?()","version?()","version?()","version_str()","version_str()","version_without_build()","version_without_build()","virtual()","wait()","wait()","wait_on_mainloop=()","wait_on_mainloop=()","wait_on_mainloop?()","wait_on_mainloop?()","wait_until()","wait_while()","wait_writable()","waiting()","warn()","warn()","warn()","warn?()","warn_without_color()","weakref_alive?()","width()","win32_last_error()","win32_last_error=()","win_os?()","win_platform?()","window()","with()","with()","with()","with()","with()","with()","with()","with()","with_config()","with_object()","with_uncompressed_tar()","wrapper()","write()","write()","write()","write()","write()","write_headers?()","xmlschema()","xmlschema()","zero()","zero?()","zip()","zone_offset()","|()","|()","|()","~()","changelog","license","notice","readme"],"longSearchIndex":["abbrev","addrinfo","array","base64","basicsocket","benchmark","benchmark::tms","bignum","buildr","buildr::actsasartifact","buildr::ant","buildr::apt","buildr::archivetask","buildr::archivetask::merge","buildr::artifact","buildr::artifactnamespace","buildr::artifactnamespace::artifactrequirement","buildr::artifactsearch","buildr::build","buildr::cc","buildr::cctask","buildr::checks","buildr::checks::expectation","buildr::clojure","buildr::cobertura","buildr::cobertura::coberturacheck","buildr::compile","buildr::compiletask","buildr::compiler","buildr::compiler::ecj","buildr::compiler::externaljavac","buildr::compiler::javac","buildr::concattask","buildr::doc","buildr::doc::base","buildr::doc::doctask","buildr::doc::groovydoc","buildr::doc::groovydocdefaults","buildr::doc::javadoc","buildr::doc::javadocdefaults","buildr::doc::scaladoc","buildr::doc::scaladocdefaults","buildr::doc::vscaladoc","buildr::eclipse","buildr::eclipse::eclipse","buildr::eclipse::java","buildr::eclipse::options","buildr::eclipse::plugin","buildr::eclipse::scala","buildr::emma","buildr::extension","buildr::extension::classmethods","buildr::filter","buildr::filter::mapper","buildr::gitrelease","buildr::groovy","buildr::groovy::easyb","buildr::groovy::groovysh","buildr::groovy::groovyc","buildr::hgrelease","buildr::integrationteststask","buildr::intellijidea","buildr::intellijidea::ideafile","buildr::intellijidea::ideamodule","buildr::intellijidea::ideaproject","buildr::intellijidea::projectextension","buildr::jbehave","buildr::jmock","buildr::jrebel","buildr::junit","buildr::junit::report","buildr::layout","buildr::layout::default","buildr::multitest","buildr::optionalartifact","buildr::options","buildr::options::proxies","buildr::pom","buildr::package","buildr::packagegemtask","buildr::packaging","buildr::packaging::java","buildr::packaging::java::aartask","buildr::packaging::java::eartask","buildr::packaging::java::jartask","buildr::packaging::java::manifest","buildr::packaging::java::wartask","buildr::packaging::scala","buildr::processstatus","buildr::project","buildr::rspec","buildr::repositories","buildr::resourcestask","buildr::run","buildr::run::base","buildr::run::javarunner","buildr::run::runtask","buildr::scala","buildr::scala::check","buildr::scala::mockito","buildr::scala::projectextension","buildr::scala::scalashell","buildr::scala::scalatest","buildr::scala::scalac","buildr::scala::scalac::javac","buildr::scala::scalacoptions","buildr::scala::specs","buildr::scala::specs2","buildr::settings","buildr::shell","buildr::shell::base","buildr::shell::beanshell","buildr::shell::clojure","buildr::shell::jirb","buildr::shell::shelltask","buildr::svnrelease","buildr::tartask","buildr::test","buildr::test::skipifnotest","buildr::testframework","buildr::testframework::base","buildr::testframework::jrubybased","buildr::testframework::jrubybased::classmethods","buildr::testframework::java","buildr::testframework::testresult","buildr::testframework::testresult::error","buildr::testframework::testresult::yamlformatter","buildr::testng","buildr::testtask","buildr::unzip","buildr::util","buildr::versionrequirement","buildr::ziptask","cgi","cmath","csv","csv::malformedcsverror","csv::row","csv::table","conditionvariable","debugger__","debugger__::context","dl","date","delegator","digest","digest::class","digest::instance","dir","env","erb","erb::defmethod","erb::util","enumerable","exception2messagemapper","exception2messagemapper::e2mm","fiddle","file","file::stat","fileutils","fileutils::dryrun","fileutils::lowmethods","fileutils::nowrite","fileutils::streamutils_","fileutils::verbose","find","fixnum","float","forwardable","gserver","gem","gem::loaderror","gem::version","getoptlong","getoptlong::ambiguousoption","getoptlong::error","getoptlong::invalidoption","getoptlong::missingargument","getoptlong::needlessargument","hash","io","ipaddr","ipsocket","irb","irb::abort","irb::irb","integer","json","java","java::commands","java::javawrapper","java::options","kconv","kernel","logger","logger::application","logger::formatter","logger::logdevice","logger::logdevice::logdevicemutex","logger::severity","logging","matchdata","math","matrix","module","monitor","monitormixin","monitormixin::conditionvariable","monitormixin::conditionvariable::timeout","multitkip","multitkip::command_queue","multitkip_ok","multitkip_pseudotoplevel_evaluable","mutex_m","numeric","object","object::scala","object::synchronizer","object::synchronizer_m","object::thwait","object::timeouterror","observable","open3","openobject","openstruct","openuri","openuri::httperror","openuri::httpredirect","openuri::meta","openuri::openread","optionparser","optionparser::acceptables","optionparser::ambiguousargument","optionparser::ambiguousoption","optionparser::arguable","optionparser::completinghash","optionparser::completion","optionparser::invalidargument","optionparser::invalidoption","optionparser::list","optionparser::missingargument","optionparser::needlessargument","optionparser::optionmap","optionparser::parseerror","optionparser::switch","optionparser::switch::noargument","optionparser::switch::optionalargument","optionparser::switch::placedargument","optionparser::switch::requiredargument","pp","pp::objectmixin","pp::ppmethods","pp::singleline","pstore","pstore::error","pathname","prettyprint","prettyprint::breakable","prettyprint::group","prettyprint::groupqueue","prettyprint::singleline","prettyprint::text","prime","prime::eratosthenesgenerator","prime::eratosthenessieve","prime::generator23","prime::oldcompatibility","prime::pseudoprimegenerator","prime::trialdivision","prime::trialdivisiongenerator","profiler__","progressbar","psych","psych::badalias","psych::exception","queue","rdoc","rdoc::error","rss","rake","rake::filetask","range","rational","remotetkip","resolv","resolv::dns","resolv::dns::config","resolv::dns::config::nxdomain","resolv::dns::config::otherresolverror","resolv::dns::decodeerror","resolv::dns::encodeerror","resolv::dns::name","resolv::dns::query","resolv::dns::requester","resolv::dns::requester::requesterror","resolv::dns::resource","resolv::dns::resource::any","resolv::dns::resource::cname","resolv::dns::resource::domainname","resolv::dns::resource::generic","resolv::dns::resource::hinfo","resolv::dns::resource::in","resolv::dns::resource::in::a","resolv::dns::resource::in::aaaa","resolv::dns::resource::in::srv","resolv::dns::resource::in::wks","resolv::dns::resource::minfo","resolv::dns::resource::mx","resolv::dns::resource::ns","resolv::dns::resource::ptr","resolv::dns::resource::soa","resolv::dns::resource::txt","resolv::hosts","resolv::ipv4","resolv::ipv6","resolv::resolverror","resolv::resolvtimeout","sockssocket","string_or_failed_format","scanf","scanf::formatspecifier","scanf::formatstring","securerandom","set","shell","shellwords","simpledelegator","singleforwardable","singleton","sizedqueue","socket","socket::udpsource","sortedset","string","struct","syck","sync","sync_m","sync_m::err","sync_m::err::lockmodefailer","sync_m::err::unknownlocker","tcpsocket","tsort","tsort::cyclic","tcltkip","tcltklib","tempfile","tempfile::remover","threaderror","threadswait","time","timeout","timeout::error","tkcomm","tkcomm::tk_cmdtbl","tkcomm::tk_windows","tkcore","tkcore::interp","tkcore::tk_object_table","tracer","udpsocket","uri","uri::file","uri::ftp","uri::generic","uri::http","uri::notfounderror","vector","vector::zerovectorerror","webrick","weakref","weakref::referror","yaml","zip","zip::zipentry","zip::zipentryset","delegator#!()","delegator#!=()","string_or_failed_format::%()","buildr::processstatus#&()","buildr::versionrequirement#&()","ipaddr#&()","set#&()","benchmark::tms#*()","matrix#*()","vector#*()","bignum#**()","fixnum#**()","float#**()","matrix#**()","rational#**()","benchmark::tms#+()","matrix#+()","pathname#+()","set#+()","vector#+()","benchmark::tms#-()","matrix#-()","set#-()","vector#-()","benchmark::tms#/()","matrix#/()","vector#/()","buildr::archivetask#<<()","buildr::archivetask::merge#<<()","buildr::compiler::<<()","buildr::packaging::java::eartask#<<()","buildr::testframework::<<()","csv#<<()","csv::row#<<()","csv::table#<<()","ipaddr#<<()","logger#<<()","multitkip::command_queue#<<()","progressbar#<<()","queue#<<()","set#<<()","sizedqueue#<<()","zip::zipentryset#<<()","ipaddr#<=>()","buildr::processstatus#==()","csv::row#==()","csv::table#==()","delegator#==()","ipaddr#==()","matrix#==()","openstruct#==()","set#==()","vector#==()","ipaddr#===()","buildr::processstatus#>>()","ipaddr#>>()","object#csv()","irb::currentcontext()","object#delegateclass()","object#digest()","exception2messagemapper#fail()","exception2messagemapper#fail()","exception2messagemapper::fail()","exception2messagemapper::fail()","sync_m::err::fail()","sync_m::err::lockmodefailer::fail()","sync_m::err::unknownlocker::fail()","matrix::i()","object#mainloop()","exception2messagemapper#raise()","exception2messagemapper::raise()","exception2messagemapper::raise()","exception2messagemapper#raise()","buildr::artifactnamespace#[]()","buildr::artifactnamespace::[]()","buildr::layout#[]()","csv::row#[]()","csv::table#[]()","matrix#[]()","matrix::[]()","pstore#[]()","prime::trialdivision#[]()","set::[]()","vector::[]()","vector#[]()","buildr::artifactnamespace#[]=()","buildr::layout#[]=()","csv::row#[]=()","csv::table#[]=()","pstore#[]=()","set#^()","buildr::project#_()","multitkip::_default_master()","multitkip::_default_master()","multitkip::_ip_table()","multitkip::_ip_table()","multitkip::_tk_table_list()","multitkip::_tk_table_list()","multitkip#__create_safe_slave_obj()","multitkip#__create_safe_slave_obj()","multitkip#__create_trusted_slave_obj()","multitkip#__create_trusted_slave_obj()","multitkip#__eval()","multitkip#__eval()","remotetkip#__eval()","multitkip::__getip()","multitkip::__getip()","delegator#__getobj__()","simpledelegator#__getobj__()","multitkip::__init_ip_env__()","multitkip::__init_ip_env__()","tcltkip#__initialize__()","multitkip#__invoke()","multitkip#__invoke()","remotetkip#__invoke()","object#__method_missing_alias_for_multitkip__()","tcltkip::__new__()","multitkip#__pseudo_toplevel()","multitkip#__pseudo_toplevel()","multitkip::__pseudo_toplevel()","multitkip::__pseudo_toplevel()","multitkip::__pseudo_toplevel=()","multitkip#__pseudo_toplevel=()","multitkip#__pseudo_toplevel=()","multitkip::__pseudo_toplevel=()","multitkip::__pseudo_toplevel_evaluable=()","multitkip::__pseudo_toplevel_evaluable=()","multitkip#__pseudo_toplevel_evaluable=()","multitkip#__pseudo_toplevel_evaluable=()","multitkip::__pseudo_toplevel_evaluable?()","multitkip#__pseudo_toplevel_evaluable?()","multitkip::__pseudo_toplevel_evaluable?()","multitkip#__pseudo_toplevel_evaluable?()","delegator#__setobj__()","simpledelegator#__setobj__()","multitkip#_add_new_tables()","multitkip#_add_new_tables()","multitkip#_add_tk_procs()","multitkip#_add_tk_procs()","tkcomm::_at()","tkcomm::_callback_entry?()","tkcomm::_callback_entry_class?()","multitkip#_conv_listelement()","multitkip::_conv_listelement()","multitkip#_conv_listelement()","multitkip::_conv_listelement()","remotetkip#_conv_listelement()","tcltklib::_conv_listelement()","multitkip::_create_console()","multitkip::_create_console()","remotetkip#_create_console()","multitkip#_create_slave_object()","multitkip#_create_slave_object()","tkcomm::_curr_cmd_id()","multitkip#_default_delete_hook()","multitkip#_default_delete_hook()","multitkip#_destroy_slaves_of_slaveip()","multitkip#_destroy_slaves_of_slaveip()","singleton#_dump()","multitkip::_eval()","multitkip#_eval()","multitkip#_eval()","multitkip::_eval()","remotetkip#_eval()","multitkip::_eval_with_enc()","multitkip::_eval_with_enc()","multitkip#_eval_with_enc()","multitkip#_eval_with_enc()","remotetkip#_eval_with_enc()","multitkip::_eval_without_enc()","multitkip::_eval_without_enc()","multitkip#_eval_without_enc()","multitkip#_eval_without_enc()","remotetkip#_eval_without_enc()","multitkip#_fromutf8()","multitkip::_fromutf8()","multitkip#_fromutf8()","multitkip::_fromutf8()","remotetkip#_fromutf8()","tkcomm::_fromutf8()","tkcomm::_genobj_for_tkwidget()","multitkip#_get_global_var()","multitkip::_get_global_var()","multitkip::_get_global_var()","multitkip#_get_global_var()","remotetkip#_get_global_var()","multitkip#_get_global_var2()","multitkip::_get_global_var2()","multitkip#_get_global_var2()","multitkip::_get_global_var2()","remotetkip#_get_global_var2()","multitkip#_get_variable()","multitkip::_get_variable()","multitkip::_get_variable()","multitkip#_get_variable()","remotetkip#_get_variable()","multitkip#_get_variable2()","multitkip#_get_variable2()","multitkip::_get_variable2()","multitkip::_get_variable2()","remotetkip#_get_variable2()","multitkip#_init_ip_env()","multitkip#_init_ip_env()","multitkip#_init_ip_internal()","multitkip#_init_ip_internal()","multitkip#_invoke()","multitkip::_invoke()","multitkip#_invoke()","multitkip::_invoke()","remotetkip#_invoke()","multitkip#_invoke_with_enc()","multitkip::_invoke_with_enc()","multitkip#_invoke_with_enc()","multitkip::_invoke_with_enc()","remotetkip#_invoke_with_enc()","multitkip::_invoke_without_enc()","multitkip#_invoke_without_enc()","multitkip#_invoke_without_enc()","multitkip::_invoke_without_enc()","remotetkip#_invoke_without_enc()","multitkip::_ip_id_()","multitkip#_ip_id_()","multitkip::_ip_id_()","multitkip#_ip_id_()","remotetkip#_ip_id_()","tcltkip#_ip_id_()","multitkip#_is_master_of?()","multitkip#_is_master_of?()","remotetkip#_is_master_of?()","singleton::_load()","multitkip::_make_menu_embeddable()","multitkip#_make_menu_embeddable()","multitkip::_make_menu_embeddable()","multitkip#_make_menu_embeddable()","multitkip::_merge_tklist()","multitkip#_merge_tklist()","multitkip#_merge_tklist()","multitkip::_merge_tklist()","remotetkip#_merge_tklist()","tcltklib::_merge_tklist()","tkcomm::_next_cmd_id()","multitkip::_proc_on_current_safelevel()","multitkip#_proc_on_current_safelevel()","multitkip#_proc_on_current_safelevel()","multitkip::_proc_on_current_safelevel()","multitkip#_proc_on_safelevel()","multitkip::_proc_on_safelevel()","multitkip::_proc_on_safelevel()","multitkip#_proc_on_safelevel()","multitkip#_receiver_mainloop()","multitkip#_receiver_mainloop()","multitkip#_remove_tk_procs()","multitkip#_remove_tk_procs()","multitkip::_return_value()","multitkip#_return_value()","multitkip::_return_value()","multitkip#_return_value()","remotetkip#_return_value()","multitkip::_set_global_var()","multitkip#_set_global_var()","multitkip::_set_global_var()","multitkip#_set_global_var()","remotetkip#_set_global_var()","multitkip#_set_global_var2()","multitkip::_set_global_var2()","multitkip#_set_global_var2()","multitkip::_set_global_var2()","remotetkip#_set_global_var2()","multitkip::_set_variable()","multitkip#_set_variable()","multitkip#_set_variable()","multitkip::_set_variable()","remotetkip#_set_variable()","multitkip#_set_variable2()","multitkip::_set_variable2()","multitkip#_set_variable2()","multitkip::_set_variable2()","remotetkip#_set_variable2()","multitkip::_split_tklist()","multitkip::_split_tklist()","multitkip#_split_tklist()","multitkip#_split_tklist()","remotetkip#_split_tklist()","multitkip#_thread_tkwait()","multitkip#_thread_tkwait()","multitkip::_thread_tkwait()","multitkip::_thread_tkwait()","remotetkip#_thread_tkwait()","multitkip::_thread_vwait()","multitkip#_thread_vwait()","multitkip#_thread_vwait()","multitkip::_thread_vwait()","remotetkip#_thread_vwait()","multitkip#_tk_cmd_tbl()","multitkip#_tk_cmd_tbl()","multitkip#_tk_table_list()","multitkip#_tk_table_list()","multitkip#_tk_windows()","multitkip#_tk_windows()","multitkip::_toutf8()","multitkip#_toutf8()","multitkip#_toutf8()","multitkip::_toutf8()","remotetkip#_toutf8()","tkcomm::_toutf8()","multitkip#_unset_global_var()","multitkip#_unset_global_var()","multitkip::_unset_global_var()","multitkip::_unset_global_var()","remotetkip#_unset_global_var()","multitkip::_unset_global_var2()","multitkip#_unset_global_var2()","multitkip::_unset_global_var2()","multitkip#_unset_global_var2()","remotetkip#_unset_global_var2()","multitkip#_unset_variable()","multitkip#_unset_variable()","multitkip::_unset_variable()","multitkip::_unset_variable()","remotetkip#_unset_variable()","multitkip#_unset_variable2()","multitkip::_unset_variable2()","multitkip#_unset_variable2()","multitkip::_unset_variable2()","remotetkip#_unset_variable2()","abbrev::abbrev()","array#abbrev()","multitkip#abort()","multitkip::abort()","multitkip#abort()","multitkip::abort()","optionparser#abort()","pstore#abort()","pathname#absolute?()","resolv::dns::name#absolute?()","optionparser#accept()","optionparser::accept()","optionparser::list#accept()","socket::accept_loop()","buildr::artifactnamespace#accessor()","cmath::acos()","cmath::acos!()","cmath::acosh()","cmath::acosh!()","gem::activate()","benchmark::tms#add()","buildr::archivetask#add()","buildr::compiler::add()","buildr::filter#add()","buildr::packaging::java::eartask#add()","buildr::testframework::add()","buildr::unzip#add()","logger#add()","prettyprint::text#add()","set#add()","benchmark::tms#add!()","set#add?()","buildr::intellijidea::ideaproject#add_artifact()","syck::add_builtin_type()","buildr::intellijidea::ideafile#add_component()","buildr::intellijidea::ideaproject#add_configuration()","syck::add_domain_type()","buildr::intellijidea::ideamodule#add_ejb_facet()","buildr::intellijidea::ideaproject#add_exploded_ear_artifact()","buildr::intellijidea::ideaproject#add_exploded_ejb_artifact()","buildr::intellijidea::ideaproject#add_exploded_war_artifact()","buildr::intellijidea::ideamodule#add_facet()","tracer::add_filter()","buildr::intellijidea::ideaproject#add_gwt_configuration()","buildr::intellijidea::ideamodule#add_gwt_facet()","buildr::intellijidea::ideamodule#add_jpa_facet()","buildr::intellijidea::ideamodule#add_jruby_facet()","buildr::artifactnamespace::artifactrequirement#add_listener()","observable#add_observer()","syck::add_private_type()","csv#add_row()","syck::add_ruby_type()","multitkip::add_tk_procs()","multitkip::add_tk_procs()","buildr::intellijidea::ideafile#add_to_composite_component()","buildr::intellijidea::ideamodule#add_web_facet()","buildr::extension::classmethods#after_define()","buildr::artifactnamespace#alias()","shell::alias_command()","multitkip#alias_delete()","multitkip#alias_delete()","multitkip::alias_delete()","multitkip::alias_delete()","multitkip#alias_info()","multitkip::alias_info()","multitkip::alias_info()","multitkip#alias_info()","multitkip#alias_target()","multitkip::alias_target()","multitkip::alias_target()","multitkip#alias_target()","multitkip#aliases()","multitkip::aliases()","multitkip#aliases()","multitkip::aliases()","multitkip#alive?()","multitkip#alive?()","multitkip::alive?()","multitkip::alive?()","gem::all_load_paths()","threadswait::all_waits()","threadswait::all_waits()","threadswait#all_waits()","threadswait#all_waits()","multitkip#allow_ruby_exit=()","multitkip::allow_ruby_exit=()","multitkip#allow_ruby_exit=()","multitkip::allow_ruby_exit=()","remotetkip#allow_ruby_exit=()","multitkip::allow_ruby_exit?()","multitkip::allow_ruby_exit?()","multitkip#allow_ruby_exit?()","multitkip#allow_ruby_exit?()","remotetkip#allow_ruby_exit?()","buildr::ant#ant()","buildr::emma::ant()","optionparser::list#append()","mutex_m::append_features()","sync_m::append_features()","sync_m::append_features()","buildr::application()","buildr::gitrelease::applies_to?()","buildr::hgrelease::applies_to?()","buildr::svnrelease::applies_to?()","buildr::testframework::base::applies_to?()","buildr::actsasartifact#apply_spec()","buildr::artifactnamespace::artifactrequirement#apply_spec_no_validation()","remotetkip#appsend()","buildr::apt#apt()","java::apt()","java::commands::apt()","tkcomm::array2tk_list()","buildr#artifact()","buildr::artifactnamespace::artifactrequirement#artifact()","buildr::scala::check::artifact()","buildr::scala::specs::artifact()","buildr::scala::specs2::artifact()","buildr::shell::beanshell::artifact()","buildr#artifact_ns()","buildr#artifacts()","buildr::artifactnamespace#artifacts()","buildr::intellijidea::ideaproject#artifacts_component()","pathname#ascend()","cmath::asin()","cmath::asin!()","cmath::asinh()","cmath::asinh!()","multitkip::assign_receiver_and_watchdog()","multitkip::assign_receiver_and_watchdog()","buildr::packaging::java::eartask#associate()","buildr::testtask#associate_with()","cmath::atan()","cmath::atan!()","cmath::atan2()","cmath::atan2!()","cmath::atanh()","cmath::atanh!()","gem::available?()","multitkip#background_call()","multitkip::background_call()","multitkip::background_call()","multitkip#background_call()","multitkip#background_eval()","multitkip::background_eval()","multitkip::background_eval()","multitkip#background_eval()","multitkip#background_eval_proc()","multitkip#background_eval_proc()","multitkip::background_eval_proc()","multitkip::background_eval_proc()","multitkip::background_eval_str()","multitkip::background_eval_str()","multitkip#background_eval_str()","multitkip#background_eval_str()","multitkip#background_eval_string()","multitkip#background_eval_string()","multitkip::background_eval_string()","multitkip::background_eval_string()","optionparser#banner()","optionparser#base()","securerandom::base64()","digest::class::base64digest()","digest::instance#base64digest()","digest::instance#base64digest!()","buildr::project#base_dir()","buildr::project#base_dir=()","buildr::intellijidea::ideafile#base_directory()","buildr::intellijidea::ideamodule#base_document()","buildr::intellijidea::ideaproject#base_document()","buildr::extension::classmethods#before_define()","benchmark::benchmark()","buildr::artifactsearch#best_version()","multitkip::bg_call()","multitkip#bg_call()","multitkip#bg_call()","multitkip::bg_call()","multitkip#bg_eval()","multitkip::bg_eval()","multitkip#bg_eval()","multitkip::bg_eval()","multitkip#bg_eval_proc()","multitkip#bg_eval_proc()","multitkip::bg_eval_proc()","multitkip::bg_eval_proc()","multitkip::bg_eval_str()","multitkip::bg_eval_str()","multitkip#bg_eval_str()","multitkip#bg_eval_str()","multitkip#bg_eval_string()","multitkip::bg_eval_string()","multitkip::bg_eval_string()","multitkip#bg_eval_string()","multitkip::bgerror()","multitkip::bgerror()","gem::bin_path()","gem::binary_mode()","addrinfo#bind()","exception2messagemapper#bind()","exception2messagemapper#bind()","tkcomm#bind()","udpsocket#bind()","tkcomm#bind_all()","tkcomm#bind_append()","tkcomm#bind_append_all()","tkcomm#bind_remove()","tkcomm#bind_remove_all()","tkcomm#bindinfo()","tkcomm#bindinfo_all()","gem::bindir()","string#block_scanf()","benchmark::bm()","benchmark::bmbm()","prettyprint::group#break()","prettyprint::group#break?()","prettyprint#break_outmost_groups()","debugger__::break_points()","debugger__#break_points()","prettyprint#breakable()","prettyprint::singleline#breakable()","conditionvariable#broadcast()","monitormixin::conditionvariable#broadcast()","buildr::build#build()","buildr::settings#build()","matrix::build()","buildr::run::base#build?()","buildr::shell::clojure#build?()","buildr::eclipse::eclipse#builders()","buildr::eclipse::eclipse#builders=()","buildr::intellijidea::ideamodule#buildr_project=()","csv::table#by_col()","csv::table#by_col!()","csv::table#by_col_or_row()","csv::table#by_col_or_row!()","csv::table#by_row()","csv::table#by_row!()","prime::trialdivision#cache()","gem::cache_dir()","gem::cache_gem()","logger::formatter#call()","multitkip#call()","multitkip#call()","multitkip::call()","multitkip::call()","tkcore#call()","tkcore::callback()","tkcore#callback_break()","tkcore#callback_continue()","tkcore#callback_return()","optionparser#candidate()","optionparser::completion#candidate()","optionparser::completion::candidate()","open3::capture2()","open3::capture2e()","open3::capture3()","multitkip::cb_entry_class()","multitkip::cb_entry_class()","multitkip#cb_error()","multitkip#cb_error()","multitkip#cb_eval()","multitkip::cb_eval()","multitkip::cb_eval()","multitkip#cb_eval()","cmath::cbrt()","cmath::cbrt!()","buildr::cc#cc()","fileutils::cd()","shell::cd()","shell#cd()","observable#changed()","observable#changed?()","progressbar#changed?()","openuri::meta#charset()","fileutils::chdir()","shell#chdir()","buildr::checks#check()","buildr::gitrelease#check()","buildr::hgrelease#check()","buildr::svnrelease#check()","debugger__#check_break_points()","pp::ppmethods#check_inspect_key()","object#check_signedness()","object#check_sizeof()","debugger__::context#check_suspend()","pathname#children()","fileutils::chmod()","object#chmod()","fileutils::chmod_r()","fileutils::chown()","fileutils::chown_r()","buildr::testtask#classes()","buildr::scala::check::classifier()","set#classify()","buildr::compiletask#classpath()","buildr::testtask#classpath()","java::classpath()","java::javawrapper#classpath()","buildr::compiletask#classpath=()","buildr::testtask#classpath=()","java::javawrapper#classpath=()","buildr::eclipse::eclipse#classpath_containers()","buildr::eclipse::eclipse#classpath_containers=()","java::commands::classpath_from()","buildr::eclipse::eclipse#classpath_variables()","buildr::archivetask#clean()","buildr::build#clean()","pathname#cleanpath()","buildr::artifactnamespace#clear()","buildr::artifactnamespace::clear()","buildr::filter#clear()","buildr::project::clear()","buildr::testtask#clear()","buildr::testtask::clear()","progressbar#clear()","queue#clear()","set#clear()","gem::clear_paths()","debugger__::context#clear_suspend()","matrix#clone()","singleton#clone()","vector#clone()","buildr::testframework::testresult::yamlformatter#close()","logger#close()","logger::logdevice#close()","multitkip::command_queue#close()","resolv::dns#close()","tempfile#close()","tempfile#close!()","fileutils::cmp()","matrix#coerce()","vector#coerce()","matrix#collect()","vector#collect()","set#collect!()","vector#collect2()","matrix#column()","matrix::column_vector()","matrix#column_vectors()","matrix::columns()","pp::ppmethods#comma_breakable()","pstore#commit()","fileutils::compare_file()","fileutils::compare_stream()","buildr::compile#compile()","buildr::testtask#compile()","buildr::compiletask#compiler()","buildr::compiler::compilers()","optionparser::completion#complete()","optionparser::list#complete()","matrix#component()","vector#component()","buildr::packaging::java::eartask#component_clone()","buildr::intellijidea::ideafile#components()","buildr::versionrequirement#composed?()","buildr#concat()","irb::conf()","gem::config_file()","gem::configuration()","gem::configuration=()","buildr::intellijidea::ideaproject#configurations_component()","matrix#conj()","matrix#conjugate()","addrinfo#connect()","udpsocket#connect()","basicsocket#connect_address()","addrinfo#connect_from()","addrinfo#connect_to()","gserver#connecting()","gserver#connections()","buildr::archivetask#contain?()","rake::filetask#contain?()","zip::zipentry#contain?()","buildr::artifact#content()","openuri::meta#content_encoding()","openuri::meta#content_type()","debugger__#context()","debugger__::context()","csv#convert()","optionparser::completion#convert()","csv#converters()","object#convertible_int()","fileutils::copy()","buildr::artifactnamespace::artifactrequirement#copy_attrs()","fileutils::copy_entry()","fileutils::copy_file()","fileutils::copy_stream()","buildr::processstatus#coredump?()","cmath::cos()","cmath::cos!()","cmath::cosh()","cmath::cosh!()","progressbar#count()","observable#count_observers()","vector#covector()","fileutils::cp()","object#cp()","fileutils::cp_r()","buildr::versionrequirement::create()","resolv::dns::name::create()","resolv::ipv4::create()","resolv::ipv6::create()","buildr::intellijidea::ideafile#create_component()","buildr::intellijidea::ideafile#create_composite_component()","object#create_header()","object#create_makefile()","remotetkip#create_slave()","multitkip::create_table()","multitkip::create_table()","prettyprint#current_group()","buildr::artifact#current_snapshot_repo_url()","resolv::dns::resource::txt#data()","buildr::cobertura::data_file()","buildr::emma::data_file()","gem::datadir()","logger#datetime_format()","logger#datetime_format=()","buildr::options#debug()","logger#debug()","buildr::options#debug=()","shell::debug=()","shell#debug=()","logger#debug?()","debugger__#debug_command()","debugger__#debug_eval()","debugger__#debug_funcname()","debugger__#debug_method_info()","debugger__#debug_print_help()","debugger__#debug_silent_eval()","debugger__::debug_thread_info()","debugger__#debug_variable_info()","base64#decode64()","multitkip#def_alias()","multitkip::def_alias()","multitkip::def_alias()","multitkip#def_alias()","erb#def_class()","forwardable#def_delegator()","singleforwardable#def_delegator()","forwardable#def_delegators()","singleforwardable#def_delegators()","exception2messagemapper#def_e2message()","exception2messagemapper::def_e2message()","exception2messagemapper::def_e2message()","exception2messagemapper#def_e2message()","erb::defmethod::def_erb_method()","exception2messagemapper#def_exception()","exception2messagemapper::def_exception()","exception2messagemapper#def_exception()","exception2messagemapper::def_exception()","optionparser#def_head_option()","forwardable#def_instance_delegator()","forwardable#def_instance_delegators()","erb#def_method()","erb#def_module()","optionparser#def_option()","singleforwardable#def_single_delegator()","singleforwardable#def_single_delegators()","shell::def_system_command()","optionparser#def_tail_option()","buildr::versionrequirement#default()","buildr::eclipse::eclipse#default_classpath_variables()","buildr::intellijidea::ideamodule#default_components()","buildr::intellijidea::ideaproject#default_components()","multitkip::default_encoding()","multitkip::default_encoding()","multitkip#default_encoding()","multitkip#default_encoding()","multitkip#default_encoding=()","multitkip::default_encoding=()","multitkip#default_encoding=()","multitkip::default_encoding=()","progressbar#default_format()","multitkip::default_master?()","multitkip::default_master?()","buildr::testtask#default_options()","shell::default_record_separator()","shell::default_record_separator=()","shell::default_system_path()","shell::default_system_path=()","buildr#define()","buildr::project#define()","optionparser#define()","mutex_m::define_aliases()","sync_m::define_aliases()","sync_m::define_aliases()","optionparser#define_head()","optionparser#define_tail()","buildr::shell::define_task()","gem::deflate()","forwardable#delegate()","singleforwardable#delegate()","delegator::delegating_block()","buildr::artifactnamespace#delete()","csv::row#delete()","csv::table#delete()","multitkip::delete()","multitkip::delete()","multitkip#delete()","multitkip#delete()","pstore#delete()","prettyprint::groupqueue#delete()","remotetkip#delete()","set#delete()","tempfile#delete()","set#delete?()","multitkip::delete_cmd()","multitkip#delete_cmd()","multitkip::delete_cmd()","multitkip#delete_cmd()","openstruct#delete_field()","csv::row#delete_if()","csv::table#delete_if()","set#delete_if()","observable#delete_observer()","observable#delete_observers()","multitkip::delete_slaves()","multitkip#delete_slaves()","multitkip::delete_slaves()","multitkip#delete_slaves()","multitkip::deleted?()","multitkip#deleted?()","multitkip#deleted?()","multitkip::deleted?()","remotetkip#deleted?()","object#depend_rules()","buildr::ant::dependencies()","buildr::cobertura::dependencies()","buildr::doc::vscaladoc::dependencies()","buildr::emma::dependencies()","buildr::groovy::easyb::dependencies()","buildr::jbehave::dependencies()","buildr::jmock::dependencies()","buildr::junit::dependencies()","buildr::pom#dependencies()","buildr::scala::check::dependencies()","buildr::scala::mockito::dependencies()","buildr::scala::scalatest::dependencies()","buildr::scala::scalac::dependencies()","buildr::scala::specs::dependencies()","buildr::scala::specs2::dependencies()","buildr::testframework::base::dependencies()","buildr::testframework::base#dependencies()","buildr::testframework::jrubybased::dependencies()","buildr::testframework::jrubybased::classmethods#dependencies()","buildr::testframework::java::dependencies()","buildr::testng::dependencies()","prettyprint::groupqueue#deq()","queue#deq()","sizedqueue#deq()","pathname#descend()","matrix#det()","matrix#det_e()","syck::detect_implicit()","buildr::intellijidea::ideaproject#detect_vcs()","matrix#determinant()","matrix#determinant_e()","matrix::diagonal()","matrix#diagonal?()","set#difference()","gem::dir()","object#dir_config()","gserver#disconnecting()","debugger__::display()","debugger__#display()","debugger__#display_expression()","debugger__#display_expressions()","debugger__#display_frames()","debugger__#display_list()","set#divide()","multitkip::do_one_event()","multitkip::do_one_event()","remotetkip::do_one_event()","remotetkip#do_one_event()","tcltklib::do_one_event()","buildr::doc#doc()","buildr::intellijidea::ideafile#document()","buildr#download()","buildr::artifact#download()","buildr::optionalartifact#download()","uri::download()","uri::generic#download()","buildr::artifact#download_m2_snapshot()","object#dummy_makefile()","csv::dump()","psych::dump()","syck::dump()","psych::dump_stream()","syck::dump_stream()","buildr::testframework::testresult::error::dump_yaml()","singleton#dup()","progressbar#duration()","exception2messagemapper::e2mm_message()","exception2messagemapper::e2mm_message()","buildr::artifactnamespace#each()","buildr::packaging::java::manifest#each()","csv#each()","csv::row#each()","csv::table#each()","getoptlong#each()","matrix#each()","prime#each()","prime::oldcompatibility#each()","prime::pseudoprimegenerator#each()","set#each()","vector#each()","vector#each2()","resolv#each_address()","resolv::each_address()","resolv::dns#each_address()","resolv::hosts#each_address()","pathname#each_child()","syck::each_document()","pathname#each_filename()","resolv#each_name()","resolv::each_name()","resolv::dns#each_name()","resolv::hosts#each_name()","syck::each_node()","getoptlong#each_option()","optionparser::list#each_option()","integer::each_prime()","resolv::dns#each_resource()","tsort#each_strongly_connected_component()","tsort#each_strongly_connected_component_from()","matrix#each_with_index()","matrix#eigen()","matrix#eigensystem()","progressbar#elapsed()","matrix#element()","vector#element()","vector::elements()","matrix#elements_to_f()","vector#elements_to_f()","matrix#elements_to_i()","vector#elements_to_i()","matrix#elements_to_r()","vector#elements_to_r()","syck::emitter()","matrix::empty()","buildr::archivetask#empty?()","matrix#empty?()","queue#empty?()","rake::filetask#empty?()","set#empty?()","threadswait#empty?()","threadswait#empty?()","zip::zipentry#empty?()","object#enable_config()","base64#encode64()","multitkip::encoding()","multitkip#encoding()","multitkip::encoding()","multitkip#encoding()","multitkip::encoding=()","multitkip::encoding=()","multitkip#encoding=()","multitkip#encoding=()","multitkip#encoding_convert_from()","multitkip::encoding_convert_from()","multitkip::encoding_convert_from()","multitkip#encoding_convert_from()","multitkip::encoding_convert_to()","multitkip#encoding_convert_to()","multitkip#encoding_convert_to()","multitkip::encoding_convert_to()","multitkip#encoding_convertfrom()","multitkip::encoding_convertfrom()","multitkip#encoding_convertfrom()","multitkip::encoding_convertfrom()","multitkip#encoding_convertto()","multitkip::encoding_convertto()","multitkip#encoding_convertto()","multitkip::encoding_convertto()","multitkip::encoding_name()","multitkip::encoding_name()","multitkip#encoding_name()","multitkip#encoding_name()","multitkip#encoding_obj()","multitkip::encoding_obj()","multitkip#encoding_obj()","multitkip::encoding_obj()","multitkip::encoding_table()","multitkip#encoding_table()","multitkip::encoding_table()","multitkip#encoding_table()","buildr::doc::doctask#engine()","buildr::doc::doctask#engine?()","buildr::doc::engines()","multitkip::command_queue#enq()","prettyprint::groupqueue#enq()","queue#enq()","sizedqueue#enq()","gem::ensure_gem_subdirectories()","buildr::tartask#entry()","buildr::ziptask#entry()","buildr::environment()","optionparser#environment()","ipaddr#eql?()","matrix#eql?()","vector#eql?()","gserver#error()","logger#error()","object#error()","logger#error?()","getoptlong#error_message()","shellwords::escape()","progressbar#eta()","multitkip::eval()","multitkip#eval()","multitkip::eval()","multitkip#eval()","multitkip#eval_callback()","multitkip#eval_callback()","irb::irb#eval_input()","multitkip#eval_proc()","multitkip::eval_proc()","multitkip#eval_proc()","multitkip::eval_proc()","multitkip::eval_str()","multitkip#eval_str()","multitkip#eval_str()","multitkip::eval_str()","multitkip#eval_string()","multitkip::eval_string()","multitkip#eval_string()","multitkip::eval_string()","buildr::testframework::testresult::yamlformatter#example_failed()","buildr::testframework::testresult::yamlformatter#example_passed()","buildr::testframework::testresult::yamlformatter#example_pending()","hash#except()","buildr::archivetask#exclude()","buildr::archivetask::merge#exclude()","buildr::artifactsearch#exclude()","buildr::doc::doctask#exclude()","buildr::filter#exclude()","buildr::options::proxies#exclude()","buildr::resourcestask#exclude()","buildr::testtask::exclude()","buildr::testtask#exclude()","buildr::unzip#exclude()","buildr::options::proxies#exclude=()","buildr::eclipse::eclipse#exclude_libs()","buildr::eclipse::eclipse#exclude_libs=()","buildr::intellijidea::ideamodule#excluded_directories()","debugger__#excn_handle()","multitkip::exist?()","multitkip#exist?()","multitkip::exist?()","multitkip#exist?()","rake::filetask#exist?()","zip::zipentry#exist?()","multitkip#exit()","multitkip::exit()","multitkip::exit()","multitkip#exit()","multitkip#exit!()","multitkip::exit!()","multitkip#exit!()","multitkip::exit!()","buildr::processstatus#exited?()","cmath::exp()","cmath::exp!()","buildr::layout#expand()","shell#expand_path()","io#expect()","buildr::checks#expectations()","multitkip::expose_cmd()","multitkip#expose_cmd()","multitkip::expose_cmd()","multitkip#expose_cmd()","exception2messagemapper::extend_object()","exception2messagemapper::extend_object()","monitormixin::extend_object()","mutex_m::extend_object()","optionparser::arguable::extend_object()","sync_m::extend_object()","sync_m::extend_object()","buildr::test::skipifnotest::extended()","multitkip_pseudotoplevel_evaluable::extended()","buildr::intellijidea::ideamodule#extension()","buildr::intellijidea::ideaproject#extension()","buildr::unzip#extract()","buildr::intellijidea::ideamodule#facet_component()","exception2messagemapper#fail()","exception2messagemapper#fail()","buildr::artifact#fail_download()","buildr::testtask#failures_to()","addrinfo#family_addrinfo()","logger#fatal()","logger#fatal?()","buildr::artifactnamespace#fetch()","pstore#fetch()","dl::fiddle?()","csv::row#field()","csv::row#field?()","csv::row#field_row?()","csv::row#fields()","buildr::project#file()","digest::class::file()","digest::instance#file()","buildr::intellijidea::ideafile#file_path()","buildr::intellijidea::ideafile#filename()","prettyprint#fill_breakable()","buildr#filter()","csv::filter()","optionparser::parseerror::filter_backtrace()","find::find()","pathname#find()","object#find_executable()","gem::find_files()","object#find_header()","matrix#find_index()","object#find_library()","uri::generic#find_proxy()","object#find_type()","progressbar#finish()","threadswait#finished?()","threadswait#finished?()","prettyprint#first?()","prettyprint::group#first?()","prettyprint::singleline#first?()","buildr::extension::classmethods#first_time()","set#flatten()","set#flatten!()","prettyprint#flush()","prettyprint::singleline#flush()","buildr::artifactnamespace::for()","multitkip#force_default_encoding=()","multitkip::force_default_encoding=()","multitkip#force_default_encoding=()","multitkip::force_default_encoding=()","multitkip#force_default_encoding?()","multitkip#force_default_encoding?()","multitkip::force_default_encoding?()","multitkip::force_default_encoding?()","csv#force_quotes?()","addrinfo::foreach()","csv::foreach()","benchmark::tms#format()","prettyprint::format()","debugger__#format_frame()","debugger__#frame_set_pos()","buildr::testtask#framework()","buildr::testtask#framework=()","buildr::intellijidea::ideaproject#framework_detection_exclusion_component()","buildr::testframework::frameworks()","delegator#freeze()","buildr::artifact#from()","buildr::compiletask#from()","buildr::doc::doctask#from()","buildr::filter#from()","buildr::resourcestask#from()","hash::from_java_properties()","buildr::unzip#from_path()","integer::from_prime_division()","buildr::packaging::java::manifest::from_zip()","kernel#gem()","buildr::doc::groovydoc#generate()","buildr::doc::javadoc#generate()","buildr::doc::scaladoc#generate()","buildr::doc::vscaladoc#generate()","buildr::junit::report#generate()","csv::generate()","buildr::intellijidea::ideamodule#generate_compile_output()","buildr::intellijidea::ideamodule#generate_content()","buildr::intellijidea::ideamodule#generate_initial_order_entries()","buildr::intellijidea::ideamodule#generate_lib()","csv::generate_line()","buildr::intellijidea::ideamodule#generate_module_lib()","buildr::intellijidea::ideamodule#generate_project_dependency()","syck::generic_parser()","getoptlong#get()","multitkip#get_bgerror_handler()","multitkip#get_bgerror_handler()","multitkip::get_cb_entry()","multitkip::get_cb_entry()","multitkip::get_eventloop_tick()","multitkip::get_eventloop_tick()","remotetkip#get_eventloop_tick()","remotetkip::get_eventloop_tick()","tcltklib::get_eventloop_tick()","multitkip::get_eventloop_weight()","multitkip::get_eventloop_weight()","remotetkip#get_eventloop_weight()","remotetkip::get_eventloop_weight()","tcltklib::get_eventloop_weight()","multitkip#get_limit()","multitkip#get_limit()","multitkip::get_limit()","multitkip::get_limit()","multitkip::get_no_event_wait()","multitkip::get_no_event_wait()","remotetkip::get_no_event_wait()","remotetkip#get_no_event_wait()","tcltklib::get_no_event_wait()","getoptlong#get_option()","debugger__::get_thread()","ipsocket::getaddress()","resolv#getaddress()","resolv::getaddress()","resolv::dns#getaddress()","resolv::hosts#getaddress()","ipsocket::getaddress_orig()","resolv#getaddresses()","resolv::getaddresses()","resolv::dns#getaddresses()","resolv::hosts#getaddresses()","resolv::getname()","resolv#getname()","resolv::dns#getname()","resolv::hosts#getname()","resolv::getnames()","resolv#getnames()","resolv::dns#getnames()","resolv::hosts#getnames()","optionparser::getopts()","optionparser#getopts()","optionparser::arguable#getopts()","resolv::dns#getresource()","resolv::dns#getresources()","csv#gets()","fileutils::getwd()","buildr#group()","buildr::artifactnamespace#group()","prettyprint#group()","prettyprint::singleline#group()","buildr::actsasartifact#group_path()","prettyprint#group_sub()","object#growl_notify()","buildr::testframework::testresult::error::guard()","pp::ppmethods#guard_inspect_key()","kconv::guess()","optionparser::switch::guess()","gem::gunzip()","gem::gzip()","erb::util::h()","buildr::compiler::has?()","buildr::testframework::has?()","buildr::artifact#has_content?()","multitkip#has_mainwindow?()","multitkip::has_mainwindow?()","multitkip#has_mainwindow?()","multitkip::has_mainwindow?()","remotetkip#has_mainwindow?()","ipaddr#hash()","matrix#hash()","vector#hash()","buildr::artifact::hash_to_file_name()","object#have_const()","object#have_framework()","object#have_func()","object#have_header()","object#have_library()","object#have_macro()","object#have_struct_member()","object#have_type()","object#have_var()","csv::row#header?()","csv#header_convert()","csv#header_converters()","csv#header_row?()","csv::row#header_row?()","csv#headers()","csv::row#headers()","csv::table#headers()","buildr::help()","buildr#help()","object#help()","optionparser#help()","matrix#hermitian?()","securerandom::hex()","multitkip::hidden_cmds()","multitkip#hidden_cmds()","multitkip::hidden_cmds()","multitkip#hidden_cmds()","multitkip::hide_cmd()","multitkip#hide_cmd()","multitkip::hide_cmd()","multitkip#hide_cmd()","java::home()","gem::host()","gem::host=()","erb::util::html_escape()","ipaddr#hton()","buildr::options::proxies#http()","buildr::options::proxies#http=()","object#httpd()","time::httpdate()","time#httpdate()","buildr::options::proxies#https()","buildr::options::proxies#https=()","progressbar#human()","buildr::intellijidea::ideafile#id()","buildr::package#id()","fileutils::identical?()","matrix::identity()","matrix#imag()","tkcomm::image_obj()","matrix#imaginary()","buildr::intellijidea::projectextension#iml()","buildr::intellijidea::projectextension#iml?()","java::javawrapper#import()","gserver::in_service?()","optionparser::inc()","optionparser#inc()","progressbar#inc()","buildr::archivetask#include()","buildr::archivetask::merge#include()","buildr::artifactsearch#include()","buildr::doc::doctask#include()","buildr::filter#include()","buildr::resourcestask#include()","buildr::testtask#include()","buildr::testtask::include()","buildr::unzip#include()","buildr::testtask#include?()","csv::row#include?()","ipaddr#include?()","set#include?()","buildr::testframework::jrubybased::included()","buildr::unzip#included?()","optionparser::switch::incompatible_argument_styles()","optionparser::switch::noargument::incompatible_argument_styles()","buildr::scala::scalacoptions#incremental()","csv::row#index()","matrix#index()","gem::inflate()","logger#info()","object#info()","logger#info?()","multitkip::inherited()","multitkip::inherited()","multitkip::init_ip_env()","multitkip::init_ip_env()","multitkip::init_ip_internal()","multitkip::init_ip_internal()","buildr::intellijidea::ideamodule#initial_components()","buildr::intellijidea::ideaproject#initial_components()","buildr::layout#initialize_copy()","openstruct#initialize_copy()","set#initialize_copy()","buildr::intellijidea::ideafile#inject_component()","buildr::intellijidea::ideafile#inject_components()","vector#inner_product()","csv#inspect()","csv::row#inspect()","csv::table#inspect()","ipaddr#inspect()","irb::irb#inspect()","matrix#inspect()","multitkip#inspect()","multitkip#inspect()","openstruct#inspect()","optionparser::parseerror#inspect()","set#inspect()","shell#inspect()","tkcore#inspect()","tkcore::inspect()","vector#inspect()","buildr#install()","buildr::actsasartifact#install()","fileutils::install()","object#install()","tkcomm::install_cmd()","tkcomm#install_cmd()","shell::install_system_commands()","buildr::scala::scalac::installed?()","buildr::scala::installed_version()","buildr::scala::installed_version()","buildr::artifactnamespace::instance()","csv::instance()","prime::instance()","forwardable#instance_delegate()","prime#int_from_prime_division()","buildr#integration()","buildr::test#integration()","debugger__::interrupt()","set#intersection()","buildr::compiletask#into()","buildr::doc::doctask#into()","buildr::filter#into()","matrix#inv()","multitkip::invalid_namespace?()","multitkip#invalid_namespace?()","multitkip::invalid_namespace?()","multitkip#invalid_namespace?()","remotetkip#invalid_namespace?()","matrix#inverse()","multitkip#invoke_hidden()","multitkip::invoke_hidden()","multitkip::invoke_hidden()","multitkip#invoke_hidden()","multitkip::invoke_hidden_on_global()","multitkip#invoke_hidden_on_global()","multitkip::invoke_hidden_on_global()","multitkip#invoke_hidden_on_global()","multitkip#invoke_hidden_on_namespace()","multitkip::invoke_hidden_on_namespace()","multitkip::invoke_hidden_on_namespace()","multitkip#invoke_hidden_on_namespace()","ipaddr#ip6_arpa()","ipaddr#ip6_int()","multitkip::ip_name()","multitkip#ip_name()","multitkip#ip_name()","multitkip::ip_name()","buildr::intellijidea::projectextension#ipr()","buildr::intellijidea::projectextension#ipr?()","ipaddr#ipv4?()","ipaddr#ipv4_compat()","ipaddr#ipv4_compat?()","ipaddr#ipv4_mapped()","ipaddr#ipv4_mapped?()","ipaddr#ipv6?()","socket#ipv6only!()","irb::irb_abort()","irb::irb_at_exit()","irb::irb_exit()","remotetkip#is_rubytk?()","kconv::iseuc()","string#iseuc()","kconv::isjis()","string#isjis()","time#iso8601()","time::iso8601()","kconv::issjis()","string#issjis()","kconv::isutf8()","string#isutf8()","buildr::intellijidea::ideamodule#jar_path()","java::java()","java::commands::java()","buildr::shell::shelltask#java_args()","java::options#java_args()","java::options#java_args=()","buildr::util#java_platform?()","java::javac()","java::commands::javac()","buildr::doc#javadoc()","java::javadoc()","java::commands::javadoc()","buildr::actsasartifact#javadoc_artifact()","buildr::intellijidea::ideamodule#jdk_version()","buildr::intellijidea::ideaproject#jdk_version()","shell#jobs()","gserver#join()","pathname#join()","shellwords::join()","threadswait#join()","threadswait#join()","threadswait#join_nowait()","threadswait#join_nowait()","buildr::jrebel#jrebel_args()","buildr::jrebel#jrebel_home()","buildr::jrebel#jrebel_props()","buildr::testframework::jrubybased#jruby()","buildr::testframework::jrubybased::jruby_artifact()","buildr::testframework::jrubybased#jruby_gem()","buildr::testframework::jrubybased#jruby_home()","buildr::testframework::jrubybased#jruby_installed?()","kconv::kconv()","string#kconv()","set#keep_if()","buildr::artifactnamespace#key?()","buildr::artifactnamespace#keys()","shell#kill()","buildr::compiletask#language()","fiddle::last_error()","fiddle::last_error=()","buildr::testtask#last_failures()","openuri::meta#last_modified()","gem::latest_load_paths()","gem::latest_rubygems_version()","gem::latest_spec_for()","gem::latest_version_for()","buildr::groovy::groovysh#launch()","buildr::run::base#launch()","buildr::scala::scalashell#launch()","buildr::shell::base#launch()","buildr::shell::beanshell#launch()","buildr::shell::clojure#launch()","buildr::shell::jirb#launch()","buildr::project#layout()","buildr::project#layout=()","queue#length()","set#length()","tempfile#length()","logger::application#level=()","debugger__#line_at()","fileutils::link()","buildr::artifact::list()","tkcomm::list()","addrinfo#listen()","fileutils::ln()","object#ln()","fileutils::ln_s()","fileutils::ln_sf()","buildr::artifactnamespace::load()","buildr::pom::load()","csv::load()","java::load()","java::javawrapper#load()","optionparser#load()","psych::load()","syck::load()","buildr::intellijidea::ideafile#load_document()","syck::load_documents()","gem::load_env_plugins()","psych::load_file()","syck::load_file()","gem::load_path_insert_index()","gem::load_plugin_files()","gem::load_plugins()","psych::load_stream()","syck::load_stream()","gem::load_yaml()","gem::loaded_path?()","buildr::repositories#local()","buildr::repositories#local=()","buildr::project::local_task()","buildr::repositories#locate()","gem::location_of_caller()","cmath::log()","gserver#log()","logger#log()","logger::application#log()","cmath::log!()","cmath::log10()","cmath::log10!()","cmath::log2()","cmath::log2!()","logger::application#log=()","logger::application#logger()","logger::application#logger=()","buildr::artifact::lookup()","matrix#lower_triangular?()","matrix#lup()","matrix#lup_decomposition()","buildr::eclipse::options#m2_repo_var()","vector#magnitude()","buildr::packaging::java::manifest#main()","buildr::intellijidea::ideamodule#main_dependencies()","buildr::intellijidea::ideamodule#main_output_dir()","buildr::intellijidea::ideamodule#main_source_directories()","multitkip#mainloop()","multitkip#mainloop()","multitkip::mainloop()","multitkip::mainloop()","remotetkip#mainloop()","remotetkip::mainloop()","tcltklib::mainloop()","multitkip::mainloop_abort_on_exception()","multitkip::mainloop_abort_on_exception()","remotetkip#mainloop_abort_on_exception()","remotetkip::mainloop_abort_on_exception()","multitkip::mainloop_abort_on_exception=()","multitkip::mainloop_abort_on_exception=()","remotetkip#mainloop_abort_on_exception=()","remotetkip::mainloop_abort_on_exception=()","multitkip::mainloop_watchdog()","multitkip::mainloop_watchdog()","remotetkip#mainloop_watchdog()","remotetkip::mainloop_watchdog()","tcltklib::mainloop_watchdog()","multitkip::make_safe()","multitkip::make_safe()","multitkip#make_safe()","multitkip#make_safe()","remotetkip#make_safe()","optionparser#make_switch()","debugger__::make_thread_list()","fileutils::makedirs()","buildr::pom#managed()","multitkip::manipulable?()","multitkip#manipulable?()","multitkip::manipulable?()","multitkip#manipulable?()","remotetkip#manipulable?()","remotetkip::manipulable?()","matrix#map()","vector#map()","set#map!()","vector#map2()","multitkip#mark_trusted()","multitkip::mark_trusted()","multitkip#mark_trusted()","multitkip::mark_trusted()","delegator#marshal_dump()","openstruct#marshal_dump()","delegator#marshal_load()","openstruct#marshal_load()","gem::marshal_version()","ipaddr#mask()","ipaddr#mask!()","multitkip#master?()","multitkip::master?()","multitkip#master?()","multitkip::master?()","optionparser::completinghash#match()","sizedqueue#max()","sizedqueue#max=()","buildr::testframework::jrubybased#maybe_install_jruby()","benchmark::measure()","set#member?()","benchmark::tms#memberwise()","buildr::archivetask#merge()","set#merge()","exception2messagemapper::message()","exception2messagemapper::message()","optionparser::parseerror#message()","buildr::artifactnamespace#method_missing()","delegator#method_missing()","multitkip::method_missing()","multitkip::method_missing()","object#method_missing()","openobject#method_missing()","tkcomm::tk_cmdtbl::method_missing()","tkcomm::tk_windows::method_missing()","tkcore::tk_object_table#method_missing()","delegator#methods()","matrix#minor()","fileutils::mkdir()","object#mkdir()","fileutils::mkdir_p()","object#mkmf()","fileutils::mkpath()","pathname#mkpath()","dir::mktmpdir()","openstruct#modifiable()","buildr::intellijidea::ideamodule#module_root_component()","buildr::intellijidea::ideaproject#modules_component()","monitormixin#mon_enter()","monitormixin#mon_exit()","monitormixin#mon_synchronize()","monitormixin#mon_try_enter()","pathname#mountpoint?()","file::move()","fileutils::move()","mutex_m#mu_extended()","mutex_m#mu_lock()","mutex_m#mu_locked?()","mutex_m#mu_synchronize()","mutex_m#mu_try_lock()","mutex_m#mu_unlock()","multitkip::mutex()","multitkip::mutex()","multitkip#mutex()","multitkip#mutex()","tkcomm#mutex()","tkcore::tk_object_table#mutex()","fileutils::mv()","object#mv()","buildr::eclipse::eclipse#name()","buildr::intellijidea::ideafile#name()","buildr::artifactnamespace::artifactrequirement#name=()","ipaddr#native()","buildr::eclipse::eclipse#natures()","buildr::eclipse::eclipse#natures=()","buildr::artifactnamespace#need()","buildr::artifact::needed?()","buildr::artifact#needed?()","prettyprint#nest()","prettyprint::singleline#nest()","buildr::intellijidea::ideamodule#net_excluded_directories()","benchmark::tms::new()","buildr::archivetask::merge::new()","buildr::artifactnamespace::artifactrequirement::new()","buildr::cctask::new()","buildr::checks::expectation::new()","buildr::doc::base::new()","buildr::eclipse::eclipse::new()","buildr::eclipse::options::new()","buildr::intellijidea::ideafile::new()","buildr::intellijidea::ideamodule::new()","buildr::intellijidea::ideaproject::new()","buildr::junit::report::new()","buildr::layout::default::new()","buildr::packagegemtask::new()","buildr::packaging::java::eartask::new()","buildr::packaging::java::manifest::new()","buildr::processstatus::new()","buildr::run::base::new()","buildr::scala::scalatest::new()","buildr::scala::scalacoptions::new()","buildr::shell::base::new()","buildr::testframework::base::new()","buildr::testframework::testresult::new()","buildr::testframework::testresult::error::new()","buildr::testframework::testresult::yamlformatter::new()","buildr::unzip::new()","csv::new()","csv::row::new()","csv::table::new()","conditionvariable::new()","debugger__::context::new()","delegator::new()","erb::new()","gserver::new()","getoptlong::new()","ipaddr::new()","irb::irb::new()","logger::new()","logger::application::new()","logger::formatter::new()","logger::logdevice::new()","matrix::new()","monitormixin::new()","monitormixin::conditionvariable::new()","multitkip::new()","multitkip::new()","multitkip::new()","multitkip::new()","multitkip::command_queue::new()","multitkip_ok::new()","mutex_m::new()","openobject::new()","openstruct::new()","openuri::httperror::new()","openuri::httpredirect::new()","optionparser::new()","optionparser#new()","optionparser::arguable::new()","optionparser::list::new()","optionparser::parseerror::new()","optionparser::switch::new()","pstore::new()","prettyprint::new()","prettyprint::breakable::new()","prettyprint::group::new()","prettyprint::groupqueue::new()","prettyprint::singleline::new()","prettyprint::text::new()","prime::new()","prime::eratosthenesgenerator::new()","prime::generator23::new()","prime::pseudoprimegenerator::new()","prime::trialdivisiongenerator::new()","progressbar::new()","queue::new()","remotetkip::new()","remotetkip::new()","resolv::new()","resolv::dns::new()","resolv::dns::resource::domainname::new()","resolv::dns::resource::generic::new()","resolv::dns::resource::hinfo::new()","resolv::dns::resource::in::a::new()","resolv::dns::resource::in::aaaa::new()","resolv::dns::resource::in::srv::new()","resolv::dns::resource::in::wks::new()","resolv::dns::resource::minfo::new()","resolv::dns::resource::mx::new()","resolv::dns::resource::soa::new()","resolv::dns::resource::txt::new()","resolv::hosts::new()","sockssocket::new()","set::new()","shell::new()","sizedqueue::new()","socket::udpsource::new()","sync_m::new()","sync_m::new()","tcpsocket::new()","tcltkip::new()","tcltkip::new()","tempfile::new()","threadswait::new()","threadswait::new()","tkcore::new()","tkcore::tk_object_table::new()","uri::file::new()","vector::new()","weakref::new()","monitormixin#new_cond()","buildr::intellijidea::new_document()","multitkip::new_master()","multitkip::new_master()","ipaddr::new_ntoh()","openstruct#new_ostruct_member()","buildr::testframework::jrubybased#new_runtime()","multitkip::new_safetk()","multitkip::new_safetk()","multitkip::new_safe_slave()","multitkip::new_safe_slave()","multitkip::new_slave()","multitkip::new_slave()","multitkip::new_trusted_slave()","multitkip::new_trusted_slave()","prime::eratosthenesgenerator#next()","prime::generator23#next()","prime::oldcompatibility#next()","prime::pseudoprimegenerator#next()","prime::trialdivisiongenerator#next()","prime::eratosthenessieve#next_to()","threadswait#next_wait()","threadswait#next_wait()","buildr::intellijidea::projectextension#no_iml()","buildr::intellijidea::projectextension#no_ipr()","vector#norm()","matrix#normal?()","vector#normalize()","buildr::util#normalize_path()","shell::notify()","observable#notify_observers()","object#notify_send()","buildr::artifactnamespace#ns()","buildr::artifactnamespace#ns?()","ipaddr::ntop()","queue#num_waiting()","sizedqueue#num_waiting()","pp::ppmethods#object_address_group()","pp::ppmethods#object_group()","syck::object_maker()","tracer::off()","optionparser#on()","tracer::on()","buildr::project::on_define()","optionparser#on_head()","optionparser#on_tail()","java::javawrapper#onload()","hash#only()","buildr::testtask#only_run()","buildr::testtask#only_run_failed()","csv::open()","kernel#open()","kernel::open()","openuri::openread#open()","resolv::dns::open()","tempfile#open()","tempfile::open()","buildr::versionrequirement#operation()","buildr#options()","buildr::options()","optionparser::arguable#options()","optionparser::arguable#options=()","optionparser#order()","optionparser#order!()","optionparser::arguable#order!()","getoptlong#ordering=()","matrix#orthogonal?()","prettyprint::breakable#output()","prettyprint::text#output()","irb::irb#output_value()","buildr::package#package()","buildr::packaging::java#package_with_javadoc()","buildr::packaging::java#package_with_sources()","buildr::package#packages()","buildr::compiletask#packaging()","buildr::artifactnamespace#parent()","pathname#parent()","buildr::artifactnamespace#parent=()","buildr::packaging::java::manifest::parse()","csv::parse()","optionparser#parse()","optionparser::switch::noargument#parse()","optionparser::switch::optionalargument#parse()","optionparser::switch::placedargument#parse()","optionparser::switch::requiredargument#parse()","psych::parse()","syck::parse()","time::parse()","optionparser#parse!()","optionparser::arguable#parse!()","string#parse_csv()","syck::parse_documents()","psych::parse_file()","syck::parse_file()","csv::parse_line()","psych::parse_stream()","psych::parser()","syck::parser()","buildr::archivetask#path()","buildr::unzip#path()","gem::path()","multitkip#path()","multitkip::path()","multitkip#path()","multitkip::path()","pstore#path()","tempfile#path()","buildr::project#path_to()","java::commands::path_to_bin()","gem::paths()","gem::paths=()","optionparser::switch::pattern()","optionparser::switch::noargument::pattern()","buildr::filter#pattern_match()","progressbar#percentage()","matrix#permutation?()","optionparser#permute()","optionparser#permute!()","optionparser::arguable#permute!()","open3::pipeline()","open3::pipeline_r()","open3::pipeline_rw()","open3::pipeline_start()","open3::pipeline_w()","gem::platforms()","gem::platforms=()","buildr::actsasartifact#pom()","buildr::actsasartifact#pom_xml()","queue#pop()","sizedqueue#pop()","pp::ppmethods#pop_inspect_key()","shell#popd()","shell#popdir()","open3::popen2()","open3::popen2e()","open3::popen3()","gem::post_build()","gem::post_install()","gem::post_reset()","gem::post_uninstall()","bignum#power!()","fixnum#power!()","float#power!()","kernel::pp()","kernel#pp()","pp::pp()","pp::ppmethods#pp()","pp::ppmethods#pp_hash()","pp::ppmethods#pp_object()","gem::pre_install()","gem::pre_reset()","gem::pre_uninstall()","gem::prefix()","buildr::archivetask#prepare()","optionparser::list#prepend()","kernel#pretty_inspect()","array#pretty_print()","env::pretty_print()","file::stat#pretty_print()","hash#pretty_print()","matchdata#pretty_print()","object#pretty_print()","pp::objectmixin#pretty_print()","range#pretty_print()","struct#pretty_print()","array#pretty_print_cycle()","hash#pretty_print_cycle()","object#pretty_print_cycle()","pp::objectmixin#pretty_print_cycle()","struct#pretty_print_cycle()","pp::objectmixin#pretty_print_inspect()","pp::objectmixin#pretty_print_instance_variables()","integer#prime?()","prime#prime?()","integer#prime_division()","prime#prime_division()","prime::trialdivision#primes()","prime::trialdivision#primes_so_far()","profiler__#print_profile()","tkcomm::procedure()","buildr::settings#profile()","buildr::settings#profiles()","optionparser#program_name()","progressbar#progress()","buildr#project()","buildr::project#project()","buildr::intellijidea::ideaproject#project_details_component()","buildr::intellijidea::ideaproject#project_root_manager_component()","buildr#projects()","buildr::project#projects()","gem::promote_load_path()","irb::irb#prompt()","set#proper_subset?()","set#proper_superset?()","buildr::pom#properties()","buildr::shell::shelltask#properties()","delegator#protected_methods()","buildr::shell::providers()","buildr::options#proxy()","uri::generic#proxy_uri()","find::prune()","multitkip_pseudotoplevel_evaluable#pseudo_toplevel_evaluable=()","multitkip_pseudotoplevel_evaluable#pseudo_toplevel_evaluable?()","delegator#public_methods()","buildr::packaging::java::eartask#push()","csv::row#push()","csv::table#push()","multitkip::command_queue#push()","queue#push()","sizedqueue#push()","pp::ppmethods#push_inspect_key()","shell#pushd()","shell#pushdir()","csv#puts()","fileutils::pwd()","syck::quick_emit()","vector#r()","securerandom::random_bytes()","securerandom::random_number()","matrix#rank()","matrix#rank_e()","progressbar#rate()","remotetkip#rb_appsend()","buildr#read()","csv::read()","csv#read()","openuri::openread#read()","uri::read()","uri::file#read()","uri::generic#read()","gem::read_binary()","syck::read_type_class()","csv#readline()","debugger__::context#readline()","csv#readlines()","csv::readlines()","remotetkip#ready?()","matrix#real()","matrix#real?()","benchmark::realtime()","optionparser::parseerror#reason()","buildr::jrebel#rebel_jar()","optionparser::parseerror#recover()","matrix#rect()","matrix#rectangular()","multitkip#recursion_limit()","multitkip::recursion_limit()","multitkip#recursion_limit()","multitkip::recursion_limit()","buildr::project#recursive_task()","buildr::util#recursive_with_dot_files()","gem::refresh()","optionparser::completion::regexp()","buildr::artifact::register()","matrix#regular?()","optionparser#reject()","optionparser::reject()","optionparser::list#reject()","set#reject!()","buildr::intellijidea::ideafile#relative()","pathname#relative?()","buildr::intellijidea::ideamodule#relative_dir_inside_dir?()","buildr::util#relative_path()","pathname#relative_path_from()","optionparser#release()","buildr::repositories#release_to()","buildr::repositories#release_to=()","buildr::repositories#remote()","buildr::repositories#remote=()","fileutils::remove()","optionparser#remove()","fileutils::remove_dir()","fileutils::remove_entry()","fileutils::remove_entry_secure()","fileutils::remove_file()","multitkip::remove_tk_procs()","multitkip::remove_tk_procs()","progressbar#render()","set#replace()","buildr::util#replace_extension()","socket::udpsource#reply()","buildr::junit::report()","buildr::cobertura::report_dir()","buildr::cobertura::report_to()","buildr::emma::report_to()","buildr::testtask#report_to()","buildr::build#reports()","buildr::build#reports=()","buildr#repositories()","gem::required_location()","buildr::artifactnamespace::artifactrequirement#requirement=()","buildr::artifactsearch#requirement?()","buildr::versionrequirement::requirement?()","buildr::artifactnamespace::artifactrequirement#requirement_hash()","buildr::run::runtask#requires()","buildr::intellijidea::ideamodule#resolve_path()","buildr::intellijidea::ideaproject#resolve_path()","buildr::intellijidea::ideafile#resolve_path_from_base()","syck::resolver()","buildr::compile#resources()","buildr::testtask#resources()","delegator#respond_to_missing?()","multitkip#restart()","multitkip::restart()","multitkip::restart()","multitkip#restart()","remotetkip#restart()","tcltklib::restart()","erb#result()","debugger__::resume()","debugger__::context#resume_all()","csv#return_headers?()","ipaddr#reverse()","csv#rewind()","prime::eratosthenesgenerator#rewind()","prime::generator23#rewind()","prime::pseudoprimegenerator#rewind()","prime::trialdivisiongenerator#rewind()","time#rfc2822()","time::rfc2822()","time::rfc822()","time#rfc822()","java::rjb()","fileutils::rm()","object#rm()","fileutils::rm_f()","fileutils::rm_r()","file::rm_rf()","fileutils::rm_rf()","fileutils::rmdir()","object#rmdir()","fileutils::rmtree()","pathname#rmtree()","buildr::archivetask#root()","buildr::artifactnamespace::root()","buildr::artifactnamespace#root()","buildr::unzip#root()","buildr::artifactnamespace#root?()","pstore#root?()","pathname#root?()","pstore#roots()","matrix#round()","matrix#row()","matrix#row_size()","matrix::row_vector()","matrix#row_vectors()","matrix::rows()","math::rsqrt()","buildr::util#ruby()","gem::ruby()","gem::ruby_version()","buildr::filter#run()","buildr::run#run()","buildr::run::javarunner#run()","buildr::run::runtask#run()","buildr::shell::shelltask#run()","buildr::testframework::base#run()","buildr::testframework::jrubybased#run()","erb#run()","buildr::checks::expectation#run_against()","buildr::testtask#run_tests()","buildr::run::runtask#runner()","buildr::run::runtask#runner?()","buildr::rspec#runner_config()","buildr::testframework::jrubybased#runner_config()","buildr::rspec#runner_content()","buildr::run::runners()","multitkip#running_mainloop?()","multitkip#running_mainloop?()","multitkip#safe?()","multitkip::safe?()","multitkip#safe?()","multitkip::safe?()","remotetkip#safe?()","multitkip#safe_base?()","multitkip::safe_base?()","multitkip#safe_base?()","multitkip::safe_base?()","remotetkip#safe_base?()","multitkip#safe_level()","multitkip::safe_level()","multitkip::safe_level()","multitkip#safe_level()","multitkip#safe_level=()","multitkip::safe_level=()","multitkip#safe_level=()","multitkip::safe_level=()","fileutils::safe_unlink()","multitkip#safeip_add_to_access_path()","multitkip#safeip_add_to_access_path()","multitkip#safeip_configinfo()","multitkip#safeip_configinfo()","multitkip#safeip_configure()","multitkip#safeip_configure()","multitkip#safeip_delete()","multitkip#safeip_delete()","multitkip#safeip_find_in_access_path()","multitkip#safeip_find_in_access_path()","multitkip#safeip_set_log_cmd()","multitkip#safeip_set_log_cmd()","buildr::artifactnamespace::artifactrequirement#satisfied_by?()","buildr::versionrequirement#satisfied_by?()","buildr::scala::scalac::scala_home()","buildr::scala::projectextension#scalac_options()","matrix::scalar()","buildr::scala::specs2::scalaz_dependencies()","io#scanf()","kernel#scanf()","string#scanf()","optionparser::list#search()","gem::searcher()","buildr::compiler::select()","buildr::doc::select()","buildr::run::select()","buildr::shell::select()","buildr::testframework::select()","set#select!()","buildr::doc::select_by_lang()","buildr::run::select_by_lang()","buildr::shell::select_by_lang()","buildr::doc::select_by_name()","buildr::run::select_by_name()","buildr::shell::select_by_name()","buildr::testframework::select_from()","buildr::artifactnamespace::artifactrequirement#selected?()","multitkip_ok::send()","udpsocket#send()","optionparser#separator()","pp::ppmethods#seplist()","gserver#serve()","ipaddr#set()","progressbar#set()","optionparser::parseerror#set_backtrace()","multitkip#set_bgerror_handler()","multitkip#set_bgerror_handler()","multitkip#set_cb_error()","multitkip#set_cb_error()","erb#set_eoutvar()","getoptlong#set_error()","multitkip::set_eventloop_tick()","multitkip::set_eventloop_tick()","remotetkip#set_eventloop_tick()","remotetkip::set_eventloop_tick()","tcltklib::set_eventloop_tick()","multitkip::set_eventloop_weight()","multitkip::set_eventloop_weight()","remotetkip::set_eventloop_weight()","remotetkip#set_eventloop_weight()","tcltklib::set_eventloop_weight()","tracer::set_get_line_procs()","debugger__::set_last_thread()","debugger__#set_last_thread()","multitkip::set_limit()","multitkip#set_limit()","multitkip#set_limit()","multitkip::set_limit()","logger::application#set_log()","multitkip::set_no_event_wait()","multitkip::set_no_event_wait()","remotetkip::set_no_event_wait()","remotetkip#set_no_event_wait()","tcltklib::set_no_event_wait()","optionparser::parseerror#set_option()","getoptlong#set_options()","multitkip#set_safe_level()","multitkip#set_safe_level()","multitkip::set_safe_level()","multitkip::set_safe_level()","debugger__::context#set_suspend()","debugger__::set_trace()","debugger__#set_trace()","debugger__#set_trace_all()","buildr::settings()","buildr::integrationteststask#setup()","buildr::testtask#setup()","java::javawrapper#setup()","object#setup()","fileutils#sh()","multitkip#share_stderr()","multitkip::share_stderr()","multitkip#share_stderr()","multitkip::share_stderr()","multitkip#share_stdin()","multitkip#share_stdin()","multitkip::share_stdin()","multitkip::share_stdin()","multitkip::share_stdio()","multitkip#share_stdio()","multitkip#share_stdio()","multitkip::share_stdio()","multitkip::share_stdout()","multitkip::share_stdout()","multitkip#share_stdout()","multitkip#share_stdout()","buildr::shell#shell()","shellwords::shellescape()","string#shellescape()","array#shelljoin()","shellwords::shelljoin()","shellwords::shellsplit()","string#shellsplit()","shellwords::shellwords()","csv#shift()","queue#shift()","sizedqueue#shift()","buildr::eclipse::options#short_names()","gserver#shutdown()","conditionvariable#signal()","monitormixin::conditionvariable#signal()","irb::irb#signal_handle()","irb::irb#signal_status()","tkcomm::simplelist()","cmath::sin()","cmath::sin!()","singleforwardable#single_delegate()","prettyprint::singleline_format()","pp::singleline_pp()","matrix#singular?()","cmath::sinh()","cmath::sinh!()","queue#size()","set#size()","tempfile#size()","vector#size()","csv#skip_blanks?()","buildr::intellijidea::ideamodule#skip_content!()","buildr::intellijidea::ideamodule#skip_content?()","multitkip::slave?()","multitkip#slave?()","multitkip#slave?()","multitkip::slave?()","multitkip#slaves()","multitkip#slaves()","multitkip::slaves()","multitkip::slaves()","mutex_m#sleep()","tkcomm::slice_ary()","buildr::actsasartifact#snapshot?()","gem::source_index()","buildr::resourcestask#sources()","gem::sources()","gem::sources=()","buildr::actsasartifact#sources_artifact()","buildr::packagegemtask#spec()","buildr::doc::base::specify()","buildr::run::base::specify()","buildr::shell::base::specify()","buildr::scala::scalatest::specs()","buildr::scala::specs::specs()","buildr::scala::specs2::specs()","shellwords::split()","cmath::sqrt()","math::sqrt()","cmath::sqrt!()","matrix#square?()","buildr::testframework::testresult::yamlformatter#start()","gserver#start()","irb::start()","logger::application#start()","progressbar::start()","progressbar#start()","profiler__#start_profile()","gserver#starting()","debugger__::stdout()","debugger__#stdout()","debugger__::stdout=()","gserver::stop()","gserver#stop()","debugger__::context#stop_next()","profiler__#stop_profile()","buildr::processstatus#stopped?()","gserver#stopped?()","gserver#stopping()","base64#strict_decode64()","base64#strict_encode64()","tsort#strongly_connected_components()","time::strptime()","buildr#struct()","resolv::dns::name#subdomain_of?()","set#subset?()","tkcomm#subst()","set#subtract()","ipaddr#succ()","prime::eratosthenesgenerator#succ()","prime::generator23#succ()","prime::oldcompatibility#succ()","prime::pseudoprimegenerator#succ()","prime::trialdivisiongenerator#succ()","buildr::processstatus#success?()","buildr::intellijidea::ideafile#suffix()","gem::suffix_pattern()","gem::suffixes()","optionparser#summarize()","optionparser::list#summarize()","optionparser::switch#summarize()","set#superset?()","debugger__::suspend()","debugger__::context#suspend_all()","irb::irb#suspend_context()","irb::irb#suspend_input_method()","irb::irb#suspend_name()","irb::irb#suspend_workspace()","optionparser::switch#switch_name()","fileutils::symlink()","matrix#symmetric?()","sync_m#sync_exclusive?()","sync_m#sync_exclusive?()","sync_m#sync_extend()","sync_m#sync_extend()","sync_m#sync_inspect()","sync_m#sync_inspect()","sync_m#sync_lock()","sync_m#sync_lock()","sync_m#sync_locked?()","sync_m#sync_locked?()","sync_m#sync_shared?()","sync_m#sync_shared?()","sync_m#sync_synchronize()","sync_m#sync_synchronize()","sync_m#sync_try_lock()","sync_m#sync_try_lock()","sync_m#sync_unlock()","sync_m#sync_unlock()","monitormixin#synchronize()","shell#system_path=()","matrix#t()","csv::table()","multitkip::table()","multitkip::table()","buildr::gitrelease#tag_release()","buildr::hgrelease#tag_release()","buildr::svnrelease#tag_release()","syck::tagurize()","delegator#taint()","cmath::tan()","cmath::tan!()","cmath::tanh()","cmath::tanh!()","object#tar()","buildr::build#target()","buildr::filter#target()","buildr::resourcestask#target()","buildr::build#target=()","buildr::project#task()","socket::tcp()","socket::tcp_server_loop()","socket::tcp_server_sockets()","buildr::integrationteststask#teardown()","buildr::testtask#teardown()","getoptlong#terminate()","optionparser#terminate()","optionparser::terminate()","getoptlong#terminated?()","buildr::options#test()","buildr::test#test()","buildr::options#test=()","buildr::intellijidea::ideamodule#test_dependencies()","buildr::intellijidea::ideamodule#test_dependency_details()","buildr::intellijidea::ideamodule#test_output_dir()","buildr::intellijidea::ideamodule#test_source_directories()","buildr::multitest#tests()","buildr::scala::specs#tests()","buildr::scala::specs2#tests()","buildr::testframework::base#tests()","prettyprint#text()","prettyprint::singleline#text()","debugger__#thnum()","multitkip#thread_eval_proc()","multitkip::thread_eval_proc()","multitkip#thread_eval_proc()","multitkip::thread_eval_proc()","debugger__::thread_list()","debugger__::thread_list_all()","gem::time()","progressbar#time()","object#timeout()","timeout::timeout()","buildr::util#timestamp()","progressbar#title()","multitkip::tk_cmd_tbl()","multitkip::tk_cmd_tbl()","multitkip::tk_object_table()","multitkip::tk_object_table()","tkcomm::tk_tcl2ruby()","multitkip::tk_windows()","multitkip::tk_windows()","dir::tmpdir()","benchmark::tms#to_a()","csv::table#to_a()","matrix#to_a()","optionparser#to_a()","set#to_a()","vector#to_a()","array#to_csv()","csv::row#to_csv()","csv::table#to_csv()","multitkip::to_eval()","multitkip#to_eval()","multitkip#to_eval()","multitkip::to_eval()","buildr::actsasartifact#to_hash()","buildr::artifact::to_hash()","buildr::artifactnamespace::to_hash()","csv::row#to_hash()","buildr::processstatus#to_i()","ipaddr#to_i()","buildr::processstatus#to_int()","array#to_java()","hash#to_java_properties()","psych::to_json()","resolv::ipv4#to_name()","resolv::ipv6#to_name()","ipaddr#to_range()","buildr::artifactnamespace::artifactrequirement#to_requirement_spec()","benchmark::tms#to_s()","buildr::filter#to_s()","buildr::packaging::java::manifest#to_s()","buildr::processstatus#to_s()","buildr::unzip#to_s()","buildr::versionrequirement#to_s()","csv::row#to_s()","csv::table#to_s()","ipaddr#to_s()","matrix#to_s()","openstruct#to_s()","optionparser#to_s()","optionparser::parseerror#to_s()","resolv::dns::name#to_s()","tkcore::to_s()","tkcore#to_s()","uri::file#to_s()","vector#to_s()","enumerable#to_set()","buildr::actsasartifact#to_spec()","buildr::artifact::to_spec()","buildr::actsasartifact#to_spec_hash()","ipaddr#to_string()","buildr::doc::base::to_sym()","buildr::run::base::to_sym()","buildr::shell::base::to_sym()","buildr::testframework::base::to_sym()","kconv::toeuc()","string#toeuc()","kconv::tojis()","string#tojis()","kconv::tolocale()","string#tolocale()","optionparser#top()","optionparser::top()","kconv::tosjis()","string#tosjis()","progressbar#total()","fileutils::touch()","object#touch()","kconv::toutf16()","string#toutf16()","kconv::toutf32()","string#toutf32()","kconv::toutf8()","string#toutf8()","matrix#tr()","matrix#trace()","object#trace()","debugger__#trace?()","object#trace?()","debugger__#trace_func()","tracer::trace_func()","pstore#transaction()","syck::transfer()","multitkip#transfer_stderr()","multitkip::transfer_stderr()","multitkip#transfer_stderr()","multitkip::transfer_stderr()","multitkip#transfer_stdin()","multitkip::transfer_stdin()","multitkip#transfer_stdin()","multitkip::transfer_stdin()","multitkip::transfer_stdio()","multitkip::transfer_stdio()","multitkip#transfer_stdio()","multitkip#transfer_stdio()","multitkip#transfer_stdout()","multitkip::transfer_stdout()","multitkip::transfer_stdout()","multitkip#transfer_stdout()","buildr::filter::mapper#transform()","buildr#transitive()","matrix#transpose()","delegator#trust()","gem::try_activate()","object#try_const()","syck::try_implicit()","monitormixin#try_mon_enter()","object#try_type()","tsort#tsort()","tsort#tsort_each()","tsort#tsort_each_child()","tsort#tsort_each_node()","erb::util::u()","socket::udp_server_loop()","socket::udp_server_loop_on()","socket::udp_server_recv()","socket::udp_server_sockets()","gem::ui()","shell::unalias_command()","csv#unconverted_fields?()","shell::undef_system_command()","buildr::actsasartifact#uninstall()","tkcomm::uninstall_cmd()","tkcomm#uninstall_cmd()","set#union()","matrix::unit()","matrix#unitary?()","socket::unix()","socket::unix_server_loop()","socket::unix_server_socket()","logger#unknown()","tempfile#unlink()","gem::unresolved_deps()","delegator#untaint()","delegator#untrust()","buildr::artifactnamespace::artifactrequirement::unversioned_spec()","buildr::artifactnamespace::artifactrequirement#unversioned_spec()","buildr#unzip()","buildr::packaging::java::eartask#update_classpath()","buildr::packaging::java::manifest::update_manifest()","buildr::gitrelease#update_version_to_next()","buildr::hgrelease#update_version_to_next()","buildr::svnrelease#update_version_to_next()","buildr#upload()","buildr::actsasartifact#upload()","buildr::packagegemtask#upload()","uri::upload()","uri::file#upload()","uri::generic#upload()","buildr::actsasartifact#upload_task()","prime::pseudoprimegenerator#upper_bound()","prime::pseudoprimegenerator#upper_bound=()","matrix#upper_triangular?()","fileutils::uptodate?()","erb::util::url_encode()","buildr::intellijidea::ideamodule#url_for_path()","securerandom::urlsafe_base64()","base64#urlsafe_decode64()","base64#urlsafe_encode64()","buildr::artifactnamespace#use()","buildr::scala::scalac::use_fsc()","buildr::scala::scalac::use_installed?()","gem::use_paths()","buildr::settings#user()","gem::user_home()","buildr::compiletask#using()","buildr::doc::doctask#using()","buildr::filter#using()","buildr::filter::mapper#using()","buildr::run::runtask#using()","buildr::shell::shelltask#using()","buildr::testtask#using()","securerandom::uuid()","buildr::artifactnamespace#values()","buildr::artifactnamespace#values_at()","csv::row#values_at()","csv::table#values_at()","debugger__#var_list()","buildr::intellijidea::ideaproject#vcs_component()","optionparser#ver()","buildr::ant::version()","buildr::cobertura::version()","buildr::emma::version()","buildr::groovy::easyb::version()","buildr::jbehave::version()","buildr::jmock::version()","buildr::junit::version()","buildr::scala::version()","buildr::scala::version()","buildr::scala::check::version()","buildr::scala::mockito::version()","buildr::scala::scalatest::version()","buildr::scala::specs::version()","buildr::scala::specs2::version()","buildr::shell::beanshell::version()","buildr::testframework::jrubybased::version()","buildr::testng::version()","erb::version()","irb::version()","java::version()","optionparser#version()","gem::version#version=()","buildr::scala::version?()","buildr::scala::version?()","buildr::versionrequirement::version?()","buildr::scala::version_str()","buildr::scala::version_str()","buildr::scala::version_without_build()","buildr::scala::version_without_build()","buildr::artifactnamespace#virtual()","conditionvariable#wait()","monitormixin::conditionvariable#wait()","multitkip#wait_on_mainloop=()","multitkip#wait_on_mainloop=()","multitkip#wait_on_mainloop?()","multitkip#wait_on_mainloop?()","monitormixin::conditionvariable#wait_until()","monitormixin::conditionvariable#wait_while()","object#wait_writable()","debugger__::waiting()","logger#warn()","object#warn()","optionparser#warn()","logger#warn?()","object#warn_without_color()","weakref#weakref_alive?()","progressbar::width()","fiddle::win32_last_error()","fiddle::win32_last_error=()","buildr::util#win_os?()","gem::win_platform?()","tkcomm::window()","buildr::archivetask#with()","buildr::compiletask#with()","buildr::doc::doctask#with()","buildr::packaging::java::jartask#with()","buildr::run::runtask#with()","buildr::shell::shelltask#with()","buildr::testtask#with()","optionparser::with()","object#with_config()","prime::pseudoprimegenerator#with_object()","buildr::tartask#with_uncompressed_tar()","java::wrapper()","buildr#write()","buildr::intellijidea::ideafile#write()","logger::logdevice#write()","uri::write()","uri::generic#write()","csv#write_headers?()","time::xmlschema()","time#xmlschema()","matrix::zero()","matrix#zero?()","buildr#zip()","time::zone_offset()","buildr::versionrequirement#|()","ipaddr#|()","set#|()","ipaddr#~()","","","",""],"info":[["Abbrev","","Abbrev.html","","<p>Calculate the set of unique abbreviations for a given set of strings.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'abbrev'</span>\n<span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'pp'</span>\n\n<span class=\"ruby-identifier\">pp</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["Addrinfo","","Addrinfo.html","",""],["Array","","Array.html","",""],["Base64","","Base64.html","","<p>The Base64 module provides for the encoding (#encode64, #strict_encode64,\n#urlsafe_encode64) and decoding …\n"],["BasicSocket","","BasicSocket.html","",""],["Benchmark","","Benchmark.html","","<p>The Benchmark module provides methods to measure and report the time used\nto execute Ruby code.\n<p>Measure …\n"],["Benchmark::Tms","","Benchmark/Tms.html","","<p>A data object, representing the times associated with a benchmark\nmeasurement.\n"],["Bignum","","Bignum.html","","<p>When mathn is required Bignum’s division and exponentiation are enhanced to\nreturn more precise values …\n"],["Buildr","","Buildr.html","","<p>Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.   …\n"],["Buildr::ActsAsArtifact","","Buildr/ActsAsArtifact.html","","<p>Mixin with a task to make it behave like an artifact. Implemented by the\npackaging tasks.\n<p>An artifact …\n"],["Buildr::Ant","","Buildr/Ant.html","",""],["Buildr::Apt","","Buildr/Apt.html","","<p>Methods added to Project to support the Java Annotation Processor.\n"],["Buildr::ArchiveTask","","Buildr/ArchiveTask.html","","<p>Base class for ZipTask, TarTask and other archives.\n"],["Buildr::ArchiveTask::Merge","","Buildr/ArchiveTask/Merge.html","",""],["Buildr::Artifact","","Buildr/Artifact.html","","<p>A file task referencing an artifact in the local repository.\n<p>This task includes all the artifact attributes …\n"],["Buildr::ArtifactNamespace","","Buildr/ArtifactNamespace.html","","<p>An ArtifactNamespace is a hierarchical dictionary used to manage\nArtifactRequirements. It can be used …\n"],["Buildr::ArtifactNamespace::ArtifactRequirement","","Buildr/ArtifactNamespace/ArtifactRequirement.html","","<p>An artifact requirement is an object that ActsAsArtifact and has an\nassociated VersionRequirement. It …\n"],["Buildr::ArtifactSearch","","Buildr/ArtifactSearch.html","","<p>Search best artifact version from remote repositories\n"],["Buildr::Build","","Buildr/Build.html","",""],["Buildr::CC","","Buildr/CC.html","",""],["Buildr::CCTask","","Buildr/CCTask.html","",""],["Buildr::Checks","","Buildr/Checks.html","","<p>Methods added to Project to allow checking the build.\n"],["Buildr::Checks::Expectation","","Buildr/Checks/Expectation.html","","<p>An expectation has subject, description and block. The expectation is\nvalidated by running the block, …\n"],["Buildr::Clojure","","Buildr/Clojure.html","","<p>Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.   …\n"],["Buildr::Cobertura","","Buildr/Cobertura.html","","<p>Provides the <code>cobertura:html</code>, <code>cobertura:xml</code> and\n<code>cobertura:check</code> tasks. Require explicitly using\n<code>require</code> …\n"],["Buildr::Cobertura::CoberturaCheck","","Buildr/Cobertura/CoberturaCheck.html","",""],["Buildr::Compile","","Buildr/Compile.html","","<p>Methods added to Project for compiling, handling of resources and\ngenerating source documentation.\n"],["Buildr::CompileTask","","Buildr/CompileTask.html","","<p>Compile task.\n<p>Attempts to determine which compiler to use based on the project layout,\nfor example, uses …\n"],["Buildr::Compiler","","Buildr/Compiler.html","","<p>The underlying compiler used by CompileTask. To add a new compiler, extend\nCompiler::Base and add your …\n"],["Buildr::Compiler::Ecj","","Buildr/Compiler/Ecj.html","",""],["Buildr::Compiler::ExternalJavac","","Buildr/Compiler/ExternalJavac.html","",""],["Buildr::Compiler::Javac","","Buildr/Compiler/Javac.html","","<p>Javac compiler:\n\n<pre>compile.using(:javac)</pre>\n<p>Used by default if .java files are found in the src/main/java directory …\n"],["Buildr::ConcatTask","","Buildr/ConcatTask.html","","<p>A file task that concatenates all its prerequisites to create a new file.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">concat</span>(<span class=\"ruby-string\">&quot;master.sql&quot;</span>=<span class=\"ruby-operator\">&gt;</span>[<span class=\"ruby-string\">&quot;users.sql&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["Buildr::Doc","","Buildr/Doc.html","",""],["Buildr::Doc::Base","","Buildr/Doc/Base.html","","<p>Base class for any documentation provider.  Defines most common\nfunctionality (things like @into@, @from@ …\n"],["Buildr::Doc::DocTask","","Buildr/Doc/DocTask.html","",""],["Buildr::Doc::Groovydoc","","Buildr/Doc/Groovydoc.html","",""],["Buildr::Doc::GroovydocDefaults","","Buildr/Doc/GroovydocDefaults.html","",""],["Buildr::Doc::Javadoc","","Buildr/Doc/Javadoc.html","","<p>A convenient task for creating Javadocs from the project’s compile task.\nMinimizes all the hard work …\n"],["Buildr::Doc::JavadocDefaults","","Buildr/Doc/JavadocDefaults.html","",""],["Buildr::Doc::Scaladoc","","Buildr/Doc/Scaladoc.html","",""],["Buildr::Doc::ScaladocDefaults","","Buildr/Doc/ScaladocDefaults.html","",""],["Buildr::Doc::VScaladoc","","Buildr/Doc/VScaladoc.html","",""],["Buildr::Eclipse","","Buildr/Eclipse.html","",""],["Buildr::Eclipse::Eclipse","","Buildr/Eclipse/Eclipse.html","",""],["Buildr::Eclipse::Java","","Buildr/Eclipse/Java.html","",""],["Buildr::Eclipse::Options","","Buildr/Eclipse/Options.html","",""],["Buildr::Eclipse::Plugin","","Buildr/Eclipse/Plugin.html","",""],["Buildr::Eclipse::Scala","","Buildr/Eclipse/Scala.html","",""],["Buildr::Emma","","Buildr/Emma.html","","<p>Provides the <code>emma:html</code> and <code>emma:xml</code> tasks.\nRequire explicitly using <code>require &quot;buildr/emma&quot;</code>. …\n"],["Buildr::Extension","","Buildr/Extension.html","","<p>The basic mechanism for extending projects in Buildr are Ruby modules.  In\nfact, base features like compiling …\n"],["Buildr::Extension::ClassMethods","","Buildr/Extension/ClassMethods.html","","<p>Methods added to the extension module when including Extension.\n"],["Buildr::Filter","","Buildr/Filter.html","","<p>A filter knows how to copy files from one directory to another, applying\nmappings to the contents of …\n"],["Buildr::Filter::Mapper","","Buildr/Filter/Mapper.html","","<p>This class implements content replacement logic for Filter.\n<p>To register a new template engine @:foo@, …\n"],["Buildr::GitRelease","","Buildr/GitRelease.html","",""],["Buildr::Groovy","","Buildr/Groovy.html","","<p>Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.   …\n"],["Buildr::Groovy::EasyB","","Buildr/Groovy/EasyB.html","","<p>EasyB is a Groovy based BDD framework. To use in your project:\n\n<pre>test.using :easyb</pre>\n<p>This framework will search …\n"],["Buildr::Groovy::GroovySH","","Buildr/Groovy/GroovySH.html","",""],["Buildr::Groovy::Groovyc","","Buildr/Groovy/Groovyc.html","","<p>Groovyc compiler:\n\n<pre>compile.using(:groovyc)</pre>\n<p>You need to require ‘buildr/groovy/compiler’ if you need to use …\n"],["Buildr::HgRelease","","Buildr/HgRelease.html","",""],["Buildr::IntegrationTestsTask","","Buildr/IntegrationTestsTask.html","","<p>The integration tests task. Buildr has one such task (see\nBuildr#integration) that runs all tests marked …\n"],["Buildr::IntellijIdea","","Buildr/IntellijIdea.html","",""],["Buildr::IntellijIdea::IdeaFile","","Buildr/IntellijIdea/IdeaFile.html","","<p>Abstract base class for IdeaModule and IdeaProject\n"],["Buildr::IntellijIdea::IdeaModule","","Buildr/IntellijIdea/IdeaModule.html","","<p>IdeaModule represents an .iml file\n"],["Buildr::IntellijIdea::IdeaProject","","Buildr/IntellijIdea/IdeaProject.html","","<p>IdeaModule represents an .ipr file\n"],["Buildr::IntellijIdea::ProjectExtension","","Buildr/IntellijIdea/ProjectExtension.html","",""],["Buildr::JBehave","","Buildr/JBehave.html","","<p>JBehave is a Java BDD framework. To use in your project:\n\n<pre>test.using :jbehave</pre>\n<p>This framework will search …\n"],["Buildr::JMock","","Buildr/JMock.html","","<p>JMock is available when using JUnit and TestNG, JBehave.\n"],["Buildr::JRebel","","Buildr/JRebel.html","",""],["Buildr::JUnit","","Buildr/JUnit.html","","<p>JUnit test framework, the default test framework for Java tests.\n<p>Support the following options:\n<p>:fork  …\n"],["Buildr::JUnit::Report","","Buildr/JUnit/Report.html","","<p>Used by the junit:report task. Access through JUnit#report if you want to\nset various options for that …\n"],["Buildr::Layout","","Buildr/Layout.html","","<p>Symbolic mapping for directory layout.  Used for both the default and\ncustom layouts.\n<p>For example, the …\n"],["Buildr::Layout::Default","","Buildr/Layout/Default.html","","<p>Default layout has the following properties:\n<p>:source maps to the ‘src’ directory.\n<p>Anything under :source …\n"],["Buildr::MultiTest","","Buildr/MultiTest.html","","<p>A composite test framework that runs multiple other test frameworks.\n<p>e.g.,\n\n<pre>test.using :multitest, :frameworks ...</pre>\n"],["Buildr::OptionalArtifact","","Buildr/OptionalArtifact.html","","<p>An artifact that is optional. If downloading fails, the user will be\ninformed but it will not raise an …\n"],["Buildr::Options","","Buildr/Options.html","","<p>Collection of options for controlling Buildr.\n"],["Buildr::Options::Proxies","","Buildr/Options/Proxies.html","","<p>Wraps around the proxy environment variables:\n<p>:http – HTTP_PROXY\n<p>:https – HTTPS_PROXY\n"],["Buildr::POM","","Buildr/POM.html","",""],["Buildr::Package","","Buildr/Package.html","","<p>Methods added to Project to support packaging and tasks for packaging,\ninstalling and uploading packages. …\n"],["Buildr::PackageGemTask","","Buildr/PackageGemTask.html","",""],["Buildr::Packaging","","Buildr/Packaging.html","",""],["Buildr::Packaging::Java","","Buildr/Packaging/Java.html","","<p>Adds packaging for Java projects: JAR, WAR, AAR, EAR, Javadoc.\n"],["Buildr::Packaging::Java::AarTask","","Buildr/Packaging/Java/AarTask.html","","<p>Extends the JarTask to create an AAR file (Axis2 service archive).\n<p>Supports all the same options as JarTask …\n"],["Buildr::Packaging::Java::EarTask","","Buildr/Packaging/Java/EarTask.html","","<p>Extend the JarTask to create an EAR file.\n<p>The following component types are supported by the EARTask: …\n"],["Buildr::Packaging::Java::JarTask","","Buildr/Packaging/Java/JarTask.html","","<p>Extends the ZipTask to create a JAR file.\n<p>This task supports two additional attributes: manifest and meta-inf. …\n"],["Buildr::Packaging::Java::Manifest","","Buildr/Packaging/Java/Manifest.html","",""],["Buildr::Packaging::Java::WarTask","","Buildr/Packaging/Java/WarTask.html","","<p>Extends the JarTask to create a WAR file.\n<p>Supports all the same options as JarTask, in additon to these …\n"],["Buildr::Packaging::Scala","","Buildr/Packaging/Scala.html","",""],["Buildr::ProcessStatus","","Buildr/ProcessStatus.html","",""],["Buildr::Project","","Buildr/Project.html","","<p>A project definition is where you define all the tasks associated with the\nproject you’re building.\n<p>The …\n"],["Buildr::RSpec","","Buildr/RSpec.html","","<p>&lt;a href=“rspec.info”>RSpec</a&gt; is the defacto BDD framework for ruby.\nTo test your project …\n"],["Buildr::Repositories","","Buildr/Repositories.html","","<p>Holds the path to the local repository, URLs for remote repositories, and\nsettings for release server. …\n"],["Buildr::ResourcesTask","","Buildr/ResourcesTask.html","","<p>The resources task is executed by the compile task to copy resource files\nover to the target directory. …\n"],["Buildr::Run","","Buildr/Run.html","",""],["Buildr::Run::Base","","Buildr/Run/Base.html","","<p>Base class for any run provider.  Defines most common functionality (things\nlike @lang@, @build?@ and …\n"],["Buildr::Run::JavaRunner","","Buildr/Run/JavaRunner.html","",""],["Buildr::Run::RunTask","","Buildr/Run/RunTask.html","",""],["Buildr::Scala","","Buildr/Scala.html","","<p>Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.   …\n"],["Buildr::Scala::Check","","Buildr/Scala/Check.html","","<p>Scala::Check is available when using Scala::Test or Scala::Specs\n"],["Buildr::Scala::Mockito","","Buildr/Scala/Mockito.html","","<p>Mockito is available when running ScalaTest\n"],["Buildr::Scala::ProjectExtension","","Buildr/Scala/ProjectExtension.html","",""],["Buildr::Scala::ScalaShell","","Buildr/Scala/ScalaShell.html","",""],["Buildr::Scala::ScalaTest","","Buildr/Scala/ScalaTest.html","","<p>ScalaTest framework, the default test framework for Scala tests.\n<p>Support the following options:\n<p>:properties …\n"],["Buildr::Scala::Scalac","","Buildr/Scala/Scalac.html","","<p>Scalac compiler:\n\n<pre>compile.using(:scalac)</pre>\n<p>Used by default if .scala files are found in the src/main/scala …\n"],["Buildr::Scala::Scalac::Javac","","Buildr/Compiler/Javac.html","","<p>Javac compiler:\n\n<pre>compile.using(:javac)</pre>\n<p>Used by default if .java files are found in the src/main/java directory …\n"],["Buildr::Scala::ScalacOptions","","Buildr/Scala/ScalacOptions.html","",""],["Buildr::Scala::Specs","","Buildr/Scala/Specs.html","","<p>Specs is a Scala based BDD framework. To use in your project:\n\n<pre>test.using :specs</pre>\n<p>This framework will search …\n"],["Buildr::Scala::Specs2","","Buildr/Scala/Specs2.html","",""],["Buildr::Settings","","Buildr/Settings.html","","<p>Provide settings that come from three sources.\n<p>User settings are placed in the .buildr/settings.yaml file …\n"],["Buildr::Shell","","Buildr/Shell.html","","<p>Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.   …\n"],["Buildr::Shell::Base","","Buildr/Shell/Base.html","","<p>Base class for any shell provider.\n"],["Buildr::Shell::BeanShell","","Buildr/Shell/BeanShell.html","",""],["Buildr::Shell::Clojure","","Buildr/Shell/Clojure.html","",""],["Buildr::Shell::JIRB","","Buildr/Shell/JIRB.html","",""],["Buildr::Shell::ShellTask","","Buildr/Shell/ShellTask.html","",""],["Buildr::SvnRelease","","Buildr/SvnRelease.html","",""],["Buildr::TarTask","","Buildr/TarTask.html","","<p>The TarTask creates a new Tar file. You can include any number of files and\nand directories, use exclusion …\n"],["Buildr::Test","","Buildr/Test.html","","<p>Methods added to Project to support compilation and running of tests.\n"],["Buildr::Test::SkipIfNoTest","","Buildr/Test/SkipIfNoTest.html","","<p>We define a module inline that will inject cancelling the task if tests are\nskipped.\n"],["Buildr::TestFramework","","Buildr/TestFramework.html","","<p>The underlying test framework used by TestTask. To add a new test\nframework, extend TestFramework::Base …\n"],["Buildr::TestFramework::Base","","Buildr/TestFramework/Base.html","","<p>Base class for all test frameworks, with common functionality.  Extend and\nover-ride as you see fit (see …\n"],["Buildr::TestFramework::JRubyBased","","Buildr/TestFramework/JRubyBased.html","",""],["Buildr::TestFramework::JRubyBased::ClassMethods","","Buildr/TestFramework/JRubyBased/ClassMethods.html","",""],["Buildr::TestFramework::Java","","Buildr/TestFramework/Java.html","",""],["Buildr::TestFramework::TestResult","","Buildr/TestFramework/TestResult.html","","<p>A class used by buildr for jruby based frameworks, so that buildr can know\nwhich tests succeeded/failed. …\n"],["Buildr::TestFramework::TestResult::Error","","Buildr/TestFramework/TestResult/Error.html","",""],["Buildr::TestFramework::TestResult::YamlFormatter","","Buildr/TestFramework/TestResult/YamlFormatter.html","","<p>An Rspec formatter used by buildr\n"],["Buildr::TestNG","","Buildr/TestNG.html","","<p>TestNG test framework.  To use in your project:\n\n<pre>test.using :testng</pre>\n<p>Support the following options:\n"],["Buildr::TestTask","","Buildr/TestTask.html","","<p>The test task controls the entire test lifecycle.\n<p>You can use the test task in three ways. You can access …\n"],["Buildr::Unzip","","Buildr/Unzip.html","","<p>An object for unzipping/untarring a file into a target directory. You can\ntell it to include or exclude …\n"],["Buildr::Util","","Buildr/Util.html","",""],["Buildr::VersionRequirement","","Buildr/VersionRequirement.html","","<p>See ArtifactNamespace#need\n<p>See ArtifactNamespace#need\n"],["Buildr::ZipTask","","Buildr/ZipTask.html","","<p>The ZipTask creates a new Zip file. You can include any number of files and\nand directories, use exclusion …\n"],["CGI","","CGI.html","","<p>Overview\n<p>The Common Gateway Interface (CGI) is a simple protocol for passing an HTTP\nrequest from a web …\n"],["CMath","","CMath.html","","<p>CMath\n<p>CMath is a library that provides trigonometric and transcendental functions\nfor complex numbers. …\n"],["CSV","","CSV.html","","<p>This class provides a complete interface to CSV files and data.  It offers\ntools to enable you to read …\n"],["CSV::MalformedCSVError","","CSV/MalformedCSVError.html","","<p>The error thrown when the parser encounters illegal CSV formatting.\n"],["CSV::Row","","CSV/Row.html","","<p>A CSV::Row is part Array and part Hash.  It retains an order for the fields\nand allows duplicates just …\n"],["CSV::Table","","CSV/Table.html","","<p>A CSV::Table is a two-dimensional data structure for representing CSV\ndocuments.  Tables allow you to …\n"],["ConditionVariable","","ConditionVariable.html","","<p>ConditionVariable objects augment class Mutex. Using condition variables,\nit is possible to suspend while …\n"],["DEBUGGER__","","DEBUGGER__.html","",""],["DEBUGGER__::Context","","DEBUGGER__/Context.html","",""],["DL","","DL.html","",""],["Date","","Date.html","",""],["Delegator","","Delegator.html","","<p>This library provides three different ways to delegate method calls to an\nobject.  The easiest to use …\n"],["Digest","","Digest.html","",""],["Digest::Class","","Digest/Class.html","",""],["Digest::Instance","","Digest/Instance.html","",""],["Dir","","Dir.html","",""],["ENV","","ENV.html","",""],["ERB","","ERB.html","","<p>ERB – Ruby Templating\n<p>Introduction\n<p>ERB provides an easy to use but powerful templating system for Ruby …\n"],["ERB::DefMethod","","ERB/DefMethod.html","","<p>Utility module to define eRuby script as instance method.\n<p>Example\n<p>example.rhtml:\n"],["ERB::Util","","ERB/Util.html","","<p>A utility module for conversion routines, often handy in HTML generation.\n"],["Enumerable","","Enumerable.html","",""],["Exception2MessageMapper","","Exception2MessageMapper.html","","\n<pre>e2mmap.rb - for ruby 1.1\n    $Release Version: 2.0$\n    $Revision: 1.10 $\n    by Keiju ISHITSUKA</pre>\n<p>–\n\n<pre>Usage:</pre>\n"],["Exception2MessageMapper::E2MM","","Exception2MessageMapper.html","","\n<pre>e2mmap.rb - for ruby 1.1\n    $Release Version: 2.0$\n    $Revision: 1.10 $\n    by Keiju ISHITSUKA</pre>\n<p>–\n\n<pre>Usage:</pre>\n"],["Fiddle","","Fiddle.html","",""],["File","","File.html","",""],["File::Stat","","File/Stat.html","",""],["FileUtils","","FileUtils.html","","<p>fileutils.rb\n<p>Copyright © 2000-2007 Minero Aoki\n<p>This program is free software. You can distribute/modify …\n"],["FileUtils::DryRun","","FileUtils/DryRun.html","","<p>This module has all methods of FileUtils module, but never changes\nfiles/directories, with printing message …\n"],["FileUtils::LowMethods","","FileUtils/LowMethods.html","",""],["FileUtils::NoWrite","","FileUtils/NoWrite.html","","<p>This module has all methods of FileUtils module, but never changes\nfiles/directories.  This equates to …\n"],["FileUtils::StreamUtils_","","FileUtils/StreamUtils_.html","",""],["FileUtils::Verbose","","FileUtils/Verbose.html","","<p>This module has all methods of FileUtils module, but it outputs messages\nbefore acting.  This equates …\n"],["Find","","Find.html","","<p>The <code>Find</code> module supports the top-down traversal of a set of\nfile paths.\n<p>For example, to total the size …\n"],["Fixnum","","Fixnum.html","","<p>When mathn is required, Fixnum’s division and exponentiation are enhanced\nto return more precise values …\n"],["Float","","Float.html","","<p>When mathn is required, Float is changed to handle Complex numbers.\n"],["Forwardable","","Forwardable.html","","<p>The Forwardable module provides delegation of specified methods to a\ndesignated object, using the methods …\n"],["GServer","","GServer.html","","<p>GServer implements a generic server, featuring thread pool management,\nsimple logging, and multi-server …\n"],["Gem","","Gem.html","","<p>RubyGems is the Ruby standard for publishing and managing third party\nlibraries.\n<p>For user documentation, …\n"],["Gem::LoadError","","Gem/LoadError.html","","<p>Raised when RubyGems is unable to load or activate a gem.  Contains the\nname and version requirements …\n"],["Gem::Version","","Gem/Version.html","",""],["GetoptLong","","GetoptLong.html","","<p>The GetoptLong class allows you to parse command line options similarly to\nthe GNU getopt_long() C library …\n"],["GetoptLong::AmbiguousOption","","GetoptLong/AmbiguousOption.html","",""],["GetoptLong::Error","","GetoptLong/Error.html","","<p>Error types.\n"],["GetoptLong::InvalidOption","","GetoptLong/InvalidOption.html","",""],["GetoptLong::MissingArgument","","GetoptLong/MissingArgument.html","",""],["GetoptLong::NeedlessArgument","","GetoptLong/NeedlessArgument.html","",""],["Hash","","Hash.html","",""],["IO","","IO.html","",""],["IPAddr","","IPAddr.html","","<p>IPAddr provides a set of methods to manipulate an IP address.  Both IPv4\nand IPv6 are supported.\n<p>Example …\n"],["IPSocket","","IPSocket.html","",""],["IRB","","IRB.html","",""],["IRB::Abort","","IRB/Abort.html","",""],["IRB::Irb","","IRB/Irb.html","","<p>irb interpreter main routine\n"],["Integer","","Integer.html","",""],["JSON","","JSON.html","",""],["Java","","Java.html","","<p>Base module for all things Java.\n<p>Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor …\n"],["Java::Commands","","Java/Commands.html","","<p>JDK commands: java, javac, javadoc, etc.\n"],["Java::JavaWrapper","","Java/JavaWrapper.html","","<p><strong>Deprecated:</strong> In earlier versions, Java.wrapper served as a\nwrapper around RJB/JRuby. From this version ...\n"],["Java::Options","","Java/Options.html","",""],["Kconv","","Kconv.html","","<p>Kanji Converter for Ruby.\n"],["Kernel","","Kernel.html","",""],["Logger","","Logger.html","","<p>Description\n<p>The Logger class provides a simple but sophisticated logging utility that\nyou can use to output …\n"],["Logger::Application","","Logger/Application.html","","<p>Description\n<p>Application – Add logging support to your application.\n<p>Usage\n"],["Logger::Formatter","","Logger/Formatter.html","","<p>Default formatter for log messages\n"],["Logger::LogDevice","","Logger/LogDevice.html","","<p>Device used for logging messages.\n"],["Logger::LogDevice::LogDeviceMutex","","Logger/LogDevice/LogDeviceMutex.html","",""],["Logger::Severity","","Logger/Severity.html","","<p>Logging severity.\n"],["Logging","","Logging.html","",""],["MatchData","","MatchData.html","",""],["Math","","Math.html","","<p>When mathn is required, the Math module changes as follows:\n<p>Standard Math module behaviour:\n\n<pre>Math.sqrt(4/9) ...</pre>\n"],["Matrix","","Matrix.html","","<p>The <code>Matrix</code> class represents a mathematical matrix. It provides\nmethods for creating matrices, operating …\n"],["Module","","Module.html","","<p>Workaround for BUILDR-535: when requiring ‘ffi’, JRuby defines an :error\nmethod with arity 0.\n"],["Monitor","","Monitor.html","","<p>Use the Monitor class when you want to have a lock object for blocks with\nmutual exclusion.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'monitor'</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["MonitorMixin","","MonitorMixin.html","","<p>In concurrent programming, a monitor is an object or module intended to be\nused safely by more than one …\n"],["MonitorMixin::ConditionVariable","","MonitorMixin/ConditionVariable.html","","<p>FIXME: This isn’t documented in Nutshell.\n<p>Since MonitorMixin.new_cond returns a ConditionVariable, and …\n"],["MonitorMixin::ConditionVariable::Timeout","","MonitorMixin/ConditionVariable/Timeout.html","",""],["MultiTkIp","","MultiTkIp.html","","<p>methods for construction\n<p>get target IP\n<p>get info\n"],["MultiTkIp::Command_Queue","","MultiTkIp/Command_Queue.html","",""],["MultiTkIp_OK","","MultiTkIp_OK.html","","<p>exceptiopn to treat the return value from IP\n"],["MultiTkIp_PseudoToplevel_Evaluable","","MultiTkIp_PseudoToplevel_Evaluable.html","","<p>dummy\n"],["Mutex_m","","Mutex_m.html","",""],["Numeric","","Numeric.html","","<p>mathn\n<p>mathn is a library for changing the way Ruby does math.  If you need more\nprecise rounding with …\n"],["Object","","Object.html","",""],["Object::Scala","","Buildr/Scala.html","","<p>Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.   …\n"],["Object::Synchronizer","","Sync.html","","<p>A class that providesa two-phase lock with a counter.  See Sync_m for\ndetails.\n"],["Object::Synchronizer_m","","Sync_m.html","","<p>A module that provides a two-phase lock with a counter.\n"],["Object::ThWait","","ThreadsWait.html","","<p>This class watches for termination of multiple threads.  Basic\nfunctionality (wait until specified threads …\n"],["Object::TimeoutError","","Timeout/Error.html","","<p>Raised by Timeout#timeout when the block times out.\n"],["Observable","","Observable.html","","<p>The Observer pattern (also known as publish/subscribe) provides a simple\nmechanism for one object to …\n"],["Open3","","Open3.html","","<p>Open3 grants you access to stdin, stdout, stderr and a thread to wait the\nchild process when running …\n"],["OpenObject","","OpenObject.html","",""],["OpenStruct","","OpenStruct.html","","<p>An OpenStruct is a data structure, similar to a Hash, that allows the\ndefinition of arbitrary attributes …\n"],["OpenURI","","OpenURI.html","","\n<pre>OpenURI is an easy-to-use wrapper for net/http, net/https and net/ftp.</pre>\n<p>Example\n\n<pre>It is possible to open an ...</pre>\n"],["OpenURI::HTTPError","","OpenURI/HTTPError.html","",""],["OpenURI::HTTPRedirect","","OpenURI/HTTPRedirect.html","",""],["OpenURI::Meta","","OpenURI/Meta.html","","<p>Mixin for holding meta-information.\n"],["OpenURI::OpenRead","","OpenURI/OpenRead.html","","<p>Mixin for HTTP and FTP URIs.\n"],["OptionParser","","OptionParser.html","","<p>Developer Documentation (not for RDoc output)\n<p>Class tree\n<p><p>OptionParser &mdash; front end\n"],["OptionParser::Acceptables","","OptionParser/Acceptables.html","","<p>Acceptable argument classes. Now contains DecimalInteger, OctalInteger and\nDecimalNumeric. See Acceptable …\n"],["OptionParser::AmbiguousArgument","","OptionParser/AmbiguousArgument.html","","<p>Raises when the given argument word can’t be completed uniquely.\n"],["OptionParser::AmbiguousOption","","OptionParser/AmbiguousOption.html","","<p>Raises when ambiguously completable string is encountered.\n"],["OptionParser::Arguable","","OptionParser/Arguable.html","","<p>Extends command line arguments array (ARGV) to parse itself.\n"],["OptionParser::CompletingHash","","OptionParser/CompletingHash.html","","<p>Hash with completion search feature. See OptionParser::Completion.\n"],["OptionParser::Completion","","OptionParser/Completion.html","","<p>Keyword completion module.  This allows partial arguments to be specified\nand resolved against a list …\n"],["OptionParser::InvalidArgument","","OptionParser/InvalidArgument.html","","<p>Raises when the given argument does not match required format.\n"],["OptionParser::InvalidOption","","OptionParser/InvalidOption.html","","<p>Raises when switch is undefined.\n"],["OptionParser::List","","OptionParser/List.html","","<p>Simple option list providing mapping from short and/or long option string\nto OptionParser::Switch and …\n"],["OptionParser::MissingArgument","","OptionParser/MissingArgument.html","","<p>Raises when a switch with mandatory argument has no argument.\n"],["OptionParser::NeedlessArgument","","OptionParser/NeedlessArgument.html","","<p>Raises when there is an argument for a switch which takes no argument.\n"],["OptionParser::OptionMap","","OptionParser/OptionMap.html","","<p>Map from option/keyword string to object with completion.\n"],["OptionParser::ParseError","","OptionParser/ParseError.html","","<p>Base class of exceptions from OptionParser.\n"],["OptionParser::Switch","","OptionParser/Switch.html","","<p>Individual switch class.  Not important to the user.\n<p>Defined within Switch are several Switch-derived …\n"],["OptionParser::Switch::NoArgument","","OptionParser/Switch/NoArgument.html","","<p>Switch that takes no arguments.\n"],["OptionParser::Switch::OptionalArgument","","OptionParser/Switch/OptionalArgument.html","","<p>Switch that can omit argument.\n"],["OptionParser::Switch::PlacedArgument","","OptionParser/Switch/PlacedArgument.html","","<p>Switch that takes an argument, which does not begin with ‘-’.\n"],["OptionParser::Switch::RequiredArgument","","OptionParser/Switch/RequiredArgument.html","","<p>Switch that takes an argument.\n"],["PP","","PP.html","",""],["PP::ObjectMixin","","PP/ObjectMixin.html","",""],["PP::PPMethods","","PP/PPMethods.html","",""],["PP::SingleLine","","PP/SingleLine.html","",""],["PStore","","PStore.html","","<p>PStore implements a file based persistence mechanism based on a Hash.  User\ncode can store hierarchies …\n"],["PStore::Error","","PStore/Error.html","","<p>The error type thrown by all PStore methods.\n"],["Pathname","","Pathname.html","",""],["PrettyPrint","","PrettyPrint.html","","<p>This class implements a pretty printing algorithm. It finds line breaks and\nnice indentations for grouped …\n"],["PrettyPrint::Breakable","","PrettyPrint/Breakable.html","",""],["PrettyPrint::Group","","PrettyPrint/Group.html","",""],["PrettyPrint::GroupQueue","","PrettyPrint/GroupQueue.html","",""],["PrettyPrint::SingleLine","","PrettyPrint/SingleLine.html","",""],["PrettyPrint::Text","","PrettyPrint/Text.html","",""],["Prime","","Prime.html","","<p>The set of all prime numbers.\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Prime</span>.<span class=\"ruby-identifier\">each</span>(<span class=\"ruby-value\">100</span>) <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">prime</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">p</span> <span class=\"ruby-identifier\">prime</span>  <span class=\"ruby-comment\">#=&gt; 2, 3, 5, 7, 11, ...., 97 ...</span>\n</pre>\n"],["Prime::EratosthenesGenerator","","Prime/EratosthenesGenerator.html","","<p>An implementation of <code>PseudoPrimeGenerator</code>.\n<p>Uses <code>EratosthenesSieve</code>.\n"],["Prime::EratosthenesSieve","","Prime/EratosthenesSieve.html","","<p>Internal use. An implementation of eratosthenes’s sieve\n"],["Prime::Generator23","","Prime/Generator23.html","","<p>Generates all integer which are greater than 2 and are not divided by 2 nor\n3.\n<p>This is a pseudo-prime …\n"],["Prime::OldCompatibility","","Prime/OldCompatibility.html","","<p>Provides a <code>Prime</code> object with compatibility to Ruby 1.8 when\ninstantiated via <code>Prime</code>.<code>new</code>.\n"],["Prime::PseudoPrimeGenerator","","Prime/PseudoPrimeGenerator.html","","<p>An abstract class for enumerating pseudo-prime numbers.\n<p>Concrete subclasses should override succ, next, …\n"],["Prime::TrialDivision","","Prime/TrialDivision.html","","<p>Internal use. An implementation of prime table by trial division method.\n"],["Prime::TrialDivisionGenerator","","Prime/TrialDivisionGenerator.html","","<p>An implementation of <code>PseudoPrimeGenerator</code> which uses a prime\ntable generated by trial division.\n"],["Profiler__","","Profiler__.html","",""],["ProgressBar","","ProgressBar.html","","<p>Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.   …\n"],["Psych","","Psych.html","","<p>Overview\n<p>Psych is a YAML parser and emitter.  Psych leverages libyaml for it’s YAML\nparsing and emitting …\n"],["Psych::BadAlias","","Psych/BadAlias.html","",""],["Psych::Exception","","Psych/Exception.html","",""],["Queue","","Queue.html","","<p>This class provides a way to synchronize communication between threads.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'thread'</span>\n\n<span class=\"ruby-identifier\">queue</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["RDoc","","RDoc.html","","<p>RDoc is a Ruby documentation system which contains RDoc::RDoc for\ngenerating documentation, RDoc::RI …\n"],["RDoc::Error","","RDoc/Error.html","","<p>Exception thrown by any rdoc error.\n"],["RSS","","RSS.html","","<p>RSS reading and writing\n<p>Really Simple Syndication (RSS) is a family of formats that describe\n‘feeds,’ …\n"],["Rake","","Rake.html","",""],["Rake::FileTask","","Rake/FileTask.html","",""],["Range","","Range.html","",""],["Rational","","Rational.html","","<p>When mathn is required Rational is changed to simplify the use of Rational\noperations.\n<p>Normal behaviour: …\n"],["RemoteTkIp","","RemoteTkIp.html","",""],["Resolv","","Resolv.html","","<p>Resolv is a thread-aware DNS resolver library written in Ruby.  Resolv can\nhandle multiple DNS requests …\n"],["Resolv::DNS","","Resolv/DNS.html","","<p>Resolv::DNS is a DNS stub resolver.\n<p>Information taken from the following places:\n<p>STD0013\n"],["Resolv::DNS::Config","","Resolv/DNS/Config.html","",""],["Resolv::DNS::Config::NXDomain","","Resolv/DNS/Config/NXDomain.html","","<p>Indicates no such domain was found.\n"],["Resolv::DNS::Config::OtherResolvError","","Resolv/DNS/Config/OtherResolvError.html","","<p>Indicates some other unhandled resolver error was encountered.\n"],["Resolv::DNS::DecodeError","","Resolv/DNS/DecodeError.html","","<p>Indicates that the DNS response was unable to be decoded.\n"],["Resolv::DNS::EncodeError","","Resolv/DNS/EncodeError.html","","<p>Indicates that the DNS request was unable to be encoded.\n"],["Resolv::DNS::Name","","Resolv/DNS/Name.html","","<p>A representation of a DNS name.\n"],["Resolv::DNS::Query","","Resolv/DNS/Query.html","","<p>A DNS query abstract class.\n"],["Resolv::DNS::Requester","","Resolv/DNS/Requester.html","",""],["Resolv::DNS::Requester::RequestError","","Resolv/DNS/Requester/RequestError.html","","<p>Indicates a problem with the DNS request.\n"],["Resolv::DNS::Resource","","Resolv/DNS/Resource.html","","<p>A DNS resource abstract class.\n"],["Resolv::DNS::Resource::ANY","","Resolv/DNS/Resource/ANY.html","","<p>A Query type requesting any RR.\n"],["Resolv::DNS::Resource::CNAME","","Resolv/DNS/Resource/CNAME.html","","<p>The canonical name for an alias.\n"],["Resolv::DNS::Resource::DomainName","","Resolv/DNS/Resource/DomainName.html","","<p>Domain Name resource abstract class.\n"],["Resolv::DNS::Resource::Generic","","Resolv/DNS/Resource/Generic.html","","<p>A generic resource abstract class.\n"],["Resolv::DNS::Resource::HINFO","","Resolv/DNS/Resource/HINFO.html","","<p>Host Information resource.\n"],["Resolv::DNS::Resource::IN","","Resolv/DNS/Resource/IN.html","","<p>module IN contains ARPA Internet specific RRs.\n"],["Resolv::DNS::Resource::IN::A","","Resolv/DNS/Resource/IN/A.html","","<p>IPv4 Address resource\n"],["Resolv::DNS::Resource::IN::AAAA","","Resolv/DNS/Resource/IN/AAAA.html","","<p>An IPv6 address record.\n"],["Resolv::DNS::Resource::IN::SRV","","Resolv/DNS/Resource/IN/SRV.html","","<p>SRV resource record defined in RFC 2782\n<p>These records identify the hostname and port that a service is …\n"],["Resolv::DNS::Resource::IN::WKS","","Resolv/DNS/Resource/IN/WKS.html","","<p>Well Known Service resource.\n"],["Resolv::DNS::Resource::MINFO","","Resolv/DNS/Resource/MINFO.html","","<p>Mailing list or mailbox information.\n"],["Resolv::DNS::Resource::MX","","Resolv/DNS/Resource/MX.html","","<p>Mail Exchanger resource.\n"],["Resolv::DNS::Resource::NS","","Resolv/DNS/Resource/NS.html","","<p>An authoritative name server.\n"],["Resolv::DNS::Resource::PTR","","Resolv/DNS/Resource/PTR.html","","<p>A Pointer to another DNS name.\n"],["Resolv::DNS::Resource::SOA","","Resolv/DNS/Resource/SOA.html","","<p>Start Of Authority resource.\n"],["Resolv::DNS::Resource::TXT","","Resolv/DNS/Resource/TXT.html","","<p>Unstructured text resource.\n"],["Resolv::Hosts","","Resolv/Hosts.html","","<p>Resolv::Hosts is a hostname resolver that uses the system hosts file.\n"],["Resolv::IPv4","","Resolv/IPv4.html","","<p>A Resolv::DNS IPv4 address.\n"],["Resolv::IPv6","","Resolv/IPv6.html","","<p>A Resolv::DNS IPv6 address.\n"],["Resolv::ResolvError","","Resolv/ResolvError.html","","<p>Indicates a failure to resolve a name or address.\n"],["Resolv::ResolvTimeout","","Resolv/ResolvTimeout.html","","<p>Indicates a timeout resolving a name or address.\n"],["SOCKSSocket","","SOCKSSocket.html","",""],["STRING_OR_FAILED_FORMAT","","STRING_OR_FAILED_FORMAT.html","",""],["Scanf","","Scanf.html","","<p>scanf for Ruby\n<p>Description\n<p>scanf is an implementation of the C function scanf(3), modified as\nnecessary …\n"],["Scanf::FormatSpecifier","","Scanf/FormatSpecifier.html","",""],["Scanf::FormatString","","Scanf/FormatString.html","",""],["SecureRandom","","SecureRandom.html","",""],["Set","","Set.html","","<p>Set implements a collection of unordered values with no duplicates. This is\na hybrid of Array’s intuitive …\n"],["Shell","","Shell.html","",""],["Shellwords","","Shellwords.html","","<p>This module manipulates strings according to the word parsing rules of the\nUNIX Bourne shell.\n<p>The shellwords() …\n"],["SimpleDelegator","","SimpleDelegator.html","","<p>A concrete implementation of Delegator, this class provides the means to\ndelegate all supported method …\n"],["SingleForwardable","","SingleForwardable.html","","<p>Usage of The SingleForwardable is like Fowadable module.\n"],["Singleton","","Singleton.html","","<p>The Singleton module implements the Singleton pattern.\n<p>Usage\n<p>To use Singleton, include the module in your …\n"],["SizedQueue","","SizedQueue.html","","<p>This class represents queues of specified size capacity.  The push\noperation may be blocked if the capacity …\n"],["Socket","","Socket.html","",""],["Socket::UDPSource","","Socket/UDPSource.html","","<p>UDP/IP address information used by Socket.udp_server_loop.\n"],["SortedSet","","SortedSet.html","","<p>SortedSet implements a Set that guarantees that it’s element are yielded in\nsorted order (according to …\n"],["String","","String.html","",""],["Struct","","Struct.html","",""],["Syck","","Syck.html","","<p>YAML\n<p>YAML(tm) (rhymes with ‘camel’) is a straightforward machine parsable data\nserialization format designed …\n"],["Sync","","Sync.html","","<p>A class that providesa two-phase lock with a counter.  See Sync_m for\ndetails.\n"],["Sync_m","","Sync_m.html","","<p>A module that provides a two-phase lock with a counter.\n"],["Sync_m::Err","","Sync_m/Err.html","","<p>exceptions\n"],["Sync_m::Err::LockModeFailer","","Sync_m/Err/LockModeFailer.html","",""],["Sync_m::Err::UnknownLocker","","Sync_m/Err/UnknownLocker.html","",""],["TCPSocket","","TCPSocket.html","",""],["TSort","","TSort.html","","<p>TSort implements topological sorting using Tarjan’s algorithm for strongly\nconnected components.\n<p>TSort …\n"],["TSort::Cyclic","","TSort/Cyclic.html","",""],["TclTkIp","","TclTkIp.html","","<p>add ThreadGroup check to TclTkIp.new\n"],["TclTkLib","","TclTkLib.html","","<p>wrap methods on TclTkLib : not permit calling TclTkLib module methods\n"],["Tempfile","","Tempfile.html","","<p>A utility class for managing temporary files. When you create a Tempfile\nobject, it will create a temporary …\n"],["Tempfile::Remover","","Tempfile/Remover.html","",""],["ThreadError","","ThreadError.html","",""],["ThreadsWait","","ThreadsWait.html","","<p>This class watches for termination of multiple threads.  Basic\nfunctionality (wait until specified threads …\n"],["Time","","Time.html","","<p>Implements the extensions to the Time class that are described in the\ndocumentation for the time.rb library. …\n"],["Timeout","","Timeout.html","","<p>Timeout long-running blocks\n<p>Synopsis\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'timeout'</span>\n<span class=\"ruby-identifier\">status</span> = <span class=\"ruby-constant\">Timeout</span><span class=\"ruby-operator\">::</span><span class=\"ruby-identifier\">timeout</span>(<span class=\"ruby-value\">5</span>) {\n  <span class=\"ruby-comment\"># Something that ...</span>\n</pre>\n"],["Timeout::Error","","Timeout/Error.html","","<p>Raised by Timeout#timeout when the block times out.\n"],["TkComm","","TkComm.html","","<p>define TkComm module (step 1: basic functions)\n<p>define TkComm module (step 2: event binding)\n"],["TkComm::Tk_CMDTBL","","TkComm/Tk_CMDTBL.html","",""],["TkComm::Tk_WINDOWS","","TkComm/Tk_WINDOWS.html","",""],["TkCore","","TkCore.html","","<p>start Tk which depends on MultiTkIp\n"],["TkCore::INTERP","","MultiTkIp.html","","<p>methods for construction\n<p>get target IP\n<p>get info\n"],["TkCore::Tk_OBJECT_TABLE","","TkCore/Tk_OBJECT_TABLE.html","",""],["Tracer","","Tracer.html","","<p>tracer main class\n"],["UDPSocket","","UDPSocket.html","",""],["URI","","URI.html","","<p>Not quite open-uri, but similar. Provides read and write methods for the\nresource represented by the …\n"],["URI::FILE","","URI/FILE.html","","<p>File URL. Keep in mind that file URLs take the form of\n<code>file://host/path</code>, although the host is not used, …\n"],["URI::FTP","","URI/FTP.html","",""],["URI::Generic","","URI/Generic.html","",""],["URI::HTTP","","URI/HTTP.html","",""],["URI::NotFoundError","","URI/NotFoundError.html","","<p>Raised when trying to read/download a resource that doesn’t exist.\n"],["Vector","","Vector.html","","<p>The <code>Vector</code> class represents a mathematical vector, which is\nuseful in its own right, and also constitutes …\n"],["Vector::ZeroVectorError","","Vector/ZeroVectorError.html","",""],["WEBrick","","WEBrick.html","","<p>WEB server toolkit.\n<p>WEBrick is an HTTP server toolkit that can be configured as an HTTPS\nserver, a proxy …\n"],["WeakRef","","WeakRef.html","","<p>Weak Reference class that allows a referenced object to be\ngarbage-collected.  A WeakRef may be used …\n"],["WeakRef::RefError","","WeakRef/RefError.html","","<p>RefError is raised when a referenced object has been recycled by the\ngarbage collector\n"],["YAML","","YAML.html","","<p>The YAML module allows you to use one of the two YAML engines that ship\nwith ruby.  By default Psych …\n"],["Zip","","Zip.html","",""],["Zip::ZipEntry","","Zip/ZipEntry.html","",""],["Zip::ZipEntrySet","","Zip/ZipEntrySet.html","",""],["!","Delegator","Delegator.html#method-i-21","()",""],["!=","Delegator","Delegator.html#method-i-21-3D","(obj)","<p>Returns true if two objects are not considered of equal value.\n"],["%","STRING_OR_FAILED_FORMAT","STRING_OR_FAILED_FORMAT.html#method-c-25","(x)",""],["&","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-26","(num)",""],["&","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-i-26","(other)","<p>Either modify the current requirement (if it’s already an and operation) or\ncreate a new requirement …\n"],["&","IPAddr","IPAddr.html#method-i-26","(other)","<p>Returns a new ipaddr built by bitwise AND.\n"],["&","Set","Set.html#method-i-26","(enum)","<p>Returns a new set containing elements common to the set and the given\nenumerable object.\n"],["*","Benchmark::Tms","Benchmark/Tms.html#method-i-2A","(x)","<p>Returns a new Tms object obtained by memberwise multiplication of the\nindividual times for this Tms object …\n"],["*","Matrix","Matrix.html#method-i-2A","(m)","<p>Matrix multiplication.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">4</span>], [<span class=\"ruby-value\">6</span>,<span class=\"ruby-value\">8</span>]] * <span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">identity</span>(<span class=\"ruby-value\">2</span>)\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span> <span class=\"ruby-value\">4</span>\n     <span class=\"ruby-value\">6</span> <span class=\"ruby-value\">8</span>\n</pre>\n"],["*","Vector","Vector.html#method-i-2A","(x)","<p>Multiplies the vector by <code>x</code>, where <code>x</code> is a number\nor another vector.\n"],["**","Bignum","Bignum.html#method-i-2A-2A","(other)","<p>Exponentiate by <code>other</code>\n"],["**","Fixnum","Fixnum.html#method-i-2A-2A","(other)","<p>Exponentiate by <code>other</code>\n"],["**","Float","Float.html#method-i-2A-2A","(other)","<p>Exponentiate by <code>other</code>\n"],["**","Matrix","Matrix.html#method-i-2A-2A","(other)","<p>Matrix exponentiation. Equivalent to multiplying the matrix by itself N\ntimes. Non integer exponents …\n"],["**","Rational","Rational.html#method-i-2A-2A","(other)","<p>Exponentiate by <code>other</code>\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">/</span><span class=\"ruby-value\">3</span>) <span class=\"ruby-operator\">**</span> <span class=\"ruby-value\">2</span> <span class=\"ruby-comment\"># =&gt; 1/9</span>\n</pre>\n"],["+","Benchmark::Tms","Benchmark/Tms.html#method-i-2B","(other)","<p>Returns a new Tms object obtained by memberwise summation of the individual\ntimes for this Tms object …\n"],["+","Matrix","Matrix.html#method-i-2B","(m)","<p>Matrix addition.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">scalar</span>(<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">5</span>) <span class=\"ruby-operator\">+</span> <span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">0</span>], [<span class=\"ruby-value\">-4</span>,<span class=\"ruby-value\">7</span>]]\n  =<span class=\"ruby-operator\">&gt;</span>  <span class=\"ruby-value\">6</span>  <span class=\"ruby-value\">0</span>\n     <span class=\"ruby-value\">-4</span> <span class=\"ruby-value\">12</span>\n</pre>\n"],["+","Pathname","Pathname.html#method-i-2B","(other)","<p>Pathname#+ appends a pathname fragment to this one to produce a new\nPathname object.\n\n<pre>p1 = Pathname.new(&quot;/usr&quot;) ...</pre>\n"],["+","Set","Set.html#method-i-2B","(enum)",""],["+","Vector","Vector.html#method-i-2B","(v)","<p>Vector addition.\n"],["-","Benchmark::Tms","Benchmark/Tms.html#method-i-2D","(other)","<p>Returns a new Tms object obtained by memberwise subtraction of the\nindividual times for the other Tms …\n"],["-","Matrix","Matrix.html#method-i-2D","(m)","<p>Matrix subtraction.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">5</span>], [<span class=\"ruby-value\">4</span>,<span class=\"ruby-value\">2</span>]] <span class=\"ruby-operator\">-</span> <span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">9</span>,<span class=\"ruby-value\">3</span>], [<span class=\"ruby-value\">-4</span>,<span class=\"ruby-value\">1</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">-8</span>  <span class=\"ruby-value\">2</span>\n      <span class=\"ruby-value\">8</span>  <span class=\"ruby-value\">1</span>\n</pre>\n"],["-","Set","Set.html#method-i-2D","(enum)","<p>Returns a new set built by duplicating the set, removing every element that\nappears in the given enumerable …\n"],["-","Vector","Vector.html#method-i-2D","(v)","<p>Vector subtraction.\n"],["/","Benchmark::Tms","Benchmark/Tms.html#method-i-2F","(x)","<p>Returns a new Tms object obtained by memberwise division of the individual\ntimes for this Tms object …\n"],["/","Matrix","Matrix.html#method-i-2F","(other)","<p>Matrix division (multiplication by the inverse).\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">7</span>,<span class=\"ruby-value\">6</span>], [<span class=\"ruby-value\">3</span>,<span class=\"ruby-value\">9</span>]] <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">9</span>], [<span class=\"ruby-value\">3</span>,<span class=\"ruby-value\">1</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">-7</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n"],["/","Vector","Vector.html#method-i-2F","(x)","<p>Vector division.\n"],["<<","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-3C-3C","(*files)",""],["<<","Buildr::ArchiveTask::Merge","Buildr/ArchiveTask/Merge.html#method-i-3C-3C","(*files)",""],["<<","Buildr::Compiler","Buildr/Compiler.html#method-c-3C-3C","(compiler)",""],["<<","Buildr::Packaging::Java::EarTask","Buildr/Packaging/Java/EarTask.html#method-i-3C-3C","(*args)",""],["<<","Buildr::TestFramework","Buildr/TestFramework.html#method-c-3C-3C","(framework)",""],["<<","CSV","CSV.html#method-i-3C-3C","(row)","<p>The primary write method for wrapped Strings and IOs, <code>row</code> (an\nArray or CSV::Row) is converted to CSV …\n"],["<<","CSV::Row","CSV/Row.html#method-i-3C-3C","(arg)","<p>If a two-element Array is provided, it is assumed to be a header and field\nand the pair is appended. …\n"],["<<","CSV::Table","CSV/Table.html#method-i-3C-3C","(row_or_array)","<p>Adds a new row to the bottom end of this table.  You can provide an Array,\nwhich will be converted to …\n"],["<<","IPAddr","IPAddr.html#method-i-3C-3C","(num)","<p>Returns a new ipaddr built by bitwise left shift.\n"],["<<","Logger","Logger.html#method-i-3C-3C","(msg)","<p>Dump given message to the log device without any formatting.  If no log\ndevice exists, return <code>nil</code>.\n"],["<<","MultiTkIp::Command_Queue","MultiTkIp/Command_Queue.html#method-i-3C-3C","(value)",""],["<<","ProgressBar","ProgressBar.html#method-i-3C-3C","(bytes)",""],["<<","Queue","Queue.html#method-i-3C-3C","(obj)","<p>Alias of push\n"],["<<","Set","Set.html#method-i-3C-3C","(o)",""],["<<","SizedQueue","SizedQueue.html#method-i-3C-3C","(obj)","<p>Alias of push\n"],["<<","Zip::ZipEntrySet","Zip/ZipEntrySet.html#method-i-3C-3C","(entry)",""],["<=>","IPAddr","IPAddr.html#method-i-3C-3D-3E","(other)","<p>Compares the ipaddr with another.\n"],["==","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-3D-3D","(other)",""],["==","CSV::Row","CSV/Row.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if this row contains the same headers and fields\nin the same order as <code>other</code>.\n"],["==","CSV::Table","CSV/Table.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if all rows of this table ==()\n<code>other</code>‘s rows.\n"],["==","Delegator","Delegator.html#method-i-3D-3D","(obj)","<p>Returns true if two objects are considered of equal value.\n"],["==","IPAddr","IPAddr.html#method-i-3D-3D","(other)","<p>Returns true if two ipaddrs are equal.\n"],["==","Matrix","Matrix.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if and only if the two matrices contain equal\nelements.\n"],["==","OpenStruct","OpenStruct.html#method-i-3D-3D","(other)","<p>Compares this object and <code>other</code> for equality.  An OpenStruct is\nequal to <code>other</code> when <code>other</code> is an OpenStruct …\n"],["==","Set","Set.html#method-i-3D-3D","(other)","<p>Returns true if two sets are equal.  The equality of each couple of\nelements is defined according to …\n"],["==","Vector","Vector.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> iff the two vectors have the same elements in the\nsame order.\n"],["===","IPAddr","IPAddr.html#method-i-3D-3D-3D","(other)",""],[">>","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-3E-3E","(num)",""],[">>","IPAddr","IPAddr.html#method-i-3E-3E","(num)","<p>Returns a new ipaddr built by bitwise right-shift.\n"],["CSV","Object","Object.html#method-i-CSV","(*args, &block)","<p>Another name for CSV::instance().\n"],["CurrentContext","IRB","IRB.html#method-c-CurrentContext","()",""],["DelegateClass","Object","Object.html#method-i-DelegateClass","(superclass)","<p>The primary interface to this library.  Use to setup delegation when\ndefining your class.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">MyClass</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["Digest","Object","Object.html#method-i-Digest","(name)","<p>Returns a Digest subclass by <code>name</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'digest'</span>\n\n<span class=\"ruby-constant\">Digest</span>(<span class=\"ruby-string\">&quot;MD5&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; Digest::MD5</span>\n\n<span class=\"ruby-constant\">Digest</span>(<span class=\"ruby-string\">&quot;Foo&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n"],["Fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Fail","(err = nil, *rest)",""],["Fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Fail","(err = nil, *rest)",""],["Fail","Exception2MessageMapper","Exception2MessageMapper.html#method-c-Fail","(klass = E2MM, err = nil, *rest)",""],["Fail","Exception2MessageMapper","Exception2MessageMapper.html#method-c-Fail","(klass = E2MM, err = nil, *rest)",""],["Fail","Sync_m::Err","Sync_m/Err.html#method-c-Fail","(*opt)",""],["Fail","Sync_m::Err::LockModeFailer","Sync_m/Err/LockModeFailer.html#method-c-Fail","(mode)",""],["Fail","Sync_m::Err::UnknownLocker","Sync_m/Err/UnknownLocker.html#method-c-Fail","(th)",""],["I","Matrix","Matrix.html#method-c-I","(n)",""],["Mainloop","Object","Object.html#method-i-Mainloop","()",""],["Raise","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Raise","(err = nil, *rest)","<p>Fail(err, *rest)\n\n<pre>err:    exception\nrest:   message arguments</pre>\n"],["Raise","Exception2MessageMapper","Exception2MessageMapper.html#method-c-Raise","(klass = E2MM, err = nil, *rest)","<p>Fail(klass, err, *rest)\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">klass</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n<span class=\"ruby-identifier\">err</span><span class=\"ruby-operator\">:</span>    <span class=\"ruby-identifier\">exception</span>\n<span class=\"ruby-identifier\">rest</span><span class=\"ruby-operator\">:</span>   <span class=\"ruby-identifier\">message</span> <span class=\"ruby-identifier\">arguments</span>\n</pre>\n"],["Raise","Exception2MessageMapper","Exception2MessageMapper.html#method-c-Raise","(klass = E2MM, err = nil, *rest)","<p>Fail(klass, err, *rest)\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">klass</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n<span class=\"ruby-identifier\">err</span><span class=\"ruby-operator\">:</span>    <span class=\"ruby-identifier\">exception</span>\n<span class=\"ruby-identifier\">rest</span><span class=\"ruby-operator\">:</span>   <span class=\"ruby-identifier\">message</span> <span class=\"ruby-identifier\">arguments</span>\n</pre>\n"],["Raise","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Raise","(err = nil, *rest)","<p>Fail(err, *rest)\n\n<pre>err:    exception\nrest:   message arguments</pre>\n"],["[]","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-5B-5D","(*names)",""],["[]","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-c-5B-5D","(name = nil)",""],["[]","Buildr::Layout","Buildr/Layout.html#method-i-5B-5D","(*args)","<p>Resolves a list of symbols into a path.\n"],["[]","CSV::Row","CSV/Row.html#method-i-5B-5D","(header_or_index, minimum_index = 0)",""],["[]","CSV::Table","CSV/Table.html#method-i-5B-5D","(index_or_header)","<p>In the default mixed mode, this method returns rows for index access and\ncolumns for header access.  …\n"],["[]","Matrix","Matrix.html#method-i-5B-5D","(i, j)","<p>Returns element (<code>i</code>,<code>j</code>) of the matrix.  That is:\nrow <code>i</code>, column <code>j</code>.\n"],["[]","Matrix","Matrix.html#method-c-5B-5D","(*rows)","<p>Creates a matrix where each argument is a row.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[ [<span class=\"ruby-value\">25</span>, <span class=\"ruby-value\">93</span>], [<span class=\"ruby-value\">-1</span>, <span class=\"ruby-value\">66</span>] ]\n   =<span class=\"ruby-operator\">&gt;</span>  <span class=\"ruby-value\">25</span> <span class=\"ruby-value\">93</span>\n       <span class=\"ruby-value\">-1</span> <span class=\"ruby-value\">66</span>\n</pre>\n"],["[]","PStore","PStore.html#method-i-5B-5D","(name)","<p>Retrieves a value from the PStore file data, by <em>name</em>.  The\nhierarchy of Ruby objects stored under that …\n"],["[]","Prime::TrialDivision","Prime/TrialDivision.html#method-i-5B-5D","(index)","<p>Returns the +index+th prime number.\n<p><code>index</code> is a 0-based index.\n"],["[]","Set","Set.html#method-c-5B-5D","(*ary)","<p>Creates a new set containing the given objects.\n"],["[]","Vector","Vector.html#method-c-5B-5D","(*array)","<p>Creates a Vector from a list of elements.\n\n<pre>Vector[7, 4, ...]</pre>\n"],["[]","Vector","Vector.html#method-i-5B-5D","(i)","<p>Returns element number <code>i</code> (starting at zero) of the vector.\n"],["[]=","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-5B-5D-3D","(*names)","<p>Just like the use method\n"],["[]=","Buildr::Layout","Buildr/Layout.html#method-i-5B-5D-3D","(*args)","<p>Specifies the path resolved from a list of symbols.\n"],["[]=","CSV::Row","CSV/Row.html#method-i-5B-5D-3D","(*args)","<p>Looks up the field by the semantics described in CSV::Row.field() and\nassigns the <code>value</code>.\n<p>Assigning past …\n"],["[]=","CSV::Table","CSV/Table.html#method-i-5B-5D-3D","(index_or_header, value)","<p>In the default mixed mode, this method assigns rows for index access and\ncolumns for header access.  …\n"],["[]=","PStore","PStore.html#method-i-5B-5D-3D","(name, value)","<p>Stores an individual Ruby object or a hierarchy of Ruby objects in the data\nstore file under the root …\n"],["^","Set","Set.html#method-i-5E","(enum)","<p>Returns a new set containing elements exclusive between the set and the\ngiven enumerable object.  (set …\n"],["_","Buildr::Project","Buildr/Project.html#method-i-_","(*names)",""],["_DEFAULT_MASTER","MultiTkIp","MultiTkIp.html#method-c-_DEFAULT_MASTER","()",""],["_DEFAULT_MASTER","MultiTkIp","MultiTkIp.html#method-c-_DEFAULT_MASTER","()",""],["_IP_TABLE","MultiTkIp","MultiTkIp.html#method-c-_IP_TABLE","()",""],["_IP_TABLE","MultiTkIp","MultiTkIp.html#method-c-_IP_TABLE","()",""],["_TK_TABLE_LIST","MultiTkIp","MultiTkIp.html#method-c-_TK_TABLE_LIST","()",""],["_TK_TABLE_LIST","MultiTkIp","MultiTkIp.html#method-c-_TK_TABLE_LIST","()",""],["__create_safe_slave_obj","MultiTkIp","MultiTkIp.html#method-i-__create_safe_slave_obj","(safe_opts, app_name, tk_opts)",""],["__create_safe_slave_obj","MultiTkIp","MultiTkIp.html#method-i-__create_safe_slave_obj","(safe_opts, app_name, tk_opts)",""],["__create_trusted_slave_obj","MultiTkIp","MultiTkIp.html#method-i-__create_trusted_slave_obj","(name, keys)",""],["__create_trusted_slave_obj","MultiTkIp","MultiTkIp.html#method-i-__create_trusted_slave_obj","(name, keys)",""],["__eval","MultiTkIp","MultiTkIp.html#method-i-__eval","(str)",""],["__eval","MultiTkIp","MultiTkIp.html#method-i-__eval","(str)",""],["__eval","RemoteTkIp","RemoteTkIp.html#method-i-__eval","(str)",""],["__getip","MultiTkIp","MultiTkIp.html#method-c-__getip","()",""],["__getip","MultiTkIp","MultiTkIp.html#method-c-__getip","()",""],["__getobj__","Delegator","Delegator.html#method-i-__getobj__","()","<p>This method must be overridden by subclasses and should return the object\nmethod calls are being delegated …\n"],["__getobj__","SimpleDelegator","SimpleDelegator.html#method-i-__getobj__","()","<p>Returns the current object method calls are being delegated to.\n"],["__init_ip_env__","MultiTkIp","MultiTkIp.html#method-c-__init_ip_env__","(table, script)",""],["__init_ip_env__","MultiTkIp","MultiTkIp.html#method-c-__init_ip_env__","(table, script)",""],["__initialize__","TclTkIp","TclTkIp.html#method-i-__initialize__","(*args)",""],["__invoke","MultiTkIp","MultiTkIp.html#method-i-__invoke","(*args)",""],["__invoke","MultiTkIp","MultiTkIp.html#method-i-__invoke","(*args)",""],["__invoke","RemoteTkIp","RemoteTkIp.html#method-i-__invoke","(*args)",""],["__method_missing_alias_for_MultiTkIp__","Object","Object.html#method-i-__method_missing_alias_for_MultiTkIp__","(id, *args)",""],["__new__","TclTkIp","TclTkIp.html#method-c-__new__","(*args)",""],["__pseudo_toplevel","MultiTkIp","MultiTkIp.html#method-i-__pseudo_toplevel","()","<p>instance method\n"],["__pseudo_toplevel","MultiTkIp","MultiTkIp.html#method-i-__pseudo_toplevel","()","<p>instance method\n"],["__pseudo_toplevel","MultiTkIp","MultiTkIp.html#method-c-__pseudo_toplevel","()",""],["__pseudo_toplevel","MultiTkIp","MultiTkIp.html#method-c-__pseudo_toplevel","()",""],["__pseudo_toplevel=","MultiTkIp","MultiTkIp.html#method-c-__pseudo_toplevel-3D","(m)",""],["__pseudo_toplevel=","MultiTkIp","MultiTkIp.html#method-i-__pseudo_toplevel-3D","(m)",""],["__pseudo_toplevel=","MultiTkIp","MultiTkIp.html#method-i-__pseudo_toplevel-3D","(m)",""],["__pseudo_toplevel=","MultiTkIp","MultiTkIp.html#method-c-__pseudo_toplevel-3D","(m)",""],["__pseudo_toplevel_evaluable=","MultiTkIp","MultiTkIp.html#method-c-__pseudo_toplevel_evaluable-3D","(mode)",""],["__pseudo_toplevel_evaluable=","MultiTkIp","MultiTkIp.html#method-c-__pseudo_toplevel_evaluable-3D","(mode)",""],["__pseudo_toplevel_evaluable=","MultiTkIp","MultiTkIp.html#method-i-__pseudo_toplevel_evaluable-3D","(mode)",""],["__pseudo_toplevel_evaluable=","MultiTkIp","MultiTkIp.html#method-i-__pseudo_toplevel_evaluable-3D","(mode)",""],["__pseudo_toplevel_evaluable?","MultiTkIp","MultiTkIp.html#method-c-__pseudo_toplevel_evaluable-3F","()",""],["__pseudo_toplevel_evaluable?","MultiTkIp","MultiTkIp.html#method-i-__pseudo_toplevel_evaluable-3F","()",""],["__pseudo_toplevel_evaluable?","MultiTkIp","MultiTkIp.html#method-c-__pseudo_toplevel_evaluable-3F","()",""],["__pseudo_toplevel_evaluable?","MultiTkIp","MultiTkIp.html#method-i-__pseudo_toplevel_evaluable-3F","()",""],["__setobj__","Delegator","Delegator.html#method-i-__setobj__","(obj)","<p>This method must be overridden by subclasses and change the object delegate\nto <em>obj</em>.\n"],["__setobj__","SimpleDelegator","SimpleDelegator.html#method-i-__setobj__","(obj)","<p>Changes the delegate object to <em>obj</em>.\n<p>It’s important to note that this does <strong>not</strong> cause\nSimpleDelegator’s …\n"],["_add_new_tables","MultiTkIp","MultiTkIp.html#method-i-_add_new_tables","()",""],["_add_new_tables","MultiTkIp","MultiTkIp.html#method-i-_add_new_tables","()",""],["_add_tk_procs","MultiTkIp","MultiTkIp.html#method-i-_add_tk_procs","(name, args, body)",""],["_add_tk_procs","MultiTkIp","MultiTkIp.html#method-i-_add_tk_procs","(name, args, body)",""],["_at","TkComm","TkComm.html#method-c-_at","(x,y=nil)",""],["_callback_entry?","TkComm","TkComm.html#method-c-_callback_entry-3F","(obj)",""],["_callback_entry_class?","TkComm","TkComm.html#method-c-_callback_entry_class-3F","(cls)",""],["_conv_listelement","MultiTkIp","MultiTkIp.html#method-i-_conv_listelement","(arg)",""],["_conv_listelement","MultiTkIp","MultiTkIp.html#method-c-_conv_listelement","(arg)",""],["_conv_listelement","MultiTkIp","MultiTkIp.html#method-i-_conv_listelement","(arg)",""],["_conv_listelement","MultiTkIp","MultiTkIp.html#method-c-_conv_listelement","(arg)",""],["_conv_listelement","RemoteTkIp","RemoteTkIp.html#method-i-_conv_listelement","(str)",""],["_conv_listelement","TclTkLib","TclTkLib.html#method-c-_conv_listelement","(arg)",""],["_create_console","MultiTkIp","MultiTkIp.html#method-c-_create_console","()",""],["_create_console","MultiTkIp","MultiTkIp.html#method-c-_create_console","()",""],["_create_console","RemoteTkIp","RemoteTkIp.html#method-i-_create_console","()",""],["_create_slave_object","MultiTkIp","MultiTkIp.html#method-i-_create_slave_object","(keys={})",""],["_create_slave_object","MultiTkIp","MultiTkIp.html#method-i-_create_slave_object","(keys={})",""],["_curr_cmd_id","TkComm","TkComm.html#method-c-_curr_cmd_id","()","<p>### –&gt; definition is moved to TkUtil module def _get_eval_string(str,\nenc_mode = nil)\n\n<pre>return nil if ...</pre>\n"],["_default_delete_hook","MultiTkIp","MultiTkIp.html#method-i-_default_delete_hook","(slave)",""],["_default_delete_hook","MultiTkIp","MultiTkIp.html#method-i-_default_delete_hook","(slave)",""],["_destroy_slaves_of_slaveIP","MultiTkIp","MultiTkIp.html#method-i-_destroy_slaves_of_slaveIP","(ip)",""],["_destroy_slaves_of_slaveIP","MultiTkIp","MultiTkIp.html#method-i-_destroy_slaves_of_slaveIP","(ip)",""],["_dump","Singleton","Singleton.html#method-i-_dump","(depth = -1)","<p>By default, do not retain any state when marshalling.\n"],["_eval","MultiTkIp","MultiTkIp.html#method-c-_eval","(str)",""],["_eval","MultiTkIp","MultiTkIp.html#method-i-_eval","(str)",""],["_eval","MultiTkIp","MultiTkIp.html#method-i-_eval","(str)",""],["_eval","MultiTkIp","MultiTkIp.html#method-c-_eval","(str)",""],["_eval","RemoteTkIp","RemoteTkIp.html#method-i-_eval","(str)",""],["_eval_with_enc","MultiTkIp","MultiTkIp.html#method-c-_eval_with_enc","(str)",""],["_eval_with_enc","MultiTkIp","MultiTkIp.html#method-c-_eval_with_enc","(str)",""],["_eval_with_enc","MultiTkIp","MultiTkIp.html#method-i-_eval_with_enc","(str)",""],["_eval_with_enc","MultiTkIp","MultiTkIp.html#method-i-_eval_with_enc","(str)",""],["_eval_with_enc","RemoteTkIp","RemoteTkIp.html#method-i-_eval_with_enc","(str)",""],["_eval_without_enc","MultiTkIp","MultiTkIp.html#method-c-_eval_without_enc","(str)",""],["_eval_without_enc","MultiTkIp","MultiTkIp.html#method-c-_eval_without_enc","(str)",""],["_eval_without_enc","MultiTkIp","MultiTkIp.html#method-i-_eval_without_enc","(str)",""],["_eval_without_enc","MultiTkIp","MultiTkIp.html#method-i-_eval_without_enc","(str)",""],["_eval_without_enc","RemoteTkIp","RemoteTkIp.html#method-i-_eval_without_enc","(str)",""],["_fromUTF8","MultiTkIp","MultiTkIp.html#method-i-_fromUTF8","(str, encoding=nil)",""],["_fromUTF8","MultiTkIp","MultiTkIp.html#method-c-_fromUTF8","(str, encoding=nil)",""],["_fromUTF8","MultiTkIp","MultiTkIp.html#method-i-_fromUTF8","(str, encoding=nil)",""],["_fromUTF8","MultiTkIp","MultiTkIp.html#method-c-_fromUTF8","(str, encoding=nil)",""],["_fromUTF8","RemoteTkIp","RemoteTkIp.html#method-i-_fromUTF8","(str, encoding=nil)",""],["_fromUTF8","TkComm","TkComm.html#method-c-_fromUTF8","(str, encoding = nil)",""],["_genobj_for_tkwidget","TkComm","TkComm.html#method-c-_genobj_for_tkwidget","(path)",""],["_get_global_var","MultiTkIp","MultiTkIp.html#method-i-_get_global_var","(var)",""],["_get_global_var","MultiTkIp","MultiTkIp.html#method-c-_get_global_var","(var)",""],["_get_global_var","MultiTkIp","MultiTkIp.html#method-c-_get_global_var","(var)",""],["_get_global_var","MultiTkIp","MultiTkIp.html#method-i-_get_global_var","(var)",""],["_get_global_var","RemoteTkIp","RemoteTkIp.html#method-i-_get_global_var","(var_name)",""],["_get_global_var2","MultiTkIp","MultiTkIp.html#method-i-_get_global_var2","(var, idx)",""],["_get_global_var2","MultiTkIp","MultiTkIp.html#method-c-_get_global_var2","(var, idx)",""],["_get_global_var2","MultiTkIp","MultiTkIp.html#method-i-_get_global_var2","(var, idx)",""],["_get_global_var2","MultiTkIp","MultiTkIp.html#method-c-_get_global_var2","(var, idx)",""],["_get_global_var2","RemoteTkIp","RemoteTkIp.html#method-i-_get_global_var2","(var_name, index_name)",""],["_get_variable","MultiTkIp","MultiTkIp.html#method-i-_get_variable","(var, flag)",""],["_get_variable","MultiTkIp","MultiTkIp.html#method-c-_get_variable","(var, flag)",""],["_get_variable","MultiTkIp","MultiTkIp.html#method-c-_get_variable","(var, flag)",""],["_get_variable","MultiTkIp","MultiTkIp.html#method-i-_get_variable","(var, flag)",""],["_get_variable","RemoteTkIp","RemoteTkIp.html#method-i-_get_variable","(var_name, flag)",""],["_get_variable2","MultiTkIp","MultiTkIp.html#method-i-_get_variable2","(var, idx, flag)",""],["_get_variable2","MultiTkIp","MultiTkIp.html#method-i-_get_variable2","(var, idx, flag)",""],["_get_variable2","MultiTkIp","MultiTkIp.html#method-c-_get_variable2","(var, idx, flag)",""],["_get_variable2","MultiTkIp","MultiTkIp.html#method-c-_get_variable2","(var, idx, flag)",""],["_get_variable2","RemoteTkIp","RemoteTkIp.html#method-i-_get_variable2","(var_name, index_name, flag)",""],["_init_ip_env","MultiTkIp","MultiTkIp.html#method-i-_init_ip_env","(script)",""],["_init_ip_env","MultiTkIp","MultiTkIp.html#method-i-_init_ip_env","(script)",""],["_init_ip_internal","MultiTkIp","MultiTkIp.html#method-i-_init_ip_internal","(init_ip_env, add_tk_procs)",""],["_init_ip_internal","MultiTkIp","MultiTkIp.html#method-i-_init_ip_internal","(init_ip_env, add_tk_procs)",""],["_invoke","MultiTkIp","MultiTkIp.html#method-i-_invoke","(*args)",""],["_invoke","MultiTkIp","MultiTkIp.html#method-c-_invoke","(*args)",""],["_invoke","MultiTkIp","MultiTkIp.html#method-i-_invoke","(*args)",""],["_invoke","MultiTkIp","MultiTkIp.html#method-c-_invoke","(*args)",""],["_invoke","RemoteTkIp","RemoteTkIp.html#method-i-_invoke","(*args)",""],["_invoke_with_enc","MultiTkIp","MultiTkIp.html#method-i-_invoke_with_enc","(*args)",""],["_invoke_with_enc","MultiTkIp","MultiTkIp.html#method-c-_invoke_with_enc","(*args)",""],["_invoke_with_enc","MultiTkIp","MultiTkIp.html#method-i-_invoke_with_enc","(*args)",""],["_invoke_with_enc","MultiTkIp","MultiTkIp.html#method-c-_invoke_with_enc","(*args)",""],["_invoke_with_enc","RemoteTkIp","RemoteTkIp.html#method-i-_invoke_with_enc","(*args)",""],["_invoke_without_enc","MultiTkIp","MultiTkIp.html#method-c-_invoke_without_enc","(*args)",""],["_invoke_without_enc","MultiTkIp","MultiTkIp.html#method-i-_invoke_without_enc","(*args)",""],["_invoke_without_enc","MultiTkIp","MultiTkIp.html#method-i-_invoke_without_enc","(*args)",""],["_invoke_without_enc","MultiTkIp","MultiTkIp.html#method-c-_invoke_without_enc","(*args)",""],["_invoke_without_enc","RemoteTkIp","RemoteTkIp.html#method-i-_invoke_without_enc","(*args)",""],["_ip_id_","MultiTkIp","MultiTkIp.html#method-c-_ip_id_","()",""],["_ip_id_","MultiTkIp","MultiTkIp.html#method-i-_ip_id_","()",""],["_ip_id_","MultiTkIp","MultiTkIp.html#method-c-_ip_id_","()",""],["_ip_id_","MultiTkIp","MultiTkIp.html#method-i-_ip_id_","()",""],["_ip_id_","RemoteTkIp","RemoteTkIp.html#method-i-_ip_id_","()",""],["_ip_id_","TclTkIp","TclTkIp.html#method-i-_ip_id_","()",""],["_is_master_of?","MultiTkIp","MultiTkIp.html#method-i-_is_master_of-3F","(tcltkip_obj)",""],["_is_master_of?","MultiTkIp","MultiTkIp.html#method-i-_is_master_of-3F","(tcltkip_obj)",""],["_is_master_of?","RemoteTkIp","RemoteTkIp.html#method-i-_is_master_of-3F","(tcltkip_obj)",""],["_load","Singleton","Singleton.html#method-c-_load","","<p>By default calls instance(). Override to retain singleton state.\n"],["_make_menu_embeddable","MultiTkIp","MultiTkIp.html#method-c-_make_menu_embeddable","(menu_path)",""],["_make_menu_embeddable","MultiTkIp","MultiTkIp.html#method-i-_make_menu_embeddable","(menu_path)",""],["_make_menu_embeddable","MultiTkIp","MultiTkIp.html#method-c-_make_menu_embeddable","(menu_path)",""],["_make_menu_embeddable","MultiTkIp","MultiTkIp.html#method-i-_make_menu_embeddable","(menu_path)",""],["_merge_tklist","MultiTkIp","MultiTkIp.html#method-c-_merge_tklist","(*args)",""],["_merge_tklist","MultiTkIp","MultiTkIp.html#method-i-_merge_tklist","(*args)",""],["_merge_tklist","MultiTkIp","MultiTkIp.html#method-i-_merge_tklist","(*args)",""],["_merge_tklist","MultiTkIp","MultiTkIp.html#method-c-_merge_tklist","(*args)",""],["_merge_tklist","RemoteTkIp","RemoteTkIp.html#method-i-_merge_tklist","(*args)",""],["_merge_tklist","TclTkLib","TclTkLib.html#method-c-_merge_tklist","(*args)",""],["_next_cmd_id","TkComm","TkComm.html#method-c-_next_cmd_id","()",""],["_proc_on_current_safelevel","MultiTkIp","MultiTkIp.html#method-c-_proc_on_current_safelevel","(cmd=nil, &blk)",""],["_proc_on_current_safelevel","MultiTkIp","MultiTkIp.html#method-i-_proc_on_current_safelevel","(cmd=nil, &blk)",""],["_proc_on_current_safelevel","MultiTkIp","MultiTkIp.html#method-i-_proc_on_current_safelevel","(cmd=nil, &blk)",""],["_proc_on_current_safelevel","MultiTkIp","MultiTkIp.html#method-c-_proc_on_current_safelevel","(cmd=nil, &blk)",""],["_proc_on_safelevel","MultiTkIp","MultiTkIp.html#method-i-_proc_on_safelevel","(cmd=nil, &blk)","<p>instance &amp; class method\n"],["_proc_on_safelevel","MultiTkIp","MultiTkIp.html#method-c-_proc_on_safelevel","(cmd=nil, &blk)",""],["_proc_on_safelevel","MultiTkIp","MultiTkIp.html#method-c-_proc_on_safelevel","(cmd=nil, &blk)",""],["_proc_on_safelevel","MultiTkIp","MultiTkIp.html#method-i-_proc_on_safelevel","(cmd=nil, &blk)","<p>instance &amp; class method\n"],["_receiver_mainloop","MultiTkIp","MultiTkIp.html#method-i-_receiver_mainloop","(check_root)",""],["_receiver_mainloop","MultiTkIp","MultiTkIp.html#method-i-_receiver_mainloop","(check_root)",""],["_remove_tk_procs","MultiTkIp","MultiTkIp.html#method-i-_remove_tk_procs","(*names)",""],["_remove_tk_procs","MultiTkIp","MultiTkIp.html#method-i-_remove_tk_procs","(*names)",""],["_return_value","MultiTkIp","MultiTkIp.html#method-c-_return_value","()",""],["_return_value","MultiTkIp","MultiTkIp.html#method-i-_return_value","()",""],["_return_value","MultiTkIp","MultiTkIp.html#method-c-_return_value","()",""],["_return_value","MultiTkIp","MultiTkIp.html#method-i-_return_value","()",""],["_return_value","RemoteTkIp","RemoteTkIp.html#method-i-_return_value","()",""],["_set_global_var","MultiTkIp","MultiTkIp.html#method-c-_set_global_var","(var, value)",""],["_set_global_var","MultiTkIp","MultiTkIp.html#method-i-_set_global_var","(var, value)",""],["_set_global_var","MultiTkIp","MultiTkIp.html#method-c-_set_global_var","(var, value)",""],["_set_global_var","MultiTkIp","MultiTkIp.html#method-i-_set_global_var","(var, value)",""],["_set_global_var","RemoteTkIp","RemoteTkIp.html#method-i-_set_global_var","(var_name, value)",""],["_set_global_var2","MultiTkIp","MultiTkIp.html#method-i-_set_global_var2","(var, idx, value)",""],["_set_global_var2","MultiTkIp","MultiTkIp.html#method-c-_set_global_var2","(var, idx, value)",""],["_set_global_var2","MultiTkIp","MultiTkIp.html#method-i-_set_global_var2","(var, idx, value)",""],["_set_global_var2","MultiTkIp","MultiTkIp.html#method-c-_set_global_var2","(var, idx, value)",""],["_set_global_var2","RemoteTkIp","RemoteTkIp.html#method-i-_set_global_var2","(var_name, index_name, value)",""],["_set_variable","MultiTkIp","MultiTkIp.html#method-c-_set_variable","(var, value, flag)",""],["_set_variable","MultiTkIp","MultiTkIp.html#method-i-_set_variable","(var, value, flag)",""],["_set_variable","MultiTkIp","MultiTkIp.html#method-i-_set_variable","(var, value, flag)",""],["_set_variable","MultiTkIp","MultiTkIp.html#method-c-_set_variable","(var, value, flag)",""],["_set_variable","RemoteTkIp","RemoteTkIp.html#method-i-_set_variable","(var_name, value, flag)",""],["_set_variable2","MultiTkIp","MultiTkIp.html#method-i-_set_variable2","(var, idx, value, flag)",""],["_set_variable2","MultiTkIp","MultiTkIp.html#method-c-_set_variable2","(var, idx, value, flag)",""],["_set_variable2","MultiTkIp","MultiTkIp.html#method-i-_set_variable2","(var, idx, value, flag)",""],["_set_variable2","MultiTkIp","MultiTkIp.html#method-c-_set_variable2","(var, idx, value, flag)",""],["_set_variable2","RemoteTkIp","RemoteTkIp.html#method-i-_set_variable2","(var_name, index_name, value, flag)",""],["_split_tklist","MultiTkIp","MultiTkIp.html#method-c-_split_tklist","(str)",""],["_split_tklist","MultiTkIp","MultiTkIp.html#method-c-_split_tklist","(str)",""],["_split_tklist","MultiTkIp","MultiTkIp.html#method-i-_split_tklist","(str)",""],["_split_tklist","MultiTkIp","MultiTkIp.html#method-i-_split_tklist","(str)",""],["_split_tklist","RemoteTkIp","RemoteTkIp.html#method-i-_split_tklist","(str)",""],["_thread_tkwait","MultiTkIp","MultiTkIp.html#method-i-_thread_tkwait","(mode, target)",""],["_thread_tkwait","MultiTkIp","MultiTkIp.html#method-i-_thread_tkwait","(mode, target)",""],["_thread_tkwait","MultiTkIp","MultiTkIp.html#method-c-_thread_tkwait","(mode, target)",""],["_thread_tkwait","MultiTkIp","MultiTkIp.html#method-c-_thread_tkwait","(mode, target)",""],["_thread_tkwait","RemoteTkIp","RemoteTkIp.html#method-i-_thread_tkwait","(mode, target)",""],["_thread_vwait","MultiTkIp","MultiTkIp.html#method-c-_thread_vwait","(var)",""],["_thread_vwait","MultiTkIp","MultiTkIp.html#method-i-_thread_vwait","(var)",""],["_thread_vwait","MultiTkIp","MultiTkIp.html#method-i-_thread_vwait","(var)",""],["_thread_vwait","MultiTkIp","MultiTkIp.html#method-c-_thread_vwait","(var)",""],["_thread_vwait","RemoteTkIp","RemoteTkIp.html#method-i-_thread_vwait","(var_name)",""],["_tk_cmd_tbl","MultiTkIp","MultiTkIp.html#method-i-_tk_cmd_tbl","()",""],["_tk_cmd_tbl","MultiTkIp","MultiTkIp.html#method-i-_tk_cmd_tbl","()",""],["_tk_table_list","MultiTkIp","MultiTkIp.html#method-i-_tk_table_list","()",""],["_tk_table_list","MultiTkIp","MultiTkIp.html#method-i-_tk_table_list","()",""],["_tk_windows","MultiTkIp","MultiTkIp.html#method-i-_tk_windows","()",""],["_tk_windows","MultiTkIp","MultiTkIp.html#method-i-_tk_windows","()",""],["_toUTF8","MultiTkIp","MultiTkIp.html#method-c-_toUTF8","(str, encoding=nil)",""],["_toUTF8","MultiTkIp","MultiTkIp.html#method-i-_toUTF8","(str, encoding=nil)",""],["_toUTF8","MultiTkIp","MultiTkIp.html#method-i-_toUTF8","(str, encoding=nil)",""],["_toUTF8","MultiTkIp","MultiTkIp.html#method-c-_toUTF8","(str, encoding=nil)",""],["_toUTF8","RemoteTkIp","RemoteTkIp.html#method-i-_toUTF8","(str, encoding=nil)",""],["_toUTF8","TkComm","TkComm.html#method-c-_toUTF8","(str, encoding = nil)",""],["_unset_global_var","MultiTkIp","MultiTkIp.html#method-i-_unset_global_var","(var)",""],["_unset_global_var","MultiTkIp","MultiTkIp.html#method-i-_unset_global_var","(var)",""],["_unset_global_var","MultiTkIp","MultiTkIp.html#method-c-_unset_global_var","(var)",""],["_unset_global_var","MultiTkIp","MultiTkIp.html#method-c-_unset_global_var","(var)",""],["_unset_global_var","RemoteTkIp","RemoteTkIp.html#method-i-_unset_global_var","(var_name)",""],["_unset_global_var2","MultiTkIp","MultiTkIp.html#method-c-_unset_global_var2","(var, idx)",""],["_unset_global_var2","MultiTkIp","MultiTkIp.html#method-i-_unset_global_var2","(var, idx)",""],["_unset_global_var2","MultiTkIp","MultiTkIp.html#method-c-_unset_global_var2","(var, idx)",""],["_unset_global_var2","MultiTkIp","MultiTkIp.html#method-i-_unset_global_var2","(var, idx)",""],["_unset_global_var2","RemoteTkIp","RemoteTkIp.html#method-i-_unset_global_var2","(var_name, index_name)",""],["_unset_variable","MultiTkIp","MultiTkIp.html#method-i-_unset_variable","(var, flag)",""],["_unset_variable","MultiTkIp","MultiTkIp.html#method-i-_unset_variable","(var, flag)",""],["_unset_variable","MultiTkIp","MultiTkIp.html#method-c-_unset_variable","(var, flag)",""],["_unset_variable","MultiTkIp","MultiTkIp.html#method-c-_unset_variable","(var, flag)",""],["_unset_variable","RemoteTkIp","RemoteTkIp.html#method-i-_unset_variable","(var_name, flag)",""],["_unset_variable2","MultiTkIp","MultiTkIp.html#method-i-_unset_variable2","(var, idx, flag)",""],["_unset_variable2","MultiTkIp","MultiTkIp.html#method-c-_unset_variable2","(var, idx, flag)",""],["_unset_variable2","MultiTkIp","MultiTkIp.html#method-i-_unset_variable2","(var, idx, flag)",""],["_unset_variable2","MultiTkIp","MultiTkIp.html#method-c-_unset_variable2","(var, idx, flag)",""],["_unset_variable2","RemoteTkIp","RemoteTkIp.html#method-i-_unset_variable2","(var_name, index_name, flag)",""],["abbrev","Abbrev","Abbrev.html#method-c-abbrev","(words, pattern = nil)","<p>Given a set of strings, calculate the set of unambiguous abbreviations for\nthose strings, and return …\n"],["abbrev","Array","Array.html#method-i-abbrev","(pattern = nil)","<p>Calculates the set of unambiguous abbreviations for the strings in\n<code>self</code>. If passed a pattern or a string, …\n"],["abort","MultiTkIp","MultiTkIp.html#method-i-abort","(msg = nil)",""],["abort","MultiTkIp","MultiTkIp.html#method-c-abort","(msg = nil)",""],["abort","MultiTkIp","MultiTkIp.html#method-i-abort","(msg = nil)",""],["abort","MultiTkIp","MultiTkIp.html#method-c-abort","(msg = nil)",""],["abort","OptionParser","OptionParser.html#method-i-abort","(mesg = $!)",""],["abort","PStore","PStore.html#method-i-abort","()","<p>Ends the current PStore#transaction, discarding any changes to the data\nstore.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;pstore&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["absolute?","Pathname","Pathname.html#method-i-absolute-3F","()","<p>Predicate method for testing whether a path is absolute. It returns\n<code>true</code> if the pathname begins with …\n"],["absolute?","Resolv::DNS::Name","Resolv/DNS/Name.html#method-i-absolute-3F","()","<p>True if this name is absolute.\n"],["accept","OptionParser","OptionParser.html#method-i-accept","(*args, &blk)","<p>Directs to accept specified class <code>t</code>. The argument string is\npassed to the block in which it should be …\n"],["accept","OptionParser","OptionParser.html#method-c-accept","(*args, &blk)","<p>See #accept.\n"],["accept","OptionParser::List","OptionParser/List.html#method-i-accept","(t, pat = /.*/m, &block)","<p>See OptionParser.accept.\n"],["accept_loop","Socket","Socket.html#method-c-accept_loop","(*sockets)","<p>yield socket and client address for each a connection accepted via given\nsockets.\n<p>The arguments are a …\n"],["accessor","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-accessor","(*names)","<p>Return an anonymous module\n\n<pre># first create a requirement\nartifact_ns.cool_aid! 'cool:aid:jar:&gt;=1.0'\n\n# ...</pre>\n"],["acos","CMath","CMath.html#method-c-acos","(z)","<p>returns the arc cosine of <code>z</code>\n"],["acos!","CMath","CMath.html#method-c-acos-21","(z)",""],["acosh","CMath","CMath.html#method-c-acosh","(z)","<p>returns the inverse hyperbolic cosine of <code>z</code>\n"],["acosh!","CMath","CMath.html#method-c-acosh-21","(z)",""],["activate","Gem","Gem.html#method-c-activate","(dep, *requirements)","<p>Activates an installed gem matching <code>dep</code>.  The gem must satisfy\n<code>requirements</code>.\n<p>Returns true if the gem is …\n"],["add","Benchmark::Tms","Benchmark/Tms.html#method-i-add","()","<p>Returns a new Tms object whose times are the sum of the times for this Tms\nobject, plus the time required …\n"],["add","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-add","(*files)",""],["add","Buildr::Compiler","Buildr/Compiler.html#method-c-add","(compiler)","<p>Adds a compiler to the list of supported compiler.\n<p>For example:\n\n<pre>Buildr::Compiler &lt;&lt; Buildr::Javac</pre>\n"],["add","Buildr::Filter","Buildr/Filter.html#method-i-add","(*files)",""],["add","Buildr::Packaging::Java::EarTask","Buildr/Packaging/Java/EarTask.html#method-i-add","(*args)","<p>Add an artifact to this EAR.\n"],["add","Buildr::TestFramework","Buildr/TestFramework.html#method-c-add","(framework)","<p>Adds a test framework to the list of supported frameworks.\n<p>For example:\n\n<pre>Buildr::TestFramework &lt;&lt; Buildr::JUnit</pre>\n"],["add","Buildr::Unzip","Buildr/Unzip.html#method-i-add","(*files)",""],["add","Logger","Logger.html#method-i-add","(severity, message = nil, progname = nil, &block)","<p>Synopsis\n\n<pre>Logger#add(severity, message = nil, progname = nil) { ... }</pre>\n<p>Args\n"],["add","PrettyPrint::Text","PrettyPrint/Text.html#method-i-add","(obj, width)",""],["add","Set","Set.html#method-i-add","(o)","<p>Adds the given object to the set and returns self.  Use <code>merge</code>\nto add many elements at once.\n"],["add!","Benchmark::Tms","Benchmark/Tms.html#method-i-add-21","(&blk)","<p>An in-place version of #add.\n"],["add?","Set","Set.html#method-i-add-3F","(o)","<p>Adds the given object to the set and returns self.  If the object is\nalready in the set, returns nil. …\n"],["add_artifact","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-add_artifact","(name, type, build_on_make = false)",""],["add_builtin_type","Syck","Syck.html#method-c-add_builtin_type","( type_tag, &transfer_proc )","<p>Add a transfer method for a builtin type\n"],["add_component","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-add_component","(name, attrs = {}, &xml)",""],["add_configuration","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-add_configuration","(name, type, factory_name, default = false)",""],["add_domain_type","Syck","Syck.html#method-c-add_domain_type","( domain, type_tag, &transfer_proc )","<p>Add a global handler for a YAML domain type.\n"],["add_ejb_facet","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-add_ejb_facet","(options = {})",""],["add_exploded_ear_artifact","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-add_exploded_ear_artifact","(project, options ={})",""],["add_exploded_ejb_artifact","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-add_exploded_ejb_artifact","(project, options = {})",""],["add_exploded_war_artifact","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-add_exploded_war_artifact","(project, options = {})",""],["add_facet","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-add_facet","(name, type)",""],["add_filter","Tracer","Tracer.html#method-c-add_filter","(p = proc)","<p>Used to filter unwanted trace output\n<p>Example which only outputs lines of code executed within the Kernel …\n"],["add_gwt_configuration","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-add_gwt_configuration","(launch_page, project, options = {})",""],["add_gwt_facet","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-add_gwt_facet","(modules = {}, options = {})",""],["add_jpa_facet","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-add_jpa_facet","(options = {})",""],["add_jruby_facet","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-add_jruby_facet","(options = {})",""],["add_listener","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-add_listener","(&callback)",""],["add_observer","Observable","Observable.html#method-i-add_observer","(observer, func=:update)","<p>Add <code>observer</code> as an observer on this object. so that it will\nreceive notifications.\n<p>observer &mdash; the object …\n"],["add_private_type","Syck","Syck.html#method-c-add_private_type","( type_re, &transfer_proc )","<p>Add a private document type\n"],["add_row","CSV","CSV.html#method-i-add_row","(row)",""],["add_ruby_type","Syck","Syck.html#method-c-add_ruby_type","( type_tag, &transfer_proc )","<p>Add a transfer method for a builtin type\n"],["add_tk_procs","MultiTkIp","MultiTkIp.html#method-c-add_tk_procs","(name, args=nil, body=nil)",""],["add_tk_procs","MultiTkIp","MultiTkIp.html#method-c-add_tk_procs","(name, args=nil, body=nil)",""],["add_to_composite_component","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-add_to_composite_component","(components)",""],["add_web_facet","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-add_web_facet","(options = {})",""],["after_define","Buildr::Extension::ClassMethods","Buildr/Extension/ClassMethods.html#method-i-after_define","(*args, &block)","<p>This block is called once for the project with the project instance, right\nafter running the project …\n"],["alias","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-alias","(new_name, old_name)","<p>Create an alias for a named requirement.\n"],["alias_command","Shell","Shell.html#method-c-alias_command","(ali, command, *opts, &block)",""],["alias_delete","MultiTkIp","MultiTkIp.html#method-i-alias_delete","(slave, cmd_name)",""],["alias_delete","MultiTkIp","MultiTkIp.html#method-i-alias_delete","(slave, cmd_name)",""],["alias_delete","MultiTkIp","MultiTkIp.html#method-c-alias_delete","(slave, cmd_name)",""],["alias_delete","MultiTkIp","MultiTkIp.html#method-c-alias_delete","(slave, cmd_name)",""],["alias_info","MultiTkIp","MultiTkIp.html#method-i-alias_info","(slave, cmd_name)",""],["alias_info","MultiTkIp","MultiTkIp.html#method-c-alias_info","(slave, cmd_name)",""],["alias_info","MultiTkIp","MultiTkIp.html#method-c-alias_info","(slave, cmd_name)",""],["alias_info","MultiTkIp","MultiTkIp.html#method-i-alias_info","(slave, cmd_name)",""],["alias_target","MultiTkIp","MultiTkIp.html#method-i-alias_target","(aliascmd, slave = '')",""],["alias_target","MultiTkIp","MultiTkIp.html#method-c-alias_target","(aliascmd, slave = '')",""],["alias_target","MultiTkIp","MultiTkIp.html#method-c-alias_target","(aliascmd, slave = '')",""],["alias_target","MultiTkIp","MultiTkIp.html#method-i-alias_target","(aliascmd, slave = '')",""],["aliases","MultiTkIp","MultiTkIp.html#method-i-aliases","(slave = '')",""],["aliases","MultiTkIp","MultiTkIp.html#method-c-aliases","(slave = '')",""],["aliases","MultiTkIp","MultiTkIp.html#method-i-aliases","(slave = '')",""],["aliases","MultiTkIp","MultiTkIp.html#method-c-aliases","(slave = '')",""],["alive?","MultiTkIp","MultiTkIp.html#method-i-alive-3F","()",""],["alive?","MultiTkIp","MultiTkIp.html#method-i-alive-3F","()",""],["alive?","MultiTkIp","MultiTkIp.html#method-c-alive-3F","()",""],["alive?","MultiTkIp","MultiTkIp.html#method-c-alive-3F","()",""],["all_load_paths","Gem","Gem.html#method-c-all_load_paths","()","<p>An Array of all possible load paths for all versions of all gems in the Gem\ninstallation.\n"],["all_waits","ThreadsWait","ThreadsWait.html#method-c-all_waits","(*threads)","<p>Waits until all specified threads have terminated.  If a block is provided,\nit is executed for each thread …\n"],["all_waits","ThreadsWait","ThreadsWait.html#method-c-all_waits","(*threads)","<p>Waits until all specified threads have terminated.  If a block is provided,\nit is executed for each thread …\n"],["all_waits","ThreadsWait","ThreadsWait.html#method-i-all_waits","()","<p>Waits until all of the specified threads are terminated.  If a block is\nsupplied for the method, it is …\n"],["all_waits","ThreadsWait","ThreadsWait.html#method-i-all_waits","()","<p>Waits until all of the specified threads are terminated.  If a block is\nsupplied for the method, it is …\n"],["allow_ruby_exit=","MultiTkIp","MultiTkIp.html#method-i-allow_ruby_exit-3D","(mode)",""],["allow_ruby_exit=","MultiTkIp","MultiTkIp.html#method-c-allow_ruby_exit-3D","(mode)",""],["allow_ruby_exit=","MultiTkIp","MultiTkIp.html#method-i-allow_ruby_exit-3D","(mode)",""],["allow_ruby_exit=","MultiTkIp","MultiTkIp.html#method-c-allow_ruby_exit-3D","(mode)",""],["allow_ruby_exit=","RemoteTkIp","RemoteTkIp.html#method-i-allow_ruby_exit-3D","(mode)",""],["allow_ruby_exit?","MultiTkIp","MultiTkIp.html#method-c-allow_ruby_exit-3F","()",""],["allow_ruby_exit?","MultiTkIp","MultiTkIp.html#method-c-allow_ruby_exit-3F","()",""],["allow_ruby_exit?","MultiTkIp","MultiTkIp.html#method-i-allow_ruby_exit-3F","()",""],["allow_ruby_exit?","MultiTkIp","MultiTkIp.html#method-i-allow_ruby_exit-3F","()",""],["allow_ruby_exit?","RemoteTkIp","RemoteTkIp.html#method-i-allow_ruby_exit-3F","()",""],["ant","Buildr::Ant","Buildr/Ant.html#method-i-ant","(name, &block)","<p>Creates a new AntProject with the specified name, yield to the block for\ndefining various Ant tasks, …\n"],["ant","Buildr::Emma","Buildr/Emma.html#method-c-ant","()",""],["append","OptionParser::List","OptionParser/List.html#method-i-append","(*args)","<p>Appends <code>switch</code> at the tail of the list, and associates short,\nlong and negated long options. Arguments …\n"],["append_features","Mutex_m","Mutex_m.html#method-c-append_features","(cl)",""],["append_features","Sync_m","Sync_m.html#method-c-append_features","(cl)",""],["append_features","Sync_m","Sync_m.html#method-c-append_features","(cl)",""],["application","Buildr","Buildr.html#method-c-application","()","<p>Returns the Buildr::Application object.\n"],["applies_to?","Buildr::GitRelease","Buildr/GitRelease.html#method-c-applies_to-3F","()",""],["applies_to?","Buildr::HgRelease","Buildr/HgRelease.html#method-c-applies_to-3F","()",""],["applies_to?","Buildr::SvnRelease","Buildr/SvnRelease.html#method-c-applies_to-3F","()",""],["applies_to?","Buildr::TestFramework::Base","Buildr/TestFramework/Base.html#method-c-applies_to-3F","(project)","<p>Returns true if this framework applies to the current project.  For\nexample, JUnit returns true if the …\n"],["apply_spec","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-apply_spec","(spec)","<p>Apply specification to this artifact.\n"],["apply_spec_no_validation","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-apply_spec_no_validation","(spec)",""],["appsend","RemoteTkIp","RemoteTkIp.html#method-i-appsend","(async, *args)",""],["apt","Buildr::Apt","Buildr/Apt.html#method-i-apt","(*sources)","<p>Returns a task that will use Java#apt to generate source files in\ntarget/generated/apt, from all the …\n"],["apt","Java","Java.html#method-c-apt","(*args)","<p><strong>Deprecated</strong>: Use Java::Commands.apt instead.\n"],["apt","Java::Commands","Java/Commands.html#method-c-apt","(*args)","<p>Runs Apt with the specified arguments.\n<p>The last argument may be a Hash with additional options:\n<p>:compile …\n"],["array2tk_list","TkComm","TkComm.html#method-c-array2tk_list","(ary, enc=nil)",""],["artifact","Buildr","Buildr.html#method-i-artifact","(spec, path = nil)","<p>Creates a file task to download and install the specified artifact in the\nlocal repository.\n<p>You can use …\n"],["artifact","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-artifact","()","<p>Return the Artifact object for the currently selected version\n"],["artifact","Buildr::Scala::Check","Buildr/Scala/Check.html#method-c-artifact","()",""],["artifact","Buildr::Scala::Specs","Buildr/Scala/Specs.html#method-c-artifact","()",""],["artifact","Buildr::Scala::Specs2","Buildr/Scala/Specs2.html#method-c-artifact","()",""],["artifact","Buildr::Shell::BeanShell","Buildr/Shell/BeanShell.html#method-c-artifact","()",""],["artifact_ns","Buildr","Buildr.html#method-i-artifact_ns","(name = nil, &block)","<p>Open an ArtifactNamespace. If a block is provided, the namespace is yielded\nto it.\n<p>See also ArtifactNamespace.instance …\n"],["artifacts","Buildr","Buildr.html#method-i-artifacts","(*specs, &block)","<p>Handles multiple artifacts at a time. This method is the plural equivalent\nof #artifact, but can do more …\n"],["artifacts","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-artifacts","(*names)","<p>return Artifact objects for each requirement\n"],["artifacts_component","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-artifacts_component","()",""],["ascend","Pathname","Pathname.html#method-i-ascend","()","<p>Iterates over and yields a new Pathname object for each element in the\ngiven path in ascending order. …\n"],["asin","CMath","CMath.html#method-c-asin","(z)","<p>returns the arc sine of <code>z</code>\n"],["asin!","CMath","CMath.html#method-c-asin-21","(z)",""],["asinh","CMath","CMath.html#method-c-asinh","(z)","<p>returns the inverse hyperbolic sine of <code>z</code>\n"],["asinh!","CMath","CMath.html#method-c-asinh-21","(z)",""],["assign_receiver_and_watchdog","MultiTkIp","MultiTkIp.html#method-c-assign_receiver_and_watchdog","(target)",""],["assign_receiver_and_watchdog","MultiTkIp","MultiTkIp.html#method-c-assign_receiver_and_watchdog","(target)",""],["associate","Buildr::Packaging::Java::EarTask","Buildr/Packaging/Java/EarTask.html#method-i-associate","(project)",""],["associate_with","Buildr::TestTask","Buildr/TestTask.html#method-i-associate_with","(project)",""],["atan","CMath","CMath.html#method-c-atan","(z)","<p>returns the arc tangent of <code>z</code>\n"],["atan!","CMath","CMath.html#method-c-atan-21","(z)",""],["atan2","CMath","CMath.html#method-c-atan2","(y,x)","<p>returns the arc tangent of <code>y</code> divided by <code>x</code> using\nthe signs of <code>y</code> and <code>x</code> to determine the quadrant\n"],["atan2!","CMath","CMath.html#method-c-atan2-21","(y,x)",""],["atanh","CMath","CMath.html#method-c-atanh","(z)","<p>returns the inverse hyperbolic tangent of <code>z</code>\n"],["atanh!","CMath","CMath.html#method-c-atanh-21","(z)",""],["available?","Gem","Gem.html#method-c-available-3F","(dep, *requirements)","<p>See if a given gem is available.\n"],["background_call","MultiTkIp","MultiTkIp.html#method-i-background_call","(*args)",""],["background_call","MultiTkIp","MultiTkIp.html#method-c-background_call","(*args, &blk)",""],["background_call","MultiTkIp","MultiTkIp.html#method-c-background_call","(*args, &blk)",""],["background_call","MultiTkIp","MultiTkIp.html#method-i-background_call","(*args)",""],["background_eval","MultiTkIp","MultiTkIp.html#method-i-background_eval","(*args, &blk)",""],["background_eval","MultiTkIp","MultiTkIp.html#method-c-background_eval","(*args, &blk)",""],["background_eval","MultiTkIp","MultiTkIp.html#method-c-background_eval","(*args, &blk)",""],["background_eval","MultiTkIp","MultiTkIp.html#method-i-background_eval","(*args, &blk)",""],["background_eval_proc","MultiTkIp","MultiTkIp.html#method-i-background_eval_proc","(*args)",""],["background_eval_proc","MultiTkIp","MultiTkIp.html#method-i-background_eval_proc","(*args)",""],["background_eval_proc","MultiTkIp","MultiTkIp.html#method-c-background_eval_proc","(*args, &blk)",""],["background_eval_proc","MultiTkIp","MultiTkIp.html#method-c-background_eval_proc","(*args, &blk)",""],["background_eval_str","MultiTkIp","MultiTkIp.html#method-c-background_eval_str","(cmd, *eval_args)",""],["background_eval_str","MultiTkIp","MultiTkIp.html#method-c-background_eval_str","(cmd, *eval_args)",""],["background_eval_str","MultiTkIp","MultiTkIp.html#method-i-background_eval_str","(cmd, *eval_args)",""],["background_eval_str","MultiTkIp","MultiTkIp.html#method-i-background_eval_str","(cmd, *eval_args)",""],["background_eval_string","MultiTkIp","MultiTkIp.html#method-i-background_eval_string","(cmd, *eval_args)",""],["background_eval_string","MultiTkIp","MultiTkIp.html#method-i-background_eval_string","(cmd, *eval_args)",""],["background_eval_string","MultiTkIp","MultiTkIp.html#method-c-background_eval_string","(cmd, *eval_args)",""],["background_eval_string","MultiTkIp","MultiTkIp.html#method-c-background_eval_string","(cmd, *eval_args)",""],["banner","OptionParser","OptionParser.html#method-i-banner","()","<p>Heading banner preceding summary.\n"],["base","OptionParser","OptionParser.html#method-i-base","()","<p>Subject of #on_tail.\n"],["base64","SecureRandom","SecureRandom.html#method-c-base64","(n=nil)","<p>SecureRandom.base64 generates a random base64 string.\n<p>The argument <em>n</em> specifies the length of the random …\n"],["base64digest","Digest::Class","Digest/Class.html#method-c-base64digest","(str, *args)","<p>Returns the base64 encoded hash value of a given <em>string</em>.  The\nreturn value is properly padded with ‘=’ …\n"],["base64digest","Digest::Instance","Digest/Instance.html#method-i-base64digest","(str = nil)","<p>If none is given, returns the resulting hash value of the digest in a\nbase64 encoded form, keeping the …\n"],["base64digest!","Digest::Instance","Digest/Instance.html#method-i-base64digest-21","()","<p>Returns the resulting hash value and resets the digest to the initial\nstate.\n"],["base_dir","Buildr::Project","Buildr/Project.html#method-i-base_dir","()","<p>Returns the project’s base directory.\n<p>The Buildfile defines top-level project, so it’s logical that the …\n"],["base_dir=","Buildr::Project","Buildr/Project.html#method-i-base_dir-3D","(dir)","<p>Sets the project’s base directory. Allows you to specify a base directory\nby calling this accessor, or …\n"],["base_directory","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-base_directory","()",""],["base_document","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-base_document","()",""],["base_document","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-base_document","()",""],["before_define","Buildr::Extension::ClassMethods","Buildr/Extension/ClassMethods.html#method-i-before_define","(*args, &block)","<p>This block is called once for the project with the project instance, right\nbefore running the project …\n"],["benchmark","Benchmark","Benchmark.html#method-c-benchmark","(caption = \"\", label_width = nil, format = nil, *labels)","<p>Invokes the block with a <code>Benchmark::Report</code> object, which may\nbe used to collect and report on the results …\n"],["best_version","Buildr::ArtifactSearch","Buildr/ArtifactSearch.html#method-i-best_version","(spec, *methods)","<p>TODO: return the url for best matching repo\n"],["bg_call","MultiTkIp","MultiTkIp.html#method-c-bg_call","(*args, &blk)",""],["bg_call","MultiTkIp","MultiTkIp.html#method-i-bg_call","(*args)",""],["bg_call","MultiTkIp","MultiTkIp.html#method-i-bg_call","(*args)",""],["bg_call","MultiTkIp","MultiTkIp.html#method-c-bg_call","(*args, &blk)",""],["bg_eval","MultiTkIp","MultiTkIp.html#method-i-bg_eval","(*args, &blk)",""],["bg_eval","MultiTkIp","MultiTkIp.html#method-c-bg_eval","(*args, &blk)",""],["bg_eval","MultiTkIp","MultiTkIp.html#method-i-bg_eval","(*args, &blk)",""],["bg_eval","MultiTkIp","MultiTkIp.html#method-c-bg_eval","(*args, &blk)",""],["bg_eval_proc","MultiTkIp","MultiTkIp.html#method-i-bg_eval_proc","(*args)",""],["bg_eval_proc","MultiTkIp","MultiTkIp.html#method-i-bg_eval_proc","(*args)",""],["bg_eval_proc","MultiTkIp","MultiTkIp.html#method-c-bg_eval_proc","(*args, &blk)",""],["bg_eval_proc","MultiTkIp","MultiTkIp.html#method-c-bg_eval_proc","(*args, &blk)",""],["bg_eval_str","MultiTkIp","MultiTkIp.html#method-c-bg_eval_str","(cmd, *eval_args)",""],["bg_eval_str","MultiTkIp","MultiTkIp.html#method-c-bg_eval_str","(cmd, *eval_args)",""],["bg_eval_str","MultiTkIp","MultiTkIp.html#method-i-bg_eval_str","(cmd, *eval_args)",""],["bg_eval_str","MultiTkIp","MultiTkIp.html#method-i-bg_eval_str","(cmd, *eval_args)",""],["bg_eval_string","MultiTkIp","MultiTkIp.html#method-i-bg_eval_string","(cmd, *eval_args)",""],["bg_eval_string","MultiTkIp","MultiTkIp.html#method-c-bg_eval_string","(cmd, *eval_args)",""],["bg_eval_string","MultiTkIp","MultiTkIp.html#method-c-bg_eval_string","(cmd, *eval_args)",""],["bg_eval_string","MultiTkIp","MultiTkIp.html#method-i-bg_eval_string","(cmd, *eval_args)",""],["bgerror","MultiTkIp","MultiTkIp.html#method-c-bgerror","(cmd = Proc.new, slave = nil, &b)",""],["bgerror","MultiTkIp","MultiTkIp.html#method-c-bgerror","(cmd = Proc.new, slave = nil, &b)",""],["bin_path","Gem","Gem.html#method-c-bin_path","(name, exec_name = nil, *requirements)","<p>Find the full path to the executable for gem <code>name</code>.  If the\n<code>exec_name</code> is not given, the gem’s default_executable …\n"],["binary_mode","Gem","Gem.html#method-c-binary_mode","()","<p>The mode needed to read a file as straight binary.\n"],["bind","Addrinfo","Addrinfo.html#method-i-bind","()","<p>creates a socket bound to self.\n<p>If a block is given, it is called with the socket and the value of the …\n"],["bind","Exception2MessageMapper","Exception2MessageMapper.html#method-i-bind","(cl)",""],["bind","Exception2MessageMapper","Exception2MessageMapper.html#method-i-bind","(cl)",""],["bind","TkComm","TkComm.html#method-i-bind","(tagOrClass, context, *args)","<p>def bind(tagOrClass, context, cmd=Proc.new, *args)\n\n<pre>_bind([&quot;bind&quot;, tagOrClass], context, cmd, *args)\ntagOrClass</pre>\n"],["bind","UDPSocket","UDPSocket.html#method-i-bind","(host, port)",""],["bind_all","TkComm","TkComm.html#method-i-bind_all","(context, *args)","<p>def bind_all(context, cmd=Proc.new, *args)\n\n<pre>_bind(['bind', 'all'], context, cmd, *args)\nTkBindTag::ALL</pre>\n"],["bind_append","TkComm","TkComm.html#method-i-bind_append","(tagOrClass, context, *args)","<p>def bind_append(tagOrClass, context, cmd=Proc.new, *args)\n\n<pre>_bind_append([&quot;bind&quot;, tagOrClass], context, ...</pre>\n"],["bind_append_all","TkComm","TkComm.html#method-i-bind_append_all","(context, *args)","<p>def bind_append_all(context, cmd=Proc.new, *args)\n\n<pre>_bind_append(['bind', 'all'], context, cmd, *args)\nTkBindTag::ALL</pre>\n"],["bind_remove","TkComm","TkComm.html#method-i-bind_remove","(tagOrClass, context)",""],["bind_remove_all","TkComm","TkComm.html#method-i-bind_remove_all","(context)",""],["bindinfo","TkComm","TkComm.html#method-i-bindinfo","(tagOrClass, context=nil)",""],["bindinfo_all","TkComm","TkComm.html#method-i-bindinfo_all","(context=nil)",""],["bindir","Gem","Gem.html#method-c-bindir","(install_dir=Gem.dir)","<p>The path where gem executables are to be installed.\n"],["block_scanf","String","String.html#method-i-block_scanf","(fstr)","<p>Scans the current string until the match is exhausted yielding each match\nas it is encountered in the …\n"],["bm","Benchmark","Benchmark.html#method-c-bm","(label_width = 0, *labels)","<p>A simple interface to the #benchmark method, #bm is generates sequential\nreports with labels.  The parameters …\n"],["bmbm","Benchmark","Benchmark.html#method-c-bmbm","(width = 0)","<p>Sometimes benchmark results are skewed because code executed earlier\nencounters different garbage collection …\n"],["break","PrettyPrint::Group","PrettyPrint/Group.html#method-i-break","()",""],["break?","PrettyPrint::Group","PrettyPrint/Group.html#method-i-break-3F","()",""],["break_outmost_groups","PrettyPrint","PrettyPrint.html#method-i-break_outmost_groups","()","<p>Breaks the buffer into lines that are shorter than #maxwidth\n"],["break_points","DEBUGGER__","DEBUGGER__.html#method-c-break_points","()",""],["break_points","DEBUGGER__","DEBUGGER__.html#method-i-break_points","()",""],["breakable","PrettyPrint","PrettyPrint.html#method-i-breakable","(sep=' ', width=sep.length)","<p>This says “you can break a line here if necessary”, and a\n<code>width</code>-column text <code>sep</code> is inserted …\n"],["breakable","PrettyPrint::SingleLine","PrettyPrint/SingleLine.html#method-i-breakable","(sep=' ', width=nil)",""],["broadcast","ConditionVariable","ConditionVariable.html#method-i-broadcast","()","<p>Wakes up all threads waiting for this lock.\n"],["broadcast","MonitorMixin::ConditionVariable","MonitorMixin/ConditionVariable.html#method-i-broadcast","()","<p>Wakes up all threads waiting for this lock.\n"],["build","Buildr::Build","Buildr/Build.html#method-i-build","(*prereqs, &block)","<p>Returns the project’s build task. With arguments or block, also enhances\nthat task.\n"],["build","Buildr::Settings","Buildr/Settings.html#method-i-build","()","<p>Build settings loaded from build.yaml file in build directory.\n"],["build","Matrix","Matrix.html#method-c-build","(row_size, column_size = row_size)","<p>Creates a matrix of size <code>row_size</code> x <code>column_size</code>.\nIt fills the values by calling the given block, passing …\n"],["build?","Buildr::Run::Base","Buildr/Run/Base.html#method-i-build-3F","()",""],["build?","Buildr::Shell::Clojure","Buildr/Shell/Clojure.html#method-i-build-3F","()","<p>don’t build if it’s <strong>only</strong> Clojure sources\n"],["builders","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-builders","(*values)","<p>A builder is an Eclipse background job that parses the source code to\nproduce built artifacts.\n"],["builders=","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-builders-3D","(var)",""],["buildr_project=","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-buildr_project-3D","(buildr_project)",""],["by_col","CSV::Table","CSV/Table.html#method-i-by_col","()","<p>Returns a duplicate table object, in column mode.  This is handy for\nchaining in a single call without …\n"],["by_col!","CSV::Table","CSV/Table.html#method-i-by_col-21","()","<p>Switches the mode of this table to column mode.  All calls to indexing and\niteration methods will work …\n"],["by_col_or_row","CSV::Table","CSV/Table.html#method-i-by_col_or_row","()","<p>Returns a duplicate table object, in mixed mode.  This is handy for\nchaining in a single call without …\n"],["by_col_or_row!","CSV::Table","CSV/Table.html#method-i-by_col_or_row-21","()","<p>Switches the mode of this table to mixed mode.  All calls to indexing and\niteration methods will use …\n"],["by_row","CSV::Table","CSV/Table.html#method-i-by_row","()","<p>Returns a duplicate table object, in row mode.  This is handy for chaining\nin a single call without changing …\n"],["by_row!","CSV::Table","CSV/Table.html#method-i-by_row-21","()","<p>Switches the mode of this table to row mode.  All calls to indexing and\niteration methods will work with …\n"],["cache","Prime::TrialDivision","Prime/TrialDivision.html#method-i-cache","()","<p>Returns the cached prime numbers.\n"],["cache_dir","Gem","Gem.html#method-c-cache_dir","(custom_dir=false)","<p>Get the appropriate cache path.\n<p>Pass a string to use a different base path, or nil/false (default) for …\n"],["cache_gem","Gem","Gem.html#method-c-cache_gem","(filename, user_dir=false)","<p>Given a gem path, find the gem in cache.\n<p>Pass a string as the second argument to use a different base …\n"],["call","Logger::Formatter","Logger/Formatter.html#method-i-call","(severity, time, progname, msg)",""],["call","MultiTkIp","MultiTkIp.html#method-i-call","(*args)","<p>def eval_proc(*args)\n\n<pre># The scope of the eval-block of 'eval_proc' method is different from\n# the external. ...</pre>\n"],["call","MultiTkIp","MultiTkIp.html#method-i-call","(*args)","<p>def eval_proc(*args)\n\n<pre># The scope of the eval-block of 'eval_proc' method is different from\n# the external. ...</pre>\n"],["call","MultiTkIp","MultiTkIp.html#method-c-call","(*args, &blk)",""],["call","MultiTkIp","MultiTkIp.html#method-c-call","(*args, &blk)",""],["call","TkCore","TkCore.html#method-i-call","(*args)",""],["callback","TkCore","TkCore.html#method-c-callback","(*arg)",""],["callback_break","TkCore","TkCore.html#method-i-callback_break","()",""],["callback_continue","TkCore","TkCore.html#method-i-callback_continue","()",""],["callback_return","TkCore","TkCore.html#method-i-callback_return","()",""],["candidate","OptionParser","OptionParser.html#method-i-candidate","(word)",""],["candidate","OptionParser::Completion","OptionParser/Completion.html#method-i-candidate","(key, icase = false, pat = nil)",""],["candidate","OptionParser::Completion","OptionParser/Completion.html#method-c-candidate","(key, icase = false, pat = nil, &block)",""],["capture2","Open3","Open3.html#method-c-capture2","(*cmd, &block)","<p>Open3.capture2 captures the standard output of a command.\n\n<pre>stdout_str, status = Open3.capture2([env,] cmd... ...</pre>\n"],["capture2e","Open3","Open3.html#method-c-capture2e","(*cmd, &block)","<p>Open3.capture2e captures the standard output and the standard error of a\ncommand.\n\n<pre>stdout_and_stderr_str, ...</pre>\n"],["capture3","Open3","Open3.html#method-c-capture3","(*cmd, &block)","<p>Open3.capture3 captures the standard output and the standard error of a\ncommand.\n\n<pre>stdout_str, stderr_str, ...</pre>\n"],["cb_entry_class","MultiTkIp","MultiTkIp.html#method-c-cb_entry_class","()",""],["cb_entry_class","MultiTkIp","MultiTkIp.html#method-c-cb_entry_class","()",""],["cb_error","MultiTkIp","MultiTkIp.html#method-i-cb_error","(e)",""],["cb_error","MultiTkIp","MultiTkIp.html#method-i-cb_error","(e)",""],["cb_eval","MultiTkIp","MultiTkIp.html#method-i-cb_eval","(cmd, *args)","<p>def cb_eval(cmd, *args)\n\n<pre>#self.eval_callback{ TkComm._get_eval_string(TkUtil.eval_cmd(cmd, *args)) }\n#ret ...</pre>\n"],["cb_eval","MultiTkIp","MultiTkIp.html#method-c-cb_eval","(cmd, *args)",""],["cb_eval","MultiTkIp","MultiTkIp.html#method-c-cb_eval","(cmd, *args)",""],["cb_eval","MultiTkIp","MultiTkIp.html#method-i-cb_eval","(cmd, *args)","<p>def cb_eval(cmd, *args)\n\n<pre>#self.eval_callback{ TkComm._get_eval_string(TkUtil.eval_cmd(cmd, *args)) }\n#ret ...</pre>\n"],["cbrt","CMath","CMath.html#method-c-cbrt","(z)","<p>returns the principal value of the cube root of <code>z</code>\n"],["cbrt!","CMath","CMath.html#method-c-cbrt-21","(z)",""],["cc","Buildr::CC","Buildr/CC.html#method-i-cc","()",""],["cd","FileUtils","FileUtils.html#method-c-cd","(dir, options = {})","<p>Options: verbose\n<p>Changes the current directory to the directory <code>dir</code>.\n<p>If this method is called with block, …\n"],["cd","Shell","Shell.html#method-c-cd","(path)",""],["cd","Shell","Shell.html#method-i-cd","(path = nil, verbose = @verbose)",""],["changed","Observable","Observable.html#method-i-changed","(state=true)","<p>Set the changed state of this object.  Notifications will be sent only if\nthe changed <code>state</code> is <code>true</code>. …\n"],["changed?","Observable","Observable.html#method-i-changed-3F","()","<p>Returns true if this object’s state has been changed since the last\n#notify_observers call.\n"],["changed?","ProgressBar","ProgressBar.html#method-i-changed-3F","()",""],["charset","OpenURI::Meta","OpenURI/Meta.html#method-i-charset","()","<p>returns a charset parameter in Content-Type field. It is downcased for\ncanonicalization.\n<p>If charset parameter …\n"],["chdir","FileUtils","FileUtils.html#method-c-chdir","(dir, options = {})",""],["chdir","Shell","Shell.html#method-i-chdir","(path = nil, verbose = @verbose)","<p>If called as iterator, it restores the current directory when the block\nends.\n"],["check","Buildr::Checks","Buildr/Checks.html#method-i-check","(*args, &block)","<p>Adds an expectation. The expectation is run against the project by the\ncheck task, executed after packaging. …\n"],["check","Buildr::GitRelease","Buildr/GitRelease.html#method-i-check","()","<p>Fails if one of these 2 conditions are not met:\n\n<pre>1. the repository is clean: no content staged or unstaged ...</pre>\n"],["check","Buildr::HgRelease","Buildr/HgRelease.html#method-i-check","()","<p>Fails if one of these 2 conditions are not met:\n\n<pre>1. The reository is not 'clean'; no content staged or ...</pre>\n"],["check","Buildr::SvnRelease","Buildr/SvnRelease.html#method-i-check","()",""],["check_break_points","DEBUGGER__","DEBUGGER__.html#method-i-check_break_points","(file, klass, pos, binding, id)",""],["check_inspect_key","PP::PPMethods","PP/PPMethods.html#method-i-check_inspect_key","(id)",""],["check_signedness","Object","Object.html#method-i-check_signedness","(type, headers = nil, opts = nil, &b)","<p>Returns the signedness of the given <code>type</code>.  You may optionally\nspecify additional <code>headers</code> to search in …\n"],["check_sizeof","Object","Object.html#method-i-check_sizeof","(type, headers = nil, opts = \"\", &b)","<p>Returns the size of the given <code>type</code>.  You may optionally\nspecify additional <code>headers</code> to search in for the …\n"],["check_suspend","DEBUGGER__::Context","DEBUGGER__/Context.html#method-i-check_suspend","()",""],["children","Pathname","Pathname.html#method-i-children","(with_directory=true)","<p>Returns the children of the directory (files and subdirectories, not\nrecursive) as an array of Pathname …\n"],["chmod","FileUtils","FileUtils.html#method-c-chmod","(mode, list, options = {})","<p>Options: noop verbose\n<p>Changes permission bits on the named files (in <code>list</code>) to the\nbit pattern represented …\n"],["chmod","Object","Object.html#method-i-chmod","()","<p>Change the mode of each FILE to OCTAL-MODE.\n\n<pre>ruby -run -e chmod -- [OPTION] OCTAL-MODE FILE\n\n-v        ...</pre>\n"],["chmod_R","FileUtils","FileUtils.html#method-c-chmod_R","(mode, list, options = {})","<p>Options: noop verbose force\n<p>Changes permission bits on the named files (in <code>list</code>) to the\nbit pattern represented …\n"],["chown","FileUtils","FileUtils.html#method-c-chown","(user, group, list, options = {})","<p>Options: noop verbose\n<p>Changes owner and group on the named files (in <code>list</code>) to the\nuser <code>user</code> and the group …\n"],["chown_R","FileUtils","FileUtils.html#method-c-chown_R","(user, group, list, options = {})","<p>Options: noop verbose force\n<p>Changes owner and group on the named files (in <code>list</code>) to the\nuser <code>user</code> and …\n"],["classes","Buildr::TestTask","Buildr/TestTask.html#method-i-classes","()","<p><strong>Deprecated</strong>: Use tests instead.\n"],["classifier","Buildr::Scala::Check","Buildr/Scala/Check.html#method-c-classifier","()",""],["classify","Set","Set.html#method-i-classify","()","<p>Classifies the set by the return value of the given block and returns a\nhash of {value =&gt; set of elements} …\n"],["classpath","Buildr::CompileTask","Buildr/CompileTask.html#method-i-classpath","()","<p><strong>Deprecated</strong>: Use dependencies instead.\n"],["classpath","Buildr::TestTask","Buildr/TestTask.html#method-i-classpath","()","<p><strong>Deprecated</strong>: Use dependencies instead.\n"],["classpath","Java","Java.html#method-c-classpath","()","<p>Returns the classpath, an array listing directories, JAR files and\nartifacts.  Use when loading the extension …\n"],["classpath","Java::JavaWrapper","Java/JavaWrapper.html#method-i-classpath","()","<p><strong>Deprecated:</strong> Append to Java.classpath directly.\n"],["classpath=","Buildr::CompileTask","Buildr/CompileTask.html#method-i-classpath-3D","(artifacts)","<p><strong>Deprecated</strong>: Use dependencies= instead.\n"],["classpath=","Buildr::TestTask","Buildr/TestTask.html#method-i-classpath-3D","(artifacts)","<p><strong>Deprecated</strong>: Use dependencies= instead.\n"],["classpath=","Java::JavaWrapper","Java/JavaWrapper.html#method-i-classpath-3D","(paths)",""],["classpath_containers","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-classpath_containers","(*values)","<p>A classpath container is an Eclipse pre-determined ensemble of dependencies\nmade available to the project …\n"],["classpath_containers=","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-classpath_containers-3D","(var)",""],["classpath_from","Java::Commands","Java/Commands.html#method-c-classpath_from","(options)","<p>Extracts the classpath from the options, expands it by calling artifacts,\ninvokes each of the artifacts …\n"],["classpath_variables","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-classpath_variables","(*values)",""],["clean","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-clean","()","<p>Removes all previously added content from this archive. Use this method if\nyou want to remove default …\n"],["clean","Buildr::Build","Buildr/Build.html#method-i-clean","(*prereqs, &block)","<p>Returns the project’s clean task. With arguments or block, also enhances\nthat task.\n"],["cleanpath","Pathname","Pathname.html#method-i-cleanpath","(consider_symlink=false)","<p>Returns clean pathname of <code>self</code> with consecutive slashes and\nuseless dots removed.  The filesystem is …\n"],["clear","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-clear","()",""],["clear","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-c-clear","()","<p>Forget all namespaces, create a new ROOT\n"],["clear","Buildr::Filter","Buildr/Filter.html#method-i-clear","()","<p>Clear filter sources and include/exclude patterns\n"],["clear","Buildr::Project","Buildr/Project.html#method-c-clear","()","<p>Discard all project definitions.\n"],["clear","Buildr::TestTask","Buildr/TestTask.html#method-i-clear","()","<p>Clear all test includes and excludes and returns self\n"],["clear","Buildr::TestTask","Buildr/TestTask.html#method-c-clear","()","<p>Used by the test/integration rule to clear all previously included/excluded\ntests.\n"],["clear","ProgressBar","ProgressBar.html#method-i-clear","()",""],["clear","Queue","Queue.html#method-i-clear","()","<p>Removes all objects from the queue.\n"],["clear","Set","Set.html#method-i-clear","()","<p>Removes all elements and returns self.\n"],["clear_paths","Gem","Gem.html#method-c-clear_paths","()","<p>Reset the <code>dir</code> and <code>path</code> values.  The next time\n<code>dir</code> or <code>path</code> is requested, the values will be\ncalculated …\n"],["clear_suspend","DEBUGGER__::Context","DEBUGGER__/Context.html#method-i-clear_suspend","()",""],["clone","Matrix","Matrix.html#method-i-clone","()","<p>Returns a clone of the matrix, so that the contents of each do not\nreference identical objects. There …\n"],["clone","Singleton","Singleton.html#method-i-clone","()","<p>Raises a TypeError to prevent cloning.\n"],["clone","Vector","Vector.html#method-i-clone","()","<p>Return a copy of the vector.\n"],["close","Buildr::TestFramework::TestResult::YamlFormatter","Buildr/TestFramework/TestResult/YamlFormatter.html#method-i-close","()",""],["close","Logger","Logger.html#method-i-close","()","<p>Close the logging device.\n"],["close","Logger::LogDevice","Logger/LogDevice.html#method-i-close","()",""],["close","MultiTkIp::Command_Queue","MultiTkIp/Command_Queue.html#method-i-close","()",""],["close","Resolv::DNS","Resolv/DNS.html#method-i-close","()","<p>Closes the DNS resolver.\n"],["close","Tempfile","Tempfile.html#method-i-close","(unlink_now=false)","<p>Closes the file. If <code>unlink_now</code> is true, then the file will be\nunlinked (deleted) after closing. Of course, …\n"],["close!","Tempfile","Tempfile.html#method-i-close-21","()","<p>Closes and unlinks (deletes) the file. Has the same effect as called\n<code>close(true)</code>.\n"],["cmp","FileUtils","FileUtils.html#method-c-cmp","(a, b)",""],["coerce","Matrix","Matrix.html#method-i-coerce","(other)","<p>The coerce method provides support for Ruby type coercion. This coercion\nmechanism is used by Ruby to …\n"],["coerce","Vector","Vector.html#method-i-coerce","(other)","<p>The coerce method provides support for Ruby type coercion. This coercion\nmechanism is used by Ruby to …\n"],["collect","Matrix","Matrix.html#method-i-collect","()","<p>Returns a matrix that is the result of iteration of the given block over\nall elements of the matrix. …\n"],["collect","Vector","Vector.html#method-i-collect","()","<p>Like Array#collect.\n"],["collect!","Set","Set.html#method-i-collect-21","()","<p>Replaces the elements with ones returned by collect().\n"],["collect2","Vector","Vector.html#method-i-collect2","(v)","<p>Collects (as in Enumerable#collect) over the elements of this vector and\n<code>v</code> in conjunction.\n"],["column","Matrix","Matrix.html#method-i-column","(j)","<p>Returns column vector number <code>j</code> of the matrix as a Vector\n(starting at 0 like an array).  When a block …\n"],["column_vector","Matrix","Matrix.html#method-c-column_vector","(column)","<p>Creates a single-column matrix where the values of that column are as given\nin <code>column</code>.\n\n<pre>Matrix.column_vector([4,5,6]) ...</pre>\n"],["column_vectors","Matrix","Matrix.html#method-i-column_vectors","()","<p>Returns an array of the column vectors of the matrix.  See Vector.\n"],["columns","Matrix","Matrix.html#method-c-columns","(columns)","<p>Creates a matrix using <code>columns</code> as an array of column vectors.\n\n<pre>Matrix.columns([[25, 93], [-1, 66]])\n   ...</pre>\n"],["comma_breakable","PP::PPMethods","PP/PPMethods.html#method-i-comma_breakable","()","<p>A convenience method which is same as follows:\n\n<pre>text ','\nbreakable</pre>\n"],["commit","PStore","PStore.html#method-i-commit","()","<p>Ends the current PStore#transaction, committing any changes to the data\nstore immediately.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["compare_file","FileUtils","FileUtils.html#method-c-compare_file","(a, b)","<p>Returns true if the contents of a file A and a file B are identical.\n\n<pre>FileUtils.compare_file('somefile', ...</pre>\n"],["compare_stream","FileUtils","FileUtils.html#method-c-compare_stream","(a, b)","<p>Returns true if the contents of a stream <code>a</code> and <code>b</code>\nare identical.\n"],["compile","Buildr::Compile","Buildr/Compile.html#method-i-compile","(*sources, &block)","<p>The compile task does what its name suggests. This method returns the\nproject’s CompileTask. It also …\n"],["compile","Buildr::TestTask","Buildr/TestTask.html#method-i-compile","(*sources, &block)","<p>The compile task is similar to the Project’s compile task. However, it\ncompiles all files found in the …\n"],["compiler","Buildr::CompileTask","Buildr/CompileTask.html#method-i-compiler","()","<p>Returns the compiler if known.  The compiler is either automatically\nselected based on existing source …\n"],["compilers","Buildr::Compiler","Buildr/Compiler.html#method-c-compilers","()","<p>Returns a list of available compilers.\n"],["complete","OptionParser::Completion","OptionParser/Completion.html#method-i-complete","(key, icase = false, pat = nil)",""],["complete","OptionParser::List","OptionParser/List.html#method-i-complete","(id, opt, icase = false, *pat, &block)","<p>Searches list <code>id</code> for <code>opt</code> and the optional\npatterns for completion <code>pat</code>. If <code>icase</code> is true,\nthe search is …\n"],["component","Matrix","Matrix.html#method-i-component","(i, j)",""],["component","Vector","Vector.html#method-i-component","(i)",""],["component_clone","Buildr::Packaging::Java::EarTask","Buildr/Packaging/Java/EarTask.html#method-i-component_clone","(component)",""],["components","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-components","()",""],["composed?","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-i-composed-3F","()","<p>Is this object a composed requirement?\n\n<pre>VersionRequirement.create('1').composed? -&gt; false\nVersionRequirement.create('1 ...</pre>\n"],["concat","Buildr","Buildr.html#method-i-concat","(args)","<p>Creates and returns a file task that concatenates all its prerequisites to\ncreate a new file. See #ConcatTask …\n"],["conf","IRB","IRB.html#method-c-conf","()",""],["config_file","Gem","Gem.html#method-c-config_file","()","<p>The path to standard location of the user’s .gemrc file.\n"],["configuration","Gem","Gem.html#method-c-configuration","()","<p>The standard configuration object for gems.\n"],["configuration=","Gem","Gem.html#method-c-configuration-3D","(config)","<p>Use the given configuration object (which implements the ConfigFile\nprotocol) as the standard configuration …\n"],["configurations_component","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-configurations_component","()",""],["conj","Matrix","Matrix.html#method-i-conj","()",""],["conjugate","Matrix","Matrix.html#method-i-conjugate","()","<p>Returns the conjugate of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>), <span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-value\">1</span>), <span class=\"ruby-value\">0</span>], [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span><span class=\"ruby-operator\">+</span><span class=\"ruby-value\">2</span><span class=\"ruby-identifier\">i</span>   <span class=\"ruby-identifier\">i</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["connect","Addrinfo","Addrinfo.html#method-i-connect","(&block)","<p>creates a socket connected to the address of self.\n<p>If a block is given, it is called with the socket and …\n"],["connect","UDPSocket","UDPSocket.html#method-i-connect","(host, port)",""],["connect_address","BasicSocket","BasicSocket.html#method-i-connect_address","()","<p>Returns an address of the socket suitable for connect in the local machine.\n<p>This method returns <em>self</em>. …\n"],["connect_from","Addrinfo","Addrinfo.html#method-i-connect_from","(*local_addr_args, &block)","<p>creates a socket connected to the address of self.\n<p>If one or more arguments given as <em>local_addr_args</em>, …\n"],["connect_to","Addrinfo","Addrinfo.html#method-i-connect_to","(*remote_addr_args, &block)","<p>creates a socket connected to <em>remote_addr_args</em> and bound to self.\n<p>If a block is given, it is called with …\n"],["connecting","GServer","GServer.html#method-i-connecting","(client)","<p>Called when a client connects, if auditing is enabled.\n<p>client &mdash; a TCPSocket instances representing the client …\n\n"],["connections","GServer","GServer.html#method-i-connections","()","<p>Return the current number of connected clients\n"],["contain?","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-contain-3F","(*files)","<p>Returns true if this ZIP file contains all the specified files. You can use\nabsolute file names and glob …\n"],["contain?","Rake::FileTask","Rake/FileTask.html#method-i-contain-3F","(*patterns)","<p>For a file, returns true if the file content matches against all the\narguments. An argument may be a …\n"],["contain?","Zip::ZipEntry","Zip/ZipEntry.html#method-i-contain-3F","(*patterns)","<p>Returns true if this ZIP file entry matches against all the arguments. An\nargument may be a string or …\n"],["content","Buildr::Artifact","Buildr/Artifact.html#method-i-content","(string = nil)","<p>Use this when you want to install or upload an artifact from a given\ncontent, for example:\n\n<pre>readme = artifact('com.example:readme:txt:1.0').content(&lt;&lt;-EOF ...</pre>\n"],["content_encoding","OpenURI::Meta","OpenURI/Meta.html#method-i-content_encoding","()","<p>returns a list of encodings in Content-Encoding field as an Array of\nString. The encodings are downcased …\n"],["content_type","OpenURI::Meta","OpenURI/Meta.html#method-i-content_type","()","<p>returns “type/subtype” which is MIME Content-Type. It is downcased for\ncanonicalization. Content- …\n"],["context","DEBUGGER__","DEBUGGER__.html#method-i-context","(th)",""],["context","DEBUGGER__","DEBUGGER__.html#method-c-context","(thread=Thread.current)",""],["convert","CSV","CSV.html#method-i-convert","(name = nil, &converter)","<p>You can use this method to install a CSV::Converters built-in, or provide a\nblock that handles a custom …\n"],["convert","OptionParser::Completion","OptionParser/Completion.html#method-i-convert","(opt = nil, val = nil, *)",""],["converters","CSV","CSV.html#method-i-converters","()","<p>Returns the current list of converters in effect.  See CSV::new for\ndetails. Built-in converters will …\n"],["convertible_int","Object","Object.html#method-i-convertible_int","(type, headers = nil, opts = nil, &b)","<p>Returns the convertible integer type of the given <code>type</code>.  You\nmay optionally specify additional <code>headers</code> …\n"],["copy","FileUtils","FileUtils.html#method-c-copy","(src, dest, options = {})",""],["copy_attrs","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-copy_attrs","(other)","<p>Copy attributes from other to this object\n"],["copy_entry","FileUtils","FileUtils.html#method-c-copy_entry","(src, dest, preserve = false, dereference_root = false, remove_destination = false)","<p>Copies a file system entry <code>src</code> to <code>dest</code>. If\n<code>src</code> is a directory, this method copies its contents\nrecursively. …\n"],["copy_file","FileUtils","FileUtils.html#method-c-copy_file","(src, dest, preserve = false, dereference = true)","<p>Copies file contents of <code>src</code> to <code>dest</code>. Both of\n<code>src</code> and <code>dest</code> must be a path name.\n"],["copy_stream","FileUtils","FileUtils.html#method-c-copy_stream","(src, dest)","<p>Copies stream <code>src</code> to <code>dest</code>. <code>src</code> must\nrespond to #read(n) and <code>dest</code> must respond to #write(str).\n"],["coredump?","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-coredump-3F","()",""],["cos","CMath","CMath.html#method-c-cos","(z)","<p>returns the cosine of <code>z</code>, where <code>z</code> is given in\nradians\n"],["cos!","CMath","CMath.html#method-c-cos-21","(z)",""],["cosh","CMath","CMath.html#method-c-cosh","(z)","<p>returns the hyperbolic cosine of <code>z</code>, where <code>z</code> is\ngiven in radians\n"],["cosh!","CMath","CMath.html#method-c-cosh-21","(z)",""],["count","ProgressBar","ProgressBar.html#method-i-count","()",""],["count_observers","Observable","Observable.html#method-i-count_observers","()","<p>Return the number of observers associated with this object.\n"],["covector","Vector","Vector.html#method-i-covector","()","<p>Creates a single-row matrix from this vector.\n"],["cp","FileUtils","FileUtils.html#method-c-cp","(src, dest, options = {})","<p>Options: preserve noop verbose\n<p>Copies a file content <code>src</code> to <code>dest</code>.  If\n<code>dest</code> is a directory, copies <code>src</code> …\n"],["cp","Object","Object.html#method-i-cp","()","<p>Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY\n\n<pre>ruby -run -e cp -- [OPTION] SOURCE DEST\n\n-p   ...</pre>\n"],["cp_r","FileUtils","FileUtils.html#method-c-cp_r","(src, dest, options = {})","<p>Options: preserve noop verbose dereference_root remove_destination\n<p>Copies <code>src</code> to <code>dest</code>. If <code>src</code> is a\ndirectory, …\n"],["create","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-c-create","(str)","<p>parse the <code>str</code> requirement\n"],["create","Resolv::DNS::Name","Resolv/DNS/Name.html#method-c-create","(arg)","<p>Creates a new DNS name from <code>arg</code>.  <code>arg</code> can be:\n<p>Name &mdash; returns <code>arg</code>.\n<p>String &mdash; Creates a new Name.\n"],["create","Resolv::IPv4","Resolv/IPv4.html#method-c-create","(arg)",""],["create","Resolv::IPv6","Resolv/IPv6.html#method-c-create","(arg)","<p>Creates a new IPv6 address from <code>arg</code> which may be:\n<p>IPv6 &mdash; returns <code>arg</code>.\n<p>String &mdash; <code>arg</code> must match one of the IPv6::Regex* ...\n"],["create_component","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-create_component","(name, attrs = {})",""],["create_composite_component","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-create_composite_component","(name, components)",""],["create_header","Object","Object.html#method-i-create_header","(header = \"extconf.h\")","<p>Generates a header file consisting of the various macro definitions\ngenerated by other methods such as …\n"],["create_makefile","Object","Object.html#method-i-create_makefile","(target, srcprefix = nil)","<p>Generates the Makefile for your extension, passing along any options and\npreprocessor constants that …\n"],["create_slave","RemoteTkIp","RemoteTkIp.html#method-i-create_slave","(name, safe=false)",""],["create_table","MultiTkIp","MultiTkIp.html#method-c-create_table","()",""],["create_table","MultiTkIp","MultiTkIp.html#method-c-create_table","()",""],["current_group","PrettyPrint","PrettyPrint.html#method-i-current_group","()","<p>Returns the group most recently added to the stack.\n"],["current_snapshot_repo_url","Buildr::Artifact","Buildr/Artifact.html#method-i-current_snapshot_repo_url","(repo_url)",""],["data","Resolv::DNS::Resource::TXT","Resolv/DNS/Resource/TXT.html#method-i-data","()","<p>Returns the first string from <code>strings</code>.\n"],["data_file","Buildr::Cobertura","Buildr/Cobertura.html#method-c-data_file","()",""],["data_file","Buildr::Emma","Buildr/Emma.html#method-c-data_file","()",""],["datadir","Gem","Gem.html#method-c-datadir","(gem_name)","<p>The path the the data directory specified by the gem name.  If the package\nis not available as a gem, …\n"],["datetime_format","Logger","Logger.html#method-i-datetime_format","()","<p>Returns the date format being used.  See #datetime_format=\n"],["datetime_format=","Logger","Logger.html#method-i-datetime_format-3D","(datetime_format)","<p>Set date-time format.\n<p>datetime_format &mdash; A string suitable for passing to <code>strftime</code>.\n\n"],["debug","Buildr::Options","Buildr/Options.html#method-i-debug","()","<p>Returns the debug option (environment variable DEBUG).\n"],["debug","Logger","Logger.html#method-i-debug","(progname = nil, &block)","<p>Log a <code>DEBUG</code> message.\n<p>See #info for more information.\n"],["debug=","Buildr::Options","Buildr/Options.html#method-i-debug-3D","(flag)","<p>Sets the debug option (environment variable DEBUG).\n<p>You can turn this option off directly, or by setting …\n"],["debug=","Shell","Shell.html#method-c-debug-3D","(val)",""],["debug=","Shell","Shell.html#method-i-debug-3D","(val)",""],["debug?","Logger","Logger.html#method-i-debug-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>DEBUG</code> messages.\n"],["debug_command","DEBUGGER__","DEBUGGER__.html#method-i-debug_command","(file, line, id, binding)",""],["debug_eval","DEBUGGER__","DEBUGGER__.html#method-i-debug_eval","(str, binding)",""],["debug_funcname","DEBUGGER__","DEBUGGER__.html#method-i-debug_funcname","(id)",""],["debug_method_info","DEBUGGER__","DEBUGGER__.html#method-i-debug_method_info","(input, binding)",""],["debug_print_help","DEBUGGER__","DEBUGGER__.html#method-i-debug_print_help","()",""],["debug_silent_eval","DEBUGGER__","DEBUGGER__.html#method-i-debug_silent_eval","(str, binding)",""],["debug_thread_info","DEBUGGER__","DEBUGGER__.html#method-c-debug_thread_info","(input, binding)",""],["debug_variable_info","DEBUGGER__","DEBUGGER__.html#method-i-debug_variable_info","(input, binding)",""],["decode64","Base64","Base64.html#method-i-decode64","(str)","<p>Returns the Base64-decoded version of <code>str</code>. This method\ncomplies with RFC 2045. Characters outside the …\n"],["def_alias","MultiTkIp","MultiTkIp.html#method-i-def_alias","(slave, new_cmd, org_cmd, *args)",""],["def_alias","MultiTkIp","MultiTkIp.html#method-c-def_alias","(slave, new_cmd, org_cmd, *args)",""],["def_alias","MultiTkIp","MultiTkIp.html#method-c-def_alias","(slave, new_cmd, org_cmd, *args)",""],["def_alias","MultiTkIp","MultiTkIp.html#method-i-def_alias","(slave, new_cmd, org_cmd, *args)",""],["def_class","ERB","ERB.html#method-i-def_class","(superklass=Object, methodname='result')","<p>Define unnamed class which has <em>methodname</em> as instance method, and\nreturn it.\n<p>example:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">MyClass_</span>\n  <span class=\"ruby-operator\">...</span>\n</pre>\n"],["def_delegator","Forwardable","Forwardable.html#method-i-def_delegator","(accessor, method, ali = method)",""],["def_delegator","SingleForwardable","SingleForwardable.html#method-i-def_delegator","(accessor, method, ali = method)",""],["def_delegators","Forwardable","Forwardable.html#method-i-def_delegators","(accessor, *methods)",""],["def_delegators","SingleForwardable","SingleForwardable.html#method-i-def_delegators","(accessor, *methods)",""],["def_e2message","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_e2message","(c, m)","<p>def_e2message(c, m)\n\n<pre>    c:  exception\n    m:  message_form\ndefine exception c with message m.</pre>\n"],["def_e2message","Exception2MessageMapper","Exception2MessageMapper.html#method-c-def_e2message","(k, c, m)","<p>E2MM.def_e2message(k, e, m)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">e</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">message_form</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["def_e2message","Exception2MessageMapper","Exception2MessageMapper.html#method-c-def_e2message","(k, c, m)","<p>E2MM.def_e2message(k, e, m)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">e</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">message_form</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["def_e2message","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_e2message","(c, m)","<p>def_e2message(c, m)\n\n<pre>    c:  exception\n    m:  message_form\ndefine exception c with message m.</pre>\n"],["def_erb_method","ERB::DefMethod","ERB/DefMethod.html#method-c-def_erb_method","(methodname, erb_or_fname)","<p>define <em>methodname</em> as instance method of current module, using ERB\nobject or eRuby file\n"],["def_exception","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_exception","(n, m, s = StandardError)","<p>def_exception(n, m, s)\n\n<pre>    n:  exception_name\n    m:  message_form\n    s:  superclass(default: StandardError) ...</pre>\n"],["def_exception","Exception2MessageMapper","Exception2MessageMapper.html#method-c-def_exception","(k, n, m, s = StandardError)","<p>E2MM.def_exception(k, n, m, s)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">n</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception_name</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["def_exception","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_exception","(n, m, s = StandardError)","<p>def_exception(n, m, s)\n\n<pre>    n:  exception_name\n    m:  message_form\n    s:  superclass(default: StandardError) ...</pre>\n"],["def_exception","Exception2MessageMapper","Exception2MessageMapper.html#method-c-def_exception","(k, n, m, s = StandardError)","<p>E2MM.def_exception(k, n, m, s)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">n</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception_name</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["def_head_option","OptionParser","OptionParser.html#method-i-def_head_option","(*opts, &block)",""],["def_instance_delegator","Forwardable","Forwardable.html#method-i-def_instance_delegator","(accessor, method, ali = method)","<p>Define <code>method</code> as delegator instance method with an optional\nalias name <code>ali</code>. Method calls to <code>ali</code> will …\n"],["def_instance_delegators","Forwardable","Forwardable.html#method-i-def_instance_delegators","(accessor, *methods)","<p>Shortcut for defining multiple delegator methods, but with no provision for\nusing a different name.  …\n"],["def_method","ERB","ERB.html#method-i-def_method","(mod, methodname, fname='(ERB)')","<p>Define <em>methodname</em> as instance method of <em>mod</em> from compiled\nruby source.\n<p>example:\n\n<pre>filename = 'example.rhtml' ...</pre>\n"],["def_module","ERB","ERB.html#method-i-def_module","(methodname='erb')","<p>Create unnamed module, define <em>methodname</em> as instance method of it,\nand return it.\n<p>example:\n\n<pre>filename = 'example.rhtml' ...</pre>\n"],["def_option","OptionParser","OptionParser.html#method-i-def_option","(*opts, &block)",""],["def_single_delegator","SingleForwardable","SingleForwardable.html#method-i-def_single_delegator","(accessor, method, ali = method)","<p>Defines a method <em>method</em> which delegates to <em>obj</em> (i.e. it\ncalls the method of the same name in <em>obj</em>).   …\n"],["def_single_delegators","SingleForwardable","SingleForwardable.html#method-i-def_single_delegators","(accessor, *methods)","<p>Shortcut for defining multiple delegator methods, but with no provision for\nusing a different name.  …\n"],["def_system_command","Shell","Shell.html#method-c-def_system_command","(command, path = command)","<p>command definitions\n"],["def_tail_option","OptionParser","OptionParser.html#method-i-def_tail_option","(*opts, &block)",""],["default","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-i-default","()","<p>Return the last requirement on this object having an = operator.\n"],["default_classpath_variables","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-default_classpath_variables","()",""],["default_components","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-default_components","()",""],["default_components","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-default_components","()",""],["default_encoding","MultiTkIp","MultiTkIp.html#method-c-default_encoding","()",""],["default_encoding","MultiTkIp","MultiTkIp.html#method-c-default_encoding","()",""],["default_encoding","MultiTkIp","MultiTkIp.html#method-i-default_encoding","()",""],["default_encoding","MultiTkIp","MultiTkIp.html#method-i-default_encoding","()",""],["default_encoding=","MultiTkIp","MultiTkIp.html#method-i-default_encoding-3D","(enc)",""],["default_encoding=","MultiTkIp","MultiTkIp.html#method-c-default_encoding-3D","(enc)",""],["default_encoding=","MultiTkIp","MultiTkIp.html#method-i-default_encoding-3D","(enc)",""],["default_encoding=","MultiTkIp","MultiTkIp.html#method-c-default_encoding-3D","(enc)",""],["default_format","ProgressBar","ProgressBar.html#method-i-default_format","()",""],["default_master?","MultiTkIp","MultiTkIp.html#method-c-default_master-3F","()",""],["default_master?","MultiTkIp","MultiTkIp.html#method-c-default_master-3F","()",""],["default_options","Buildr::TestTask","Buildr/TestTask.html#method-i-default_options","()","<p>Default options already set on each test task.\n"],["default_record_separator","Shell","Shell.html#method-c-default_record_separator","()",""],["default_record_separator=","Shell","Shell.html#method-c-default_record_separator-3D","(rs)",""],["default_system_path","Shell","Shell.html#method-c-default_system_path","()",""],["default_system_path=","Shell","Shell.html#method-c-default_system_path-3D","(path)",""],["define","Buildr","Buildr.html#method-i-define","(name, properties = nil)","<p>Defines a new project.\n<p>The first argument is the project name. Each project must have a unique\nname.  …\n"],["define","Buildr::Project","Buildr/Project.html#method-i-define","(name, properties = nil, &block)","<p>Define a new sub-project within this project. See Buildr#define.\n"],["define","OptionParser","OptionParser.html#method-i-define","(*opts, &block)",""],["define_aliases","Mutex_m","Mutex_m.html#method-c-define_aliases","(cl)",""],["define_aliases","Sync_m","Sync_m.html#method-c-define_aliases","(cl)",""],["define_aliases","Sync_m","Sync_m.html#method-c-define_aliases","(cl)",""],["define_head","OptionParser","OptionParser.html#method-i-define_head","(*opts, &block)",""],["define_tail","OptionParser","OptionParser.html#method-i-define_tail","(*opts, &block)",""],["define_task","Buildr::Shell","Buildr/Shell.html#method-c-define_task","(project, name, provider = nil)",""],["deflate","Gem","Gem.html#method-c-deflate","(data)","<p>A Zlib::Deflate.deflate wrapper\n"],["delegate","Forwardable","Forwardable.html#method-i-delegate","(hash)",""],["delegate","SingleForwardable","SingleForwardable.html#method-i-delegate","(hash)",""],["delegating_block","Delegator","Delegator.html#method-c-delegating_block","(mid)",""],["delete","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-delete","(name, include_parents = false)",""],["delete","CSV::Row","CSV/Row.html#method-i-delete","(header_or_index, minimum_index = 0)","<p>Used to remove a pair from the row by <code>header</code> or\n<code>index</code>.  The pair is located as described in CSV::Row.field() …\n"],["delete","CSV::Table","CSV/Table.html#method-i-delete","(index_or_header)","<p>Removes and returns the indicated column or row.  In the default mixed mode\nindices refer to rows and …\n"],["delete","MultiTkIp","MultiTkIp.html#method-c-delete","()",""],["delete","MultiTkIp","MultiTkIp.html#method-c-delete","()",""],["delete","MultiTkIp","MultiTkIp.html#method-i-delete","()",""],["delete","MultiTkIp","MultiTkIp.html#method-i-delete","()",""],["delete","PStore","PStore.html#method-i-delete","(name)","<p>Removes an object hierarchy from the data store, by <em>name</em>.\n<p><strong>WARNING</strong>:  This method is only valid in a\nPStore#transaction ...\n"],["delete","PrettyPrint::GroupQueue","PrettyPrint/GroupQueue.html#method-i-delete","(group)",""],["delete","RemoteTkIp","RemoteTkIp.html#method-i-delete","()",""],["delete","Set","Set.html#method-i-delete","(o)","<p>Deletes the given object from the set and returns self.  Use\n<code>subtract</code> to delete many items at once.\n"],["delete","Tempfile","Tempfile.html#method-i-delete","()",""],["delete?","Set","Set.html#method-i-delete-3F","(o)","<p>Deletes the given object from the set and returns self.  If the object is\nnot in the set, returns nil. …\n"],["delete_cmd","MultiTkIp","MultiTkIp.html#method-c-delete_cmd","(slave, cmd)",""],["delete_cmd","MultiTkIp","MultiTkIp.html#method-i-delete_cmd","(slave, cmd)",""],["delete_cmd","MultiTkIp","MultiTkIp.html#method-c-delete_cmd","(slave, cmd)",""],["delete_cmd","MultiTkIp","MultiTkIp.html#method-i-delete_cmd","(slave, cmd)",""],["delete_field","OpenStruct","OpenStruct.html#method-i-delete_field","(name)","<p>Remove the named field from the object. Returns the value that the field\ncontained if it was defined. …\n"],["delete_if","CSV::Row","CSV/Row.html#method-i-delete_if","(&block)","<p>The provided <code>block</code> is passed a header and field for each pair\nin the row and expected to return <code>true</code> …\n"],["delete_if","CSV::Table","CSV/Table.html#method-i-delete_if","(&block)","<p>Removes any column or row for which the block returns <code>true</code>. \nIn the default mixed mode or row mode, iteration …\n"],["delete_if","Set","Set.html#method-i-delete_if","()","<p>Deletes every element of the set for which block evaluates to true, and\nreturns self.\n"],["delete_observer","Observable","Observable.html#method-i-delete_observer","(observer)","<p>Remove <code>observer</code> as an observer on this object so that it will\nno longer receive notifications.\n<p>observer … &mdash; "],["delete_observers","Observable","Observable.html#method-i-delete_observers","()","<p>Remove all observers associated with this object.\n"],["delete_slaves","MultiTkIp","MultiTkIp.html#method-c-delete_slaves","(*args)",""],["delete_slaves","MultiTkIp","MultiTkIp.html#method-i-delete_slaves","(*args)",""],["delete_slaves","MultiTkIp","MultiTkIp.html#method-c-delete_slaves","(*args)",""],["delete_slaves","MultiTkIp","MultiTkIp.html#method-i-delete_slaves","(*args)",""],["deleted?","MultiTkIp","MultiTkIp.html#method-c-deleted-3F","()",""],["deleted?","MultiTkIp","MultiTkIp.html#method-i-deleted-3F","()",""],["deleted?","MultiTkIp","MultiTkIp.html#method-i-deleted-3F","()",""],["deleted?","MultiTkIp","MultiTkIp.html#method-c-deleted-3F","()",""],["deleted?","RemoteTkIp","RemoteTkIp.html#method-i-deleted-3F","()",""],["depend_rules","Object","Object.html#method-i-depend_rules","(depend)","<p>Processes the data contents of the “depend” file. Each line of this file is\nexpected to be …\n"],["dependencies","Buildr::Ant","Buildr/Ant.html#method-c-dependencies","()","<p>Ant classpath dependencies.\n"],["dependencies","Buildr::Cobertura","Buildr/Cobertura.html#method-c-dependencies","()",""],["dependencies","Buildr::Doc::VScaladoc","Buildr/Doc/VScaladoc.html#method-c-dependencies","()",""],["dependencies","Buildr::Emma","Buildr/Emma.html#method-c-dependencies","()",""],["dependencies","Buildr::Groovy::EasyB","Buildr/Groovy/EasyB.html#method-c-dependencies","()",""],["dependencies","Buildr::JBehave","Buildr/JBehave.html#method-c-dependencies","()",""],["dependencies","Buildr::JMock","Buildr/JMock.html#method-c-dependencies","()",""],["dependencies","Buildr::JUnit","Buildr/JUnit.html#method-c-dependencies","()",""],["dependencies","Buildr::POM","Buildr/POM.html#method-i-dependencies","(options = {})","<p>Returns list of required dependencies as specified by the POM. You can\nspecify which scopes to use ( …\n"],["dependencies","Buildr::Scala::Check","Buildr/Scala/Check.html#method-c-dependencies","()",""],["dependencies","Buildr::Scala::Mockito","Buildr/Scala/Mockito.html#method-c-dependencies","()",""],["dependencies","Buildr::Scala::ScalaTest","Buildr/Scala/ScalaTest.html#method-c-dependencies","()",""],["dependencies","Buildr::Scala::Scalac","Buildr/Scala/Scalac.html#method-c-dependencies","()",""],["dependencies","Buildr::Scala::Specs","Buildr/Scala/Specs.html#method-c-dependencies","()",""],["dependencies","Buildr::Scala::Specs2","Buildr/Scala/Specs2.html#method-c-dependencies","()",""],["dependencies","Buildr::TestFramework::Base","Buildr/TestFramework/Base.html#method-c-dependencies","()","<p>Returns a list of dependencies for this framework.  Default is an empty\nlist, override to add dependencies. …\n"],["dependencies","Buildr::TestFramework::Base","Buildr/TestFramework/Base.html#method-i-dependencies","()","<p>Returns a list of dependenices for this framework.  Defaults to calling the\n#dependencies method on the …\n"],["dependencies","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-c-dependencies","()",""],["dependencies","Buildr::TestFramework::JRubyBased::ClassMethods","Buildr/TestFramework/JRubyBased/ClassMethods.html#method-i-dependencies","()",""],["dependencies","Buildr::TestFramework::Java","Buildr/TestFramework/Java.html#method-c-dependencies","()",""],["dependencies","Buildr::TestNG","Buildr/TestNG.html#method-c-dependencies","()",""],["deq","PrettyPrint::GroupQueue","PrettyPrint/GroupQueue.html#method-i-deq","()",""],["deq","Queue","Queue.html#method-i-deq","(non_block=false)","<p>Alias of pop\n"],["deq","SizedQueue","SizedQueue.html#method-i-deq","(*args)","<p>Alias of pop\n"],["descend","Pathname","Pathname.html#method-i-descend","()","<p>Iterates over and yields a new Pathname object for each element in the\ngiven path in descending order. …\n"],["det","Matrix","Matrix.html#method-i-det","()",""],["det_e","Matrix","Matrix.html#method-i-det_e","()",""],["detect_implicit","Syck","Syck.html#method-c-detect_implicit","( val )","<p>Detect typing of a string\n"],["detect_vcs","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-detect_vcs","()",""],["determinant","Matrix","Matrix.html#method-i-determinant","()","<p>Returns the determinant of the matrix.\n<p>Beware that using Float values can yield erroneous results because …\n"],["determinant_e","Matrix","Matrix.html#method-i-determinant_e","()","<p>deprecated; use Matrix#determinant\n"],["diagonal","Matrix","Matrix.html#method-c-diagonal","(*values)","<p>Creates a matrix where the diagonal elements are composed of\n<code>values</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">diagonal</span>(<span class=\"ruby-value\">9</span>, <span class=\"ruby-value\">5</span>, <span class=\"ruby-value\">-3</span>)\n  =<span class=\"ruby-operator\">&gt;</span>  <span class=\"ruby-value\">9</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["diagonal?","Matrix","Matrix.html#method-i-diagonal-3F","()","<p>Returns <code>true</code> is this is a diagonal matrix. Raises an error if\nmatrix is not square.\n"],["difference","Set","Set.html#method-i-difference","(enum)",""],["dir","Gem","Gem.html#method-c-dir","()","<p>The path where gems are to be installed.\n"],["dir_config","Object","Object.html#method-i-dir_config","(target, idefault=nil, ldefault=nil)","<p>Sets a <code>target</code> name that the user can then use to configure\nvarious ‘with’ options with on the command …\n"],["disconnecting","GServer","GServer.html#method-i-disconnecting","(clientPort)","<p>Called when a client disconnects, if audition is enabled.\n<p>clientPort &mdash; the port of the client that is connecting …\n\n"],["display","DEBUGGER__","DEBUGGER__.html#method-c-display","()",""],["display","DEBUGGER__","DEBUGGER__.html#method-i-display","()",""],["display_expression","DEBUGGER__","DEBUGGER__.html#method-i-display_expression","(exp, binding)",""],["display_expressions","DEBUGGER__","DEBUGGER__.html#method-i-display_expressions","(binding)",""],["display_frames","DEBUGGER__","DEBUGGER__.html#method-i-display_frames","(pos)",""],["display_list","DEBUGGER__","DEBUGGER__.html#method-i-display_list","(b, e, file, line)",""],["divide","Set","Set.html#method-i-divide","(&func)","<p>Divides the set into a set of subsets according to the commonality defined\nby the given block.\n<p>If the …\n"],["do_one_event","MultiTkIp","MultiTkIp.html#method-c-do_one_event","(flag = TclTkLib::EventFlag::ALL)",""],["do_one_event","MultiTkIp","MultiTkIp.html#method-c-do_one_event","(flag = TclTkLib::EventFlag::ALL)",""],["do_one_event","RemoteTkIp","RemoteTkIp.html#method-c-do_one_event","(flag = nil)",""],["do_one_event","RemoteTkIp","RemoteTkIp.html#method-i-do_one_event","(flag = nil)",""],["do_one_event","TclTkLib","TclTkLib.html#method-c-do_one_event","(flag = TclTkLib::EventFlag::ALL)",""],["doc","Buildr::Doc","Buildr/Doc.html#method-i-doc","(*sources, &block)","<p>This method returns the project’s documentation task. It also accepts a\nlist of source files, directories …\n"],["document","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-document","()",""],["download","Buildr","Buildr.html#method-i-download","(args)","<p>Create a task that will download a file from a URL.\n<p>Takes a single argument, a hash with one pair. The …\n"],["download","Buildr::Artifact","Buildr/Artifact.html#method-i-download","()","<p>Downloads an artifact from one of the remote repositories, and stores it in\nthe local repository. Raises …\n"],["download","Buildr::OptionalArtifact","Buildr/OptionalArtifact.html#method-i-download","()","<p>If downloading fails, the user will be informed but it will not raise an\nexception.\n"],["download","URI","URI.html#method-c-download","(uri, target, options = nil)","<p>Downloads the resource to the target.\n<p>The target may be a file name (string or task), in which case the …\n"],["download","URI::Generic","URI/Generic.html#method-i-download","(target, options = nil)","<p>Downloads the resource to the target.\n<p>The target may be a file name (string or task), in which case the …\n"],["download_m2_snapshot","Buildr::Artifact","Buildr/Artifact.html#method-i-download_m2_snapshot","(remote_uris)",""],["dummy_makefile","Object","Object.html#method-i-dummy_makefile","(srcdir)","<p>creates a stub Makefile.\n"],["dump","CSV","CSV.html#method-c-dump","(ary_of_objs, io = \"\", options = Hash.new)","<p>This method allows you to serialize an Array of Ruby objects to a String or\nFile of CSV data.  This is …\n"],["dump","Psych","Psych.html#method-c-dump","(o, io = nil, options = {})","<p>Dump Ruby object <code>o</code> to a YAML string.  Optional\n<code>options</code> may be passed in to control the output format. …\n"],["dump","Syck","Syck.html#method-c-dump","( obj, io = nil )","<p>Converts <em>obj</em> to YAML and writes the YAML result to <em>io</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">open</span>( <span class=\"ruby-string\">'animals.yaml'</span>, <span class=\"ruby-string\">'w'</span> ) <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">out</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-constant\">YAML</span>.<span class=\"ruby-identifier\">dump</span>( <span class=\"ruby-operator\">...</span>\n</pre>\n"],["dump_stream","Psych","Psych.html#method-c-dump_stream","(*objects)","<p>Dump a list of objects as separate documents to a document stream.\n<p>Example:\n\n<pre>Psych.dump_stream(&quot;foo\\n  &quot;, ...</pre>\n"],["dump_stream","Syck","Syck.html#method-c-dump_stream","( *objs )","<p>Returns a YAML stream containing each of the items in <code>objs</code>,\neach having their own document.\n\n<pre>YAML.dump_stream( ...</pre>\n"],["dump_yaml","Buildr::TestFramework::TestResult::Error","Buildr/TestFramework/TestResult/Error.html#method-c-dump_yaml","(file, e)",""],["dup","Singleton","Singleton.html#method-i-dup","()","<p>Raises a TypeError to prevent duping.\n"],["duration","ProgressBar","ProgressBar.html#method-i-duration","(seconds)",""],["e2mm_message","Exception2MessageMapper","Exception2MessageMapper.html#method-c-e2mm_message","(klass, exp)",""],["e2mm_message","Exception2MessageMapper","Exception2MessageMapper.html#method-c-e2mm_message","(klass, exp)",""],["each","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-each","(&block)","<p>yield each ArtifactRequirement\n"],["each","Buildr::Packaging::Java::Manifest","Buildr/Packaging/Java/Manifest.html#method-i-each","(&block)","<p>Iterate over each section and yield to block.\n"],["each","CSV","CSV.html#method-i-each","()","<p>Yields each row of the data source in turn.\n<p>Support for Enumerable.\n<p>The data source must be open for reading. …\n"],["each","CSV::Row","CSV/Row.html#method-i-each","(&block)","<p>Yields each pair of the row as header and field tuples (much like iterating\nover a Hash).\n<p>Support for …\n"],["each","CSV::Table","CSV/Table.html#method-i-each","(&block)","<p>In the default mixed mode or row mode, iteration is the standard row major\nwalking of rows.  In column …\n"],["each","GetoptLong","GetoptLong.html#method-i-each","()","<p>Iterator version of `get’.\n<p>The block is called repeatedly with two arguments: The first is the option\n…\n"],["each","Matrix","Matrix.html#method-i-each","(which = :all)","<p>Yields all elements of the matrix, starting with those of the first row, or\nreturns an Enumerator is …\n"],["each","Prime","Prime.html#method-i-each","(ubound = nil, generator = EratosthenesGenerator.new, &block)","<p>Iterates the given block over all prime numbers.\n<p>Parameters\n<p>ubound &mdash; Optional. An arbitrary positive number. …\n"],["each","Prime::OldCompatibility","Prime/OldCompatibility.html#method-i-each","(&block)","<p>Overwrites Prime#each.\n<p>Iterates the given block over all prime numbers. Note that enumeration\nstarts from …\n"],["each","Prime::PseudoPrimeGenerator","Prime/PseudoPrimeGenerator.html#method-i-each","(&block)","<p>Iterates the given block for each prime numbers.\n"],["each","Set","Set.html#method-i-each","()","<p>Calls the given block once for each element in the set, passing the element\nas parameter.  Returns an …\n"],["each","Vector","Vector.html#method-i-each","(&block)","<p>Iterate over the elements of this vector\n"],["each2","Vector","Vector.html#method-i-each2","(v)","<p>Iterate over the elements of this vector and <code>v</code> in conjunction.\n"],["each_address","Resolv","Resolv.html#method-i-each_address","(name)","<p>Iterates over all IP addresses for <code>name</code>.\n"],["each_address","Resolv","Resolv.html#method-c-each_address","(name, &block)","<p>Iterates over all IP addresses for <code>name</code>.\n"],["each_address","Resolv::DNS","Resolv/DNS.html#method-i-each_address","(name)","<p>Iterates over all IP addresses for <code>name</code> retrieved from the DNS\nresolver.\n<p><code>name</code> can be a Resolv::DNS::Name ...\n"],["each_address","Resolv::Hosts","Resolv/Hosts.html#method-i-each_address","(name, &proc)","<p>Iterates over all IP addresses for <code>name</code> retrieved from the\nhosts file.\n"],["each_child","Pathname","Pathname.html#method-i-each_child","(with_directory=true, &b)","<p>Iterates over the children of the directory (files and subdirectories, not\nrecursive). It yields Pathname …\n"],["each_document","Syck","Syck.html#method-c-each_document","( io, &block )","<p>Calls <em>block</em> with each consecutive document in the YAML stream\ncontained in <em>io</em>.\n\n<pre>File.open( 'many-docs.yaml' ...</pre>\n"],["each_filename","Pathname","Pathname.html#method-i-each_filename","()","<p>Iterates over each component of the path.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Pathname</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;/usr/bin/ruby&quot;</span>).<span class=\"ruby-identifier\">each_filename</span> {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">filename</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-operator\">...</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["each_name","Resolv","Resolv.html#method-i-each_name","(address)","<p>Iterates over all hostnames for <code>address</code>.\n"],["each_name","Resolv","Resolv.html#method-c-each_name","(address, &proc)","<p>Iterates over all hostnames for <code>address</code>.\n"],["each_name","Resolv::DNS","Resolv/DNS.html#method-i-each_name","(address)","<p>Iterates over all hostnames for <code>address</code> retrieved from the DNS\nresolver.\n<p><code>address</code> must be a Resolv::IPv4 ...\n"],["each_name","Resolv::Hosts","Resolv/Hosts.html#method-i-each_name","(address, &proc)","<p>Iterates over all hostnames for <code>address</code> retrieved from the\nhosts file.\n"],["each_node","Syck","Syck.html#method-c-each_node","( io, &doc_proc )","<p>Calls <em>block</em> with a tree of +YAML::BaseNodes+, one tree for each\nconsecutive document in the YAML stream …\n"],["each_option","GetoptLong","GetoptLong.html#method-i-each_option","()","<p>`each_option’ is an alias of `each’.\n"],["each_option","OptionParser::List","OptionParser/List.html#method-i-each_option","(&block)","<p>Iterates over each option, passing the option to the <code>block</code>.\n"],["each_prime","Integer","Integer.html#method-c-each_prime","(ubound)","<p>Iterates the given block over all prime numbers.\n<p>See <code>Prime</code>#each for more details.\n"],["each_resource","Resolv::DNS","Resolv/DNS.html#method-i-each_resource","(name, typeclass, &proc)","<p>Iterates over all <code>typeclass</code> DNS resources for\n<code>name</code>.  See #getresource for argument details.\n"],["each_strongly_connected_component","TSort","TSort.html#method-i-each_strongly_connected_component","()","<p>The iterator version of the #strongly_connected_components method.\n<code><em>obj</em>.each_strongly_connected_component</code> …\n"],["each_strongly_connected_component_from","TSort","TSort.html#method-i-each_strongly_connected_component_from","(node, id_map={}, stack=[])","<p>Iterates over strongly connected component in the subgraph reachable from\n<em>node</em>.\n<p>Return value is unspecified. …\n"],["each_with_index","Matrix","Matrix.html#method-i-each_with_index","(which = :all)","<p>Same as #each, but the row index and column index in addition to the\nelement\n\n<pre>Matrix[ [1,2], [3,4] ].each_with_index ...</pre>\n"],["eigen","Matrix","Matrix.html#method-i-eigen","()",""],["eigensystem","Matrix","Matrix.html#method-i-eigensystem","()","<p>Returns the Eigensystem of the matrix; see\n<code>EigenvalueDecomposition</code>.\n\n<pre>m = Matrix[[1, 2], [3, 4]]\nv, d, v_inv ...</pre>\n"],["elapsed","ProgressBar","ProgressBar.html#method-i-elapsed","()",""],["element","Matrix","Matrix.html#method-i-element","(i, j)",""],["element","Vector","Vector.html#method-i-element","(i)",""],["elements","Vector","Vector.html#method-c-elements","(array, copy = true)","<p>Creates a vector from an Array.  The optional second argument specifies\nwhether the array itself or a …\n"],["elements_to_f","Matrix","Matrix.html#method-i-elements_to_f","()",""],["elements_to_f","Vector","Vector.html#method-i-elements_to_f","()",""],["elements_to_i","Matrix","Matrix.html#method-i-elements_to_i","()",""],["elements_to_i","Vector","Vector.html#method-i-elements_to_i","()",""],["elements_to_r","Matrix","Matrix.html#method-i-elements_to_r","()",""],["elements_to_r","Vector","Vector.html#method-i-elements_to_r","()",""],["emitter","Syck","Syck.html#method-c-emitter","()","<p>Returns a new default emitter\n"],["empty","Matrix","Matrix.html#method-c-empty","(row_size = 0, column_size = 0)","<p>Creates a empty matrix of <code>row_size</code> x <code>column_size</code>.\nAt least one of <code>row_size</code> or <code>column_size</code> must be\n0. …\n"],["empty?","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-empty-3F","()","<p>Returns true if this ZIP file is empty (has no other entries inside).\n"],["empty?","Matrix","Matrix.html#method-i-empty-3F","()","<p>Returns <code>true</code> if this is an empty matrix, i.e. if the number of\nrows or the number of columns is 0.\n"],["empty?","Queue","Queue.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the queue is empty.\n"],["empty?","Rake::FileTask","Rake/FileTask.html#method-i-empty-3F","()","<p>Returns true if file/directory is empty.\n"],["empty?","Set","Set.html#method-i-empty-3F","()","<p>Returns true if the set contains no elements.\n"],["empty?","ThreadsWait","ThreadsWait.html#method-i-empty-3F","()","<p>Returns <code>true</code> if there are no threads in the pool still\nrunning.\n"],["empty?","ThreadsWait","ThreadsWait.html#method-i-empty-3F","()","<p>Returns <code>true</code> if there are no threads in the pool still\nrunning.\n"],["empty?","Zip::ZipEntry","Zip/ZipEntry.html#method-i-empty-3F","()","<p>Returns true if this entry is empty.\n"],["enable_config","Object","Object.html#method-i-enable_config","(config, default=nil)","<p>Tests for the presence of an –enable-<code>config</code> or\n–disable-<code>config</code> option. Returns true if the enable option …\n"],["encode64","Base64","Base64.html#method-i-encode64","(bin)","<p>Returns the Base64-encoded version of <code>bin</code>. This method\ncomplies with RFC 2045. Line feeds are added to …\n"],["encoding","MultiTkIp","MultiTkIp.html#method-c-encoding","()",""],["encoding","MultiTkIp","MultiTkIp.html#method-i-encoding","()",""],["encoding","MultiTkIp","MultiTkIp.html#method-c-encoding","()",""],["encoding","MultiTkIp","MultiTkIp.html#method-i-encoding","()",""],["encoding=","MultiTkIp","MultiTkIp.html#method-c-encoding-3D","(enc)",""],["encoding=","MultiTkIp","MultiTkIp.html#method-c-encoding-3D","(enc)",""],["encoding=","MultiTkIp","MultiTkIp.html#method-i-encoding-3D","(enc)",""],["encoding=","MultiTkIp","MultiTkIp.html#method-i-encoding-3D","(enc)",""],["encoding_convert_from","MultiTkIp","MultiTkIp.html#method-i-encoding_convert_from","(str, enc=None)",""],["encoding_convert_from","MultiTkIp","MultiTkIp.html#method-c-encoding_convert_from","(str, enc=None)",""],["encoding_convert_from","MultiTkIp","MultiTkIp.html#method-c-encoding_convert_from","(str, enc=None)",""],["encoding_convert_from","MultiTkIp","MultiTkIp.html#method-i-encoding_convert_from","(str, enc=None)",""],["encoding_convert_to","MultiTkIp","MultiTkIp.html#method-c-encoding_convert_to","(str, enc=None)",""],["encoding_convert_to","MultiTkIp","MultiTkIp.html#method-i-encoding_convert_to","(str, enc=None)",""],["encoding_convert_to","MultiTkIp","MultiTkIp.html#method-i-encoding_convert_to","(str, enc=None)",""],["encoding_convert_to","MultiTkIp","MultiTkIp.html#method-c-encoding_convert_to","(str, enc=None)",""],["encoding_convertfrom","MultiTkIp","MultiTkIp.html#method-i-encoding_convertfrom","(str, enc=None)",""],["encoding_convertfrom","MultiTkIp","MultiTkIp.html#method-c-encoding_convertfrom","(str, enc=None)",""],["encoding_convertfrom","MultiTkIp","MultiTkIp.html#method-i-encoding_convertfrom","(str, enc=None)",""],["encoding_convertfrom","MultiTkIp","MultiTkIp.html#method-c-encoding_convertfrom","(str, enc=None)",""],["encoding_convertto","MultiTkIp","MultiTkIp.html#method-i-encoding_convertto","(str, enc=None)",""],["encoding_convertto","MultiTkIp","MultiTkIp.html#method-c-encoding_convertto","(str, enc=None)",""],["encoding_convertto","MultiTkIp","MultiTkIp.html#method-i-encoding_convertto","(str, enc=None)",""],["encoding_convertto","MultiTkIp","MultiTkIp.html#method-c-encoding_convertto","(str, enc=None)",""],["encoding_name","MultiTkIp","MultiTkIp.html#method-c-encoding_name","()",""],["encoding_name","MultiTkIp","MultiTkIp.html#method-c-encoding_name","()",""],["encoding_name","MultiTkIp","MultiTkIp.html#method-i-encoding_name","()",""],["encoding_name","MultiTkIp","MultiTkIp.html#method-i-encoding_name","()",""],["encoding_obj","MultiTkIp","MultiTkIp.html#method-i-encoding_obj","()",""],["encoding_obj","MultiTkIp","MultiTkIp.html#method-c-encoding_obj","()",""],["encoding_obj","MultiTkIp","MultiTkIp.html#method-i-encoding_obj","()",""],["encoding_obj","MultiTkIp","MultiTkIp.html#method-c-encoding_obj","()",""],["encoding_table","MultiTkIp","MultiTkIp.html#method-c-encoding_table","()",""],["encoding_table","MultiTkIp","MultiTkIp.html#method-i-encoding_table","()",""],["encoding_table","MultiTkIp","MultiTkIp.html#method-c-encoding_table","()",""],["encoding_table","MultiTkIp","MultiTkIp.html#method-i-encoding_table","()",""],["engine","Buildr::Doc::DocTask","Buildr/Doc/DocTask.html#method-i-engine","()",""],["engine?","Buildr::Doc::DocTask","Buildr/Doc/DocTask.html#method-i-engine-3F","(clazz)","<p>Check if the underlying engine is an instance of the given class\n"],["engines","Buildr::Doc","Buildr/Doc.html#method-c-engines","()",""],["enq","MultiTkIp::Command_Queue","MultiTkIp/Command_Queue.html#method-i-enq","(value)",""],["enq","PrettyPrint::GroupQueue","PrettyPrint/GroupQueue.html#method-i-enq","(group)",""],["enq","Queue","Queue.html#method-i-enq","(obj)","<p>Alias of push\n"],["enq","SizedQueue","SizedQueue.html#method-i-enq","(obj)","<p>Alias of push\n"],["ensure_gem_subdirectories","Gem","Gem.html#method-c-ensure_gem_subdirectories","(dir = Gem.dir)","<p>Quietly ensure the named Gem directory contains all the proper\nsubdirectories.  If we can’t create a …\n"],["entry","Buildr::TarTask","Buildr/TarTask.html#method-i-entry","(entry_name)","<p>Returns a Tar file entry. You can use this to check if the entry exists and\nits contents, for example: …\n"],["entry","Buildr::ZipTask","Buildr/ZipTask.html#method-i-entry","(entry_name)","<p>Returns a ZIP file entry. You can use this to check if the entry exists and\nits contents, for example: …\n"],["environment","Buildr","Buildr.html#method-c-environment","()","<p>Copied from BUILD_ENV.\n"],["environment","OptionParser","OptionParser.html#method-i-environment","(env = File.basename($0, '.*'))","<p>Parses environment variable <code>env</code> or its uppercase with\nsplitting like a shell.\n<p><code>env</code> defaults to the basename ...\n"],["eql?","IPAddr","IPAddr.html#method-i-eql-3F","(other)","<p>Checks equality used by Hash.\n"],["eql?","Matrix","Matrix.html#method-i-eql-3F","(other)",""],["eql?","Vector","Vector.html#method-i-eql-3F","(other)",""],["error","GServer","GServer.html#method-i-error","(detail)","<p>Called if #debug is true whenever an unhandled exception is raised. This\nimplementation simply logs the …\n"],["error","Logger","Logger.html#method-i-error","(progname = nil, &block)","<p>Log an <code>ERROR</code> message.\n<p>See #info for more information.\n"],["error","Object","Object.html#method-i-error","(message)","<p>Show error message.  Use this when you need to show an error message and\nnot throwing an exception that …\n"],["error?","Logger","Logger.html#method-i-error-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>ERROR</code> messages.\n"],["error_message","GetoptLong","GetoptLong.html#method-i-error_message","()","<p>Return the appropriate error message in POSIX-defined format. If no error\nhas occurred, returns nil. …\n"],["escape","Shellwords","Shellwords.html#method-c-escape","(str)",""],["eta","ProgressBar","ProgressBar.html#method-i-eta","()",""],["eval","MultiTkIp","MultiTkIp.html#method-c-eval","(*args, &blk)",""],["eval","MultiTkIp","MultiTkIp.html#method-i-eval","(*args, &blk)",""],["eval","MultiTkIp","MultiTkIp.html#method-c-eval","(*args, &blk)",""],["eval","MultiTkIp","MultiTkIp.html#method-i-eval","(*args, &blk)",""],["eval_callback","MultiTkIp","MultiTkIp.html#method-i-eval_callback","(*args)","<p>Not stable, so disable this feature\n"],["eval_callback","MultiTkIp","MultiTkIp.html#method-i-eval_callback","(*args)","<p>Not stable, so disable this feature\n"],["eval_input","IRB::Irb","IRB/Irb.html#method-i-eval_input","()",""],["eval_proc","MultiTkIp","MultiTkIp.html#method-i-eval_proc","(*args, &blk)",""],["eval_proc","MultiTkIp","MultiTkIp.html#method-c-eval_proc","(*args, &blk)","<p>class method\n"],["eval_proc","MultiTkIp","MultiTkIp.html#method-i-eval_proc","(*args, &blk)",""],["eval_proc","MultiTkIp","MultiTkIp.html#method-c-eval_proc","(*args, &blk)","<p>class method\n"],["eval_str","MultiTkIp","MultiTkIp.html#method-c-eval_str","(cmd, *eval_args)",""],["eval_str","MultiTkIp","MultiTkIp.html#method-i-eval_str","(cmd, *eval_args)",""],["eval_str","MultiTkIp","MultiTkIp.html#method-i-eval_str","(cmd, *eval_args)",""],["eval_str","MultiTkIp","MultiTkIp.html#method-c-eval_str","(cmd, *eval_args)",""],["eval_string","MultiTkIp","MultiTkIp.html#method-i-eval_string","(cmd, *eval_args)",""],["eval_string","MultiTkIp","MultiTkIp.html#method-c-eval_string","(cmd, *eval_args)",""],["eval_string","MultiTkIp","MultiTkIp.html#method-i-eval_string","(cmd, *eval_args)",""],["eval_string","MultiTkIp","MultiTkIp.html#method-c-eval_string","(cmd, *eval_args)",""],["example_failed","Buildr::TestFramework::TestResult::YamlFormatter","Buildr/TestFramework/TestResult/YamlFormatter.html#method-i-example_failed","(example)",""],["example_passed","Buildr::TestFramework::TestResult::YamlFormatter","Buildr/TestFramework/TestResult/YamlFormatter.html#method-i-example_passed","(example)",""],["example_pending","Buildr::TestFramework::TestResult::YamlFormatter","Buildr/TestFramework/TestResult/YamlFormatter.html#method-i-example_pending","(example)",""],["except","Hash","Hash.html#method-i-except","(*keys)","<p>Returns a new hash without the specified keys.\n<p>For example:\n\n<pre class=\"ruby\">{ :<span class=\"ruby-identifier\">a=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-value\">1</span>, :<span class=\"ruby-identifier\">b=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-value\">2</span>, :<span class=\"ruby-identifier\">c=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-value\">3</span>, :<span class=\"ruby-identifier\">d=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-value\">4</span> }.<span class=\"ruby-identifier\">except</span>(:<span class=\"ruby-identifier\">a</span>, :<span class=\"ruby-identifier\">c</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["exclude","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-exclude","(*files)","<p>Excludes files and returns self. Can be used in combination with include to\nprevent some files from being …\n"],["exclude","Buildr::ArchiveTask::Merge","Buildr/ArchiveTask/Merge.html#method-i-exclude","(*files)",""],["exclude","Buildr::ArtifactSearch","Buildr/ArtifactSearch.html#method-i-exclude","(method = nil)",""],["exclude","Buildr::Doc::DocTask","Buildr/Doc/DocTask.html#method-i-exclude","(*files)","<p>Excludes source files and directories from generating the documentation.\n"],["exclude","Buildr::Filter","Buildr/Filter.html#method-i-exclude","(*files)","<p>Specifies files to exclude and returns self. See FileList#exclude.\n"],["exclude","Buildr::Options::Proxies","Buildr/Options/Proxies.html#method-i-exclude","()","<p>Returns list of hosts to exclude from proxying (NO_PROXY).\n"],["exclude","Buildr::ResourcesTask","Buildr/ResourcesTask.html#method-i-exclude","(*files)","<p>Excludes the specified files in the filter and returns self.\n"],["exclude","Buildr::TestTask","Buildr/TestTask.html#method-c-exclude","(excludes)","<p>Used by the test/integration to exclude specific tests\n"],["exclude","Buildr::TestTask","Buildr/TestTask.html#method-i-exclude","(*names)","<p>Exclude the specified tests. This method accepts multiple arguments and\nreturns self. See #include for …\n"],["exclude","Buildr::Unzip","Buildr/Unzip.html#method-i-exclude","(*files)","<p>Exclude all files that match the patterns and return self.\n<p>Use exclude to unzip all files except those …\n"],["exclude=","Buildr::Options::Proxies","Buildr/Options/Proxies.html#method-i-exclude-3D","(url)","<p>Sets list of hosts to exclude from proxy (NO_PROXY). Accepts host name,\narray of names, or nil to clear …\n"],["exclude_libs","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-exclude_libs","(*values)",""],["exclude_libs=","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-exclude_libs-3D","(libs)",""],["excluded_directories","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-excluded_directories","()",""],["excn_handle","DEBUGGER__","DEBUGGER__.html#method-i-excn_handle","(file, line, id, binding)",""],["exist?","MultiTkIp","MultiTkIp.html#method-c-exist-3F","(slave = '')",""],["exist?","MultiTkIp","MultiTkIp.html#method-i-exist-3F","(slave = '')",""],["exist?","MultiTkIp","MultiTkIp.html#method-c-exist-3F","(slave = '')",""],["exist?","MultiTkIp","MultiTkIp.html#method-i-exist-3F","(slave = '')",""],["exist?","Rake::FileTask","Rake/FileTask.html#method-i-exist-3F","()","<p>Returns true if this file exists.\n"],["exist?","Zip::ZipEntry","Zip/ZipEntry.html#method-i-exist-3F","()","<p>Returns true if this entry exists.\n"],["exit","MultiTkIp","MultiTkIp.html#method-i-exit","(st = true)",""],["exit","MultiTkIp","MultiTkIp.html#method-c-exit","(st = true)",""],["exit","MultiTkIp","MultiTkIp.html#method-c-exit","(st = true)",""],["exit","MultiTkIp","MultiTkIp.html#method-i-exit","(st = true)",""],["exit!","MultiTkIp","MultiTkIp.html#method-i-exit-21","(st = false)",""],["exit!","MultiTkIp","MultiTkIp.html#method-c-exit-21","(st = false)",""],["exit!","MultiTkIp","MultiTkIp.html#method-i-exit-21","(st = false)",""],["exit!","MultiTkIp","MultiTkIp.html#method-c-exit-21","(st = false)",""],["exited?","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-exited-3F","()",""],["exp","CMath","CMath.html#method-c-exp","(z)","<p>Math::E raised to the <code>z</code> power\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-value\">0</span>))      <span class=\"ruby-comment\">#=&gt; 1.0+0.0i</span>\n<span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-constant\">PI</span>))     <span class=\"ruby-comment\">#=&gt; -1.0+1.2246467991473532e-16i ...</span>\n</pre>\n"],["exp!","CMath","CMath.html#method-c-exp-21","(z)",""],["expand","Buildr::Layout","Buildr/Layout.html#method-i-expand","(*args)","<p>Expands list of symbols and path names into a full path, for example:\n\n<pre>puts default.expand(:source, :main, ...</pre>\n"],["expand_path","Shell","Shell.html#method-i-expand_path","(path)",""],["expect","IO","IO.html#method-i-expect","(pat,timeout=9999999)","<p>Reads from the IO until pattern <code>pat</code> matches or the\n<code>timeout</code> is over. It returns an array with the read …\n"],["expectations","Buildr::Checks","Buildr/Checks.html#method-i-expectations","()","<p>Returns a list of expectations (see #check).\n"],["expose_cmd","MultiTkIp","MultiTkIp.html#method-c-expose_cmd","(slave, cmd, aliasname = nil)",""],["expose_cmd","MultiTkIp","MultiTkIp.html#method-i-expose_cmd","(slave, cmd, aliasname = nil)",""],["expose_cmd","MultiTkIp","MultiTkIp.html#method-c-expose_cmd","(slave, cmd, aliasname = nil)",""],["expose_cmd","MultiTkIp","MultiTkIp.html#method-i-expose_cmd","(slave, cmd, aliasname = nil)",""],["extend_object","Exception2MessageMapper","Exception2MessageMapper.html#method-c-extend_object","(cl)",""],["extend_object","Exception2MessageMapper","Exception2MessageMapper.html#method-c-extend_object","(cl)",""],["extend_object","MonitorMixin","MonitorMixin.html#method-c-extend_object","(obj)",""],["extend_object","Mutex_m","Mutex_m.html#method-c-extend_object","(obj)",""],["extend_object","OptionParser::Arguable","OptionParser/Arguable.html#method-c-extend_object","(obj)","<p>Initializes instance variable.\n"],["extend_object","Sync_m","Sync_m.html#method-c-extend_object","(obj)",""],["extend_object","Sync_m","Sync_m.html#method-c-extend_object","(obj)",""],["extended","Buildr::Test::SkipIfNoTest","Buildr/Test/SkipIfNoTest.html#method-c-extended","(base)",""],["extended","MultiTkIp_PseudoToplevel_Evaluable","MultiTkIp_PseudoToplevel_Evaluable.html#method-c-extended","(mod)",""],["extension","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-extension","()",""],["extension","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-extension","()",""],["extract","Buildr::Unzip","Buildr/Unzip.html#method-i-extract","()","<p>Extract the zip/tgz file into the target directory.\n<p>You can call this method directly. However, if you …\n"],["facet_component","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-facet_component","()",""],["fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-fail","(err = nil, *rest)",""],["fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-fail","(err = nil, *rest)",""],["fail_download","Buildr::Artifact","Buildr/Artifact.html#method-i-fail_download","(remote_uris)",""],["failures_to","Buildr::TestTask","Buildr/TestTask.html#method-i-failures_to","()","<p>We record the list of failed tests for the current framework in this file.\n"],["family_addrinfo","Addrinfo","Addrinfo.html#method-i-family_addrinfo","(*args)","<p>creates an Addrinfo object from the arguments.\n<p>The arguments are interpreted as similar to self.\n\n<pre>Addrinfo.tcp(&quot;0.0.0.0&quot;, ...</pre>\n"],["fatal","Logger","Logger.html#method-i-fatal","(progname = nil, &block)","<p>Log a <code>FATAL</code> message.\n<p>See #info for more information.\n"],["fatal?","Logger","Logger.html#method-i-fatal-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>FATAL</code> messages.\n"],["fetch","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-fetch","(name, default = nil, &block)","<p>Like Hash#fetch\n"],["fetch","PStore","PStore.html#method-i-fetch","(name, default=PStore::Error)","<p>This method is just like PStore#[], save that you may also provide a\n<em>default</em> value for the object.   …\n"],["fiddle?","DL","DL.html#method-c-fiddle-3F","()",""],["field","CSV::Row","CSV/Row.html#method-i-field","(header_or_index, minimum_index = 0)","<p>This method will fetch the field value by <code>header</code> or\n<code>index</code>.  If a field is not found, <code>nil</code> is returned.\n…\n"],["field?","CSV::Row","CSV/Row.html#method-i-field-3F","(data)","<p>Returns <code>true</code> if <code>data</code> matches a field in this row,\nand <code>false</code> otherwise.\n"],["field_row?","CSV::Row","CSV/Row.html#method-i-field_row-3F","()","<p>Returns <code>true</code> if this is a field row.\n"],["fields","CSV::Row","CSV/Row.html#method-i-fields","(*headers_and_or_indices)","<p>This method accepts any number of arguments which can be headers, indices,\nRanges of either, or two-element …\n"],["file","Buildr::Project","Buildr/Project.html#method-i-file","(*args, &block)","<p>Creates and returns a new file task in the project. Similar to calling\nRake’s file method, but the path …\n"],["file","Digest::Class","Digest/Class.html#method-c-file","(name)","<p>creates a digest object and reads a given file, <em>name</em>.\n\n<pre>p Digest::SHA256.file(&quot;X11R6.8.2-src.tar.bz2&quot;).hexdigest ...</pre>\n"],["file","Digest::Instance","Digest/Instance.html#method-i-file","(name)","<p>updates the digest with the contents of a given file <em>name</em> and\nreturns self.\n"],["file_path","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-file_path","(path)",""],["filename","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-filename","()",""],["fill_breakable","PrettyPrint","PrettyPrint.html#method-i-fill_breakable","(sep=' ', width=sep.length)","<p>This is similar to #breakable except the decision to break or not is\ndetermined individually.\n<p>Two #fill_breakable …\n"],["filter","Buildr","Buildr.html#method-i-filter","(*sources)","<p>Creates a filter that will copy files from the source directory(ies) into\nthe target directory. You can …\n"],["filter","CSV","CSV.html#method-c-filter","(*args)","<p>This method is a convenience for building Unix-like filters for CSV data.\nEach row is yielded to the …\n"],["filter_backtrace","OptionParser::ParseError","OptionParser/ParseError.html#method-c-filter_backtrace","(array)",""],["find","Find","Find.html#method-c-find","(*paths)","<p>Calls the associated block with the name of every file and directory listed\nas arguments, then recursively …\n"],["find","Pathname","Pathname.html#method-i-find","()","<p>Pathname#find is an iterator to traverse a directory tree in a depth first\nmanner.  It yields a Pathname …\n"],["find_executable","Object","Object.html#method-i-find_executable","(bin, path = nil)","<p>Searches for the executable <code>bin</code> on <code>path</code>. The\ndefault path is your PATH environment variable. If that …\n"],["find_files","Gem","Gem.html#method-c-find_files","(glob, check_load_path=true)","<p>Returns a list of paths matching <code>glob</code> that can be used by a\ngem to pick up features from other gems. …\n"],["find_header","Object","Object.html#method-i-find_header","(header, *paths)","<p>Instructs mkmf to search for the given <code>header</code> in any of the\n<code>paths</code> provided, and returns whether or not …\n"],["find_index","Matrix","Matrix.html#method-i-find_index","(*args)",""],["find_library","Object","Object.html#method-i-find_library","(lib, func, *paths, &b)","<p>Returns whether or not the entry point <code>func</code> can be found\nwithin the library <code>lib</code> in one of the <code>paths</code>\nspecified, …\n"],["find_proxy","URI::Generic","URI/Generic.html#method-i-find_proxy","()","<p>returns a proxy URI. The proxy URI is obtained from environment variables\nsuch as http_proxy, ftp_proxy …\n"],["find_type","Object","Object.html#method-i-find_type","(type, opt, *headers, &b)","<p>Returns where the static type <code>type</code> is defined.\n<p>You may also pass additional flags to <code>opt</code> which are then …\n"],["finish","ProgressBar","ProgressBar.html#method-i-finish","()",""],["finished?","ThreadsWait","ThreadsWait.html#method-i-finished-3F","()","<p>Returns <code>true</code> if any thread has terminated and is ready to be\ncollected.\n"],["finished?","ThreadsWait","ThreadsWait.html#method-i-finished-3F","()","<p>Returns <code>true</code> if any thread has terminated and is ready to be\ncollected.\n"],["first?","PrettyPrint","PrettyPrint.html#method-i-first-3F","()","<p>first? is a predicate to test the call is a first call to first? with\ncurrent group.\n<p>It is useful to format …\n"],["first?","PrettyPrint::Group","PrettyPrint/Group.html#method-i-first-3F","()",""],["first?","PrettyPrint::SingleLine","PrettyPrint/SingleLine.html#method-i-first-3F","()",""],["first_time","Buildr::Extension::ClassMethods","Buildr/Extension/ClassMethods.html#method-i-first_time","(&block)","<p>This block will be called once for any particular extension included in\nProject. You can use this to …\n"],["flatten","Set","Set.html#method-i-flatten","()","<p>Returns a new set that is a copy of the set, flattening each containing set\nrecursively.\n"],["flatten!","Set","Set.html#method-i-flatten-21","()","<p>Equivalent to Set#flatten, but replaces the receiver with the result in\nplace.  Returns nil if no modifications …\n"],["flush","PrettyPrint","PrettyPrint.html#method-i-flush","()","<p>outputs buffered data.\n"],["flush","PrettyPrint::SingleLine","PrettyPrint/SingleLine.html#method-i-flush","()",""],["for","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-c-for","(name = nil)",""],["force_default_encoding=","MultiTkIp","MultiTkIp.html#method-i-force_default_encoding-3D","(mode)",""],["force_default_encoding=","MultiTkIp","MultiTkIp.html#method-c-force_default_encoding-3D","(mode)",""],["force_default_encoding=","MultiTkIp","MultiTkIp.html#method-i-force_default_encoding-3D","(mode)",""],["force_default_encoding=","MultiTkIp","MultiTkIp.html#method-c-force_default_encoding-3D","(mode)",""],["force_default_encoding?","MultiTkIp","MultiTkIp.html#method-i-force_default_encoding-3F","()",""],["force_default_encoding?","MultiTkIp","MultiTkIp.html#method-i-force_default_encoding-3F","()",""],["force_default_encoding?","MultiTkIp","MultiTkIp.html#method-c-force_default_encoding-3F","()",""],["force_default_encoding?","MultiTkIp","MultiTkIp.html#method-c-force_default_encoding-3F","()",""],["force_quotes?","CSV","CSV.html#method-i-force_quotes-3F","()","<p>Returns <code>true</code> if all output fields are quoted. See CSV::new for\ndetails.\n"],["foreach","Addrinfo","Addrinfo.html#method-c-foreach","(nodename, service, family=nil, socktype=nil, protocol=nil, flags=nil, &block)","<p>iterates over the list of Addrinfo objects obtained by\nAddrinfo.getaddrinfo.\n\n<pre>Addrinfo.foreach(nil, 80) ...</pre>\n"],["foreach","CSV","CSV.html#method-c-foreach","(path, options = Hash.new, &block)","<p>This method is intended as the primary interface for reading CSV files. \nYou pass a <code>path</code> and any <code>options</code> …\n"],["format","Benchmark::Tms","Benchmark/Tms.html#method-i-format","(format = nil, *args)","<p>Returns the contents of this Tms object as a formatted string, according to\na format string like that …\n"],["format","PrettyPrint","PrettyPrint.html#method-c-format","(output='', maxwidth=79, newline=\"\\n\", genspace=lambda {|n| ' ' * n})","<p>This is a convenience method which is same as follows:\n\n<pre>begin\n  q = PrettyPrint.new(output, maxwidth, newline, ...</pre>\n"],["format_frame","DEBUGGER__","DEBUGGER__.html#method-i-format_frame","(pos)",""],["frame_set_pos","DEBUGGER__","DEBUGGER__.html#method-i-frame_set_pos","(file, line)",""],["framework","Buildr::TestTask","Buildr/TestTask.html#method-i-framework","()","<p>Returns the test framework, e.g. :junit, :testng.\n"],["framework=","Buildr::TestTask","Buildr/TestTask.html#method-i-framework-3D","(name)",""],["framework_detection_exclusion_component","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-framework_detection_exclusion_component","()",""],["frameworks","Buildr::TestFramework","Buildr/TestFramework.html#method-c-frameworks","()","<p>Returns a list of available test frameworks.\n"],["freeze","Delegator","Delegator.html#method-i-freeze","","<p>Freeze both the object returned by __getobj__ and self.\n"],["from","Buildr::Artifact","Buildr/Artifact.html#method-i-from","(path)","<p>Use this when you want to install or upload an artifact from a given file,\nfor example:\n\n<pre>test = artifact('group:id:jar:1.0').from('test.jar') ...</pre>\n"],["from","Buildr::CompileTask","Buildr/CompileTask.html#method-i-from","(*sources)","<p>Adds source directories and files to compile, and returns self.\n<p>For example:\n\n<pre>compile.from('src/java').into('classes').with('module1.jar')</pre>\n"],["from","Buildr::Doc::DocTask","Buildr/Doc/DocTask.html#method-i-from","(*sources)","<p>Includes files, directories and projects in the documentation and returns\nself.\n<p>You can call this method …\n"],["from","Buildr::Filter","Buildr/Filter.html#method-i-from","(*sources)","<p>Adds additional directories from which to copy resources.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">filter</span>.<span class=\"ruby-identifier\">from</span>(<span class=\"ruby-string\">'src'</span>).<span class=\"ruby-identifier\">into</span>(<span class=\"ruby-string\">'target'</span>).<span class=\"ruby-identifier\">using</span>(<span class=\"ruby-string\">'build'</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>)\n</pre>\n"],["from","Buildr::ResourcesTask","Buildr/ResourcesTask.html#method-i-from","(*sources)","<p>Adds additional directories from which to copy resources.\n<p>For example:\n\n<pre>resources.from _('src/etc')</pre>\n"],["from_java_properties","Hash","Hash.html#method-c-from_java_properties","(string)","<p>Returns a hash from a string in the Java properties file format. For\nexample:\n\n<pre>str = 'foo=bar\\nbaz=fab' ...</pre>\n"],["from_path","Buildr::Unzip","Buildr/Unzip.html#method-i-from_path","(name)","<p>Allows you to unzip from a path. Returns an object you can use to specify\nwhich files to include/exclude …\n"],["from_prime_division","Integer","Integer.html#method-c-from_prime_division","(pd)","<p>Re-composes a prime factorization and returns the product.\n<p>See Prime#int_from_prime_division for more …\n"],["from_zip","Buildr::Packaging::Java::Manifest","Buildr/Packaging/Java/Manifest.html#method-c-from_zip","(file)","<p>Parse the MANIFEST.MF entry of a ZIP (or JAR) file and return a new\nManifest.\n"],["gem","Kernel","Kernel.html#method-i-gem","(gem_name, *requirements)","<p>Use Kernel#gem to activate a specific version of <code>gem_name</code>.\n<p><code>requirements</code> is a list of version requirements ...\n"],["generate","Buildr::Doc::Groovydoc","Buildr/Doc/Groovydoc.html#method-i-generate","(sources, target, options = {})",""],["generate","Buildr::Doc::Javadoc","Buildr/Doc/Javadoc.html#method-i-generate","(sources, target, options = {})",""],["generate","Buildr::Doc::Scaladoc","Buildr/Doc/Scaladoc.html#method-i-generate","(sources, target, options = {})",""],["generate","Buildr::Doc::VScaladoc","Buildr/Doc/VScaladoc.html#method-i-generate","(sources, target, options = {})",""],["generate","Buildr::JUnit::Report","Buildr/JUnit/Report.html#method-i-generate","(projects, target = @target.to_s)","<p>Generates a JUnit report for these projects (must run JUnit tests first)\ninto the target directory.  …\n"],["generate","CSV","CSV.html#method-c-generate","(*args)","<p>This method wraps a String you provide, or an empty default String, in a\nCSV object which is passed to …\n"],["generate_compile_output","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-generate_compile_output","(xml)",""],["generate_content","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-generate_content","(xml)",""],["generate_initial_order_entries","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-generate_initial_order_entries","(xml)",""],["generate_lib","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-generate_lib","(xml, dependency_path, export, source_path, project_dependencies)",""],["generate_line","CSV","CSV.html#method-c-generate_line","(row, options = Hash.new)","<p>This method is a shortcut for converting a single row (Array) into a CSV\nString.\n<p>The <code>options</code> parameter …\n"],["generate_module_lib","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-generate_module_lib","(xml, path, export, source_path, test = false)",""],["generate_project_dependency","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-generate_project_dependency","(xml, other_project, export, test = false)",""],["generic_parser","Syck","Syck.html#method-c-generic_parser","()","<p>Returns a new generic parser\n"],["get","GetoptLong","GetoptLong.html#method-i-get","()","<p>Get next option name and its argument, as an Array of two elements.\n<p>The option name is always converted …\n"],["get_bgerror_handler","MultiTkIp","MultiTkIp.html#method-i-get_bgerror_handler","(slave = '')",""],["get_bgerror_handler","MultiTkIp","MultiTkIp.html#method-i-get_bgerror_handler","(slave = '')",""],["get_cb_entry","MultiTkIp","MultiTkIp.html#method-c-get_cb_entry","(cmd)",""],["get_cb_entry","MultiTkIp","MultiTkIp.html#method-c-get_cb_entry","(cmd)",""],["get_eventloop_tick","MultiTkIp","MultiTkIp.html#method-c-get_eventloop_tick","()",""],["get_eventloop_tick","MultiTkIp","MultiTkIp.html#method-c-get_eventloop_tick","()",""],["get_eventloop_tick","RemoteTkIp","RemoteTkIp.html#method-i-get_eventloop_tick","()",""],["get_eventloop_tick","RemoteTkIp","RemoteTkIp.html#method-c-get_eventloop_tick","()",""],["get_eventloop_tick","TclTkLib","TclTkLib.html#method-c-get_eventloop_tick","()",""],["get_eventloop_weight","MultiTkIp","MultiTkIp.html#method-c-get_eventloop_weight","()",""],["get_eventloop_weight","MultiTkIp","MultiTkIp.html#method-c-get_eventloop_weight","()",""],["get_eventloop_weight","RemoteTkIp","RemoteTkIp.html#method-i-get_eventloop_weight","()",""],["get_eventloop_weight","RemoteTkIp","RemoteTkIp.html#method-c-get_eventloop_weight","()",""],["get_eventloop_weight","TclTkLib","TclTkLib.html#method-c-get_eventloop_weight","()",""],["get_limit","MultiTkIp","MultiTkIp.html#method-i-get_limit","(limit_type, slave = '', slot = nil)",""],["get_limit","MultiTkIp","MultiTkIp.html#method-i-get_limit","(limit_type, slave = '', slot = nil)",""],["get_limit","MultiTkIp","MultiTkIp.html#method-c-get_limit","(limit_type, slave = '', slot = nil)",""],["get_limit","MultiTkIp","MultiTkIp.html#method-c-get_limit","(limit_type, slave = '', slot = nil)",""],["get_no_event_wait","MultiTkIp","MultiTkIp.html#method-c-get_no_event_wait","()",""],["get_no_event_wait","MultiTkIp","MultiTkIp.html#method-c-get_no_event_wait","()",""],["get_no_event_wait","RemoteTkIp","RemoteTkIp.html#method-c-get_no_event_wait","()",""],["get_no_event_wait","RemoteTkIp","RemoteTkIp.html#method-i-get_no_event_wait","()",""],["get_no_event_wait","TclTkLib","TclTkLib.html#method-c-get_no_event_wait","()",""],["get_option","GetoptLong","GetoptLong.html#method-i-get_option","()","<p>`get_option’ is an alias of `get’.\n"],["get_thread","DEBUGGER__","DEBUGGER__.html#method-c-get_thread","(num)",""],["getaddress","IPSocket","IPSocket.html#method-c-getaddress","(s)","<p>Returns a <code>String</code> based representation of a valid DNS hostname,\nIPv4 or IPv6 address.\n\n<pre>IPSocket.getaddress ...</pre>\n"],["getaddress","Resolv","Resolv.html#method-i-getaddress","(name)","<p>Looks up the first IP address for <code>name</code>.\n"],["getaddress","Resolv","Resolv.html#method-c-getaddress","(name)","<p>Looks up the first IP address for <code>name</code>.\n"],["getaddress","Resolv::DNS","Resolv/DNS.html#method-i-getaddress","(name)","<p>Gets the IP address of <code>name</code> from the DNS resolver.\n<p><code>name</code> can be a Resolv::DNS::Name or a String.  Retrieved ...\n"],["getaddress","Resolv::Hosts","Resolv/Hosts.html#method-i-getaddress","(name)","<p>Gets the IP address of <code>name</code> from the hosts file.\n"],["getaddress_orig","IPSocket","IPSocket.html#method-c-getaddress_orig","(s)",""],["getaddresses","Resolv","Resolv.html#method-i-getaddresses","(name)","<p>Looks up all IP address for <code>name</code>.\n"],["getaddresses","Resolv","Resolv.html#method-c-getaddresses","(name)","<p>Looks up all IP address for <code>name</code>.\n"],["getaddresses","Resolv::DNS","Resolv/DNS.html#method-i-getaddresses","(name)","<p>Gets all IP addresses for <code>name</code> from the DNS resolver.\n<p><code>name</code> can be a Resolv::DNS::Name or a String.  Retrieved ...\n"],["getaddresses","Resolv::Hosts","Resolv/Hosts.html#method-i-getaddresses","(name)","<p>Gets all IP addresses for <code>name</code> from the hosts file.\n"],["getname","Resolv","Resolv.html#method-c-getname","(address)","<p>Looks up the hostname of <code>address</code>.\n"],["getname","Resolv","Resolv.html#method-i-getname","(address)","<p>Looks up the hostname of <code>address</code>.\n"],["getname","Resolv::DNS","Resolv/DNS.html#method-i-getname","(address)","<p>Gets the hostname for <code>address</code> from the DNS resolver.\n<p><code>address</code> must be a Resolv::IPv4, Resolv::IPv6 or a ...\n"],["getname","Resolv::Hosts","Resolv/Hosts.html#method-i-getname","(address)","<p>Gets the hostname of <code>address</code> from the hosts file.\n"],["getnames","Resolv","Resolv.html#method-c-getnames","(address)","<p>Looks up all hostnames for <code>address</code>.\n"],["getnames","Resolv","Resolv.html#method-i-getnames","(address)","<p>Looks up all hostnames for <code>address</code>.\n"],["getnames","Resolv::DNS","Resolv/DNS.html#method-i-getnames","(address)","<p>Gets all hostnames for <code>address</code> from the DNS resolver.\n<p><code>address</code> must be a Resolv::IPv4, Resolv::IPv6 or ...\n"],["getnames","Resolv::Hosts","Resolv/Hosts.html#method-i-getnames","(address)","<p>Gets all hostnames for <code>address</code> from the hosts file.\n"],["getopts","OptionParser","OptionParser.html#method-c-getopts","(*args)","<p>See #getopts.\n"],["getopts","OptionParser","OptionParser.html#method-i-getopts","(*args)","<p>Wrapper method for getopts.rb.\n\n<pre>params = ARGV.getopts(&quot;ab:&quot;, &quot;foo&quot;, &quot;bar:&quot;)\n# params[:a] = true   # -a ...</pre>\n"],["getopts","OptionParser::Arguable","OptionParser/Arguable.html#method-i-getopts","(*args)","<p>Substitution of getopts is possible as follows. Also see\nOptionParser#getopts.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">getopts</span>(*<span class=\"ruby-identifier\">args</span>)\n  (<span class=\"ruby-identifier\">$OPT</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["getresource","Resolv::DNS","Resolv/DNS.html#method-i-getresource","(name, typeclass)","<p>Look up the <code>typeclass</code> DNS resource of <code>name</code>.\n<p><code>name</code> must be a Resolv::DNS::Name or a String.\n<p><code>typeclass</code> should ...\n"],["getresources","Resolv::DNS","Resolv/DNS.html#method-i-getresources","(name, typeclass)","<p>Looks up all <code>typeclass</code> DNS resources for <code>name</code>. \nSee #getresource for argument details.\n"],["gets","CSV","CSV.html#method-i-gets","()",""],["getwd","FileUtils","FileUtils.html#method-c-getwd","()",""],["group","Buildr","Buildr.html#method-i-group","(*args)","<p>Convenience method for defining multiple artifacts that belong to the same\ngroup, type and version.  …\n"],["group","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-group","(group_name, *members)","<p>Create a virtual group on this namespace. When the namespace is asked for\nthe <code>who</code> artifact, it’s value …\n"],["group","PrettyPrint","PrettyPrint.html#method-i-group","(indent=0, open_obj='', close_obj='', open_width=open_obj.length, close_width=close_obj.length)","<p>Groups line break hints added in the block. The line break hints are all to\nbe used or not.\n<p>If <code>indent</code> …\n"],["group","PrettyPrint::SingleLine","PrettyPrint/SingleLine.html#method-i-group","(indent=nil, open_obj='', close_obj='', open_width=nil, close_width=nil)",""],["group_path","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-group_path","()",""],["group_sub","PrettyPrint","PrettyPrint.html#method-i-group_sub","()",""],["growl_notify","Object","Object.html#method-i-growl_notify","(type, title, message)",""],["guard","Buildr::TestFramework::TestResult::Error","Buildr/TestFramework/TestResult/Error.html#method-c-guard","(file)",""],["guard_inspect_key","PP::PPMethods","PP/PPMethods.html#method-i-guard_inspect_key","()",""],["guess","Kconv","Kconv.html#method-c-guess","(str)","<p>Guess input encoding by NKF.guess\n"],["guess","OptionParser::Switch","OptionParser/Switch.html#method-c-guess","(arg)","<p>Guesses argument style from <code>arg</code>.  Returns corresponding\nOptionParser::Switch class (OptionalArgument …\n"],["gunzip","Gem","Gem.html#method-c-gunzip","(data)","<p>Zlib::GzipReader wrapper that unzips <code>data</code>.\n"],["gzip","Gem","Gem.html#method-c-gzip","(data)","<p>Zlib::GzipWriter wrapper that zips <code>data</code>.\n"],["h","ERB::Util","ERB/Util.html#method-c-h","(s)",""],["has?","Buildr::Compiler","Buildr/Compiler.html#method-c-has-3F","(name)","<p>Returns true if the specified compiler exists.\n"],["has?","Buildr::TestFramework","Buildr/TestFramework.html#method-c-has-3F","(name)","<p>Returns true if the specified test framework exists.\n"],["has_content?","Buildr::Artifact","Buildr/Artifact.html#method-i-has_content-3F","()",""],["has_mainwindow?","MultiTkIp","MultiTkIp.html#method-i-has_mainwindow-3F","()",""],["has_mainwindow?","MultiTkIp","MultiTkIp.html#method-c-has_mainwindow-3F","()",""],["has_mainwindow?","MultiTkIp","MultiTkIp.html#method-i-has_mainwindow-3F","()",""],["has_mainwindow?","MultiTkIp","MultiTkIp.html#method-c-has_mainwindow-3F","()",""],["has_mainwindow?","RemoteTkIp","RemoteTkIp.html#method-i-has_mainwindow-3F","()",""],["hash","IPAddr","IPAddr.html#method-i-hash","()","<p>Returns a hash value used by Hash, Set, and Array classes\n"],["hash","Matrix","Matrix.html#method-i-hash","()","<p>Returns a hash-code for the matrix.\n"],["hash","Vector","Vector.html#method-i-hash","()","<p>Return a hash-code for the vector.\n"],["hash_to_file_name","Buildr::Artifact","Buildr/Artifact.html#method-c-hash_to_file_name","(hash)","<p>Convert a hash spec to a file name.\n"],["have_const","Object","Object.html#method-i-have_const","(const, headers = nil, opt = \"\", &b)","<p>Returns whether or not the constant <code>const</code> is defined.  You may\noptionally pass the <code>type</code> of <code>const</code> as  …\n"],["have_framework","Object","Object.html#method-i-have_framework","(fw, &b)","<p>Returns whether or not the given <code>framework</code> can be found on\nyour system. If found, a macro is passed as …\n"],["have_func","Object","Object.html#method-i-have_func","(func, headers = nil, &b)","<p>Returns whether or not the function <code>func</code> can be found in the\ncommon header files, or within any <code>headers</code> …\n"],["have_header","Object","Object.html#method-i-have_header","(header, preheaders = nil, &b)","<p>Returns whether or not the given <code>header</code> file can be found on\nyour system. If found, a macro is passed …\n"],["have_library","Object","Object.html#method-i-have_library","(lib, func = nil, headers = nil, &b)","<p>Returns whether or not the given entry point <code>func</code> can be found\nwithin <code>lib</code>.  If <code>func</code> is nil, the ‘main()’ …\n"],["have_macro","Object","Object.html#method-i-have_macro","(macro, headers = nil, opt = \"\", &b)","<p>Returns whether or not <code>macro</code> is defined either in the common\nheader files or within any <code>headers</code> you provide. …\n"],["have_struct_member","Object","Object.html#method-i-have_struct_member","(type, member, headers = nil, &b)","<p>Returns whether or not the struct of type <code>type</code> contains\n<code>member</code>.  If it does not, or the struct type can’t …\n"],["have_type","Object","Object.html#method-i-have_type","(type, headers = nil, opt = \"\", &b)","<p>Returns whether or not the static type <code>type</code> is defined.  You\nmay optionally pass additional <code>headers</code> to …\n"],["have_var","Object","Object.html#method-i-have_var","(var, headers = nil, &b)","<p>Returns whether or not the variable <code>var</code> can be found in the\ncommon header files, or within any <code>headers</code> …\n"],["header?","CSV::Row","CSV/Row.html#method-i-header-3F","(name)","<p>Returns <code>true</code> if <code>name</code> is a header for this row,\nand <code>false</code> otherwise.\n"],["header_convert","CSV","CSV.html#method-i-header_convert","(name = nil, &converter)","<p>Identical to CSV#convert(), but for header rows.\n<p>Note that this method must be called before header rows …\n"],["header_converters","CSV","CSV.html#method-i-header_converters","()","<p>Returns the current list of converters in effect for headers.  See CSV::new\nfor details.  Built-in converters …\n"],["header_row?","CSV","CSV.html#method-i-header_row-3F","()","<p>Returns <code>true</code> if the next row read will be a header row.\n"],["header_row?","CSV::Row","CSV/Row.html#method-i-header_row-3F","()","<p>Returns <code>true</code> if this is a header row.\n"],["headers","CSV","CSV.html#method-i-headers","()","<p>Returns <code>nil</code> if headers will not be used, <code>true</code> if\nthey will but have not yet been read, or the actual …\n"],["headers","CSV::Row","CSV/Row.html#method-i-headers","()","<p>Returns the headers of this row.\n"],["headers","CSV::Table","CSV/Table.html#method-i-headers","()","<p>Returns the headers for the first row of this table (assumed to match all\nother rows).  An empty Array …\n"],["help","Buildr","Buildr.html#method-c-help","(&block)",""],["help","Buildr","Buildr.html#method-i-help","(&block)","<p>Use this to enhance the help task, e.g. to print some important information\nabout your build, configuration …\n"],["help","Object","Object.html#method-i-help","()","<p>Display help message.\n\n<pre>ruby -run -e help [COMMAND]</pre>\n"],["help","OptionParser","OptionParser.html#method-i-help","()","<p>Returns option summary string.\n"],["hermitian?","Matrix","Matrix.html#method-i-hermitian-3F","()","<p>Returns <code>true</code> is this is an hermitian matrix. Raises an error\nif matrix is not square.\n"],["hex","SecureRandom","SecureRandom.html#method-c-hex","(n=nil)","<p>SecureRandom.hex generates a random hex string.\n<p>The argument <em>n</em> specifies the length of the random length. …\n"],["hidden_cmds","MultiTkIp","MultiTkIp.html#method-c-hidden_cmds","(slave = '')",""],["hidden_cmds","MultiTkIp","MultiTkIp.html#method-i-hidden_cmds","(slave = '')",""],["hidden_cmds","MultiTkIp","MultiTkIp.html#method-c-hidden_cmds","(slave = '')",""],["hidden_cmds","MultiTkIp","MultiTkIp.html#method-i-hidden_cmds","(slave = '')",""],["hide_cmd","MultiTkIp","MultiTkIp.html#method-c-hide_cmd","(slave, cmd, aliasname = nil)",""],["hide_cmd","MultiTkIp","MultiTkIp.html#method-i-hide_cmd","(slave, cmd, aliasname = nil)",""],["hide_cmd","MultiTkIp","MultiTkIp.html#method-c-hide_cmd","(slave, cmd, aliasname = nil)",""],["hide_cmd","MultiTkIp","MultiTkIp.html#method-i-hide_cmd","(slave, cmd, aliasname = nil)",""],["home","Java","Java.html#method-c-home","()","<p><strong>Deprecated:</strong> Use ENV instead\n"],["host","Gem","Gem.html#method-c-host","()","<p>Get the default RubyGems API host. This is normally\n<code>https://rubygems.org</code>.\n"],["host=","Gem","Gem.html#method-c-host-3D","(host)","<p>Set the default RubyGems API host.\n"],["html_escape","ERB::Util","ERB/Util.html#method-c-html_escape","(s)","<p>A utility method for escaping HTML tag characters in <em>s</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;erb&quot;</span>\n<span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ERB</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Util</span>\n\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-identifier\">html_escape</span>(<span class=\"ruby-string\">&quot;is ...\n</span></pre>\n"],["hton","IPAddr","IPAddr.html#method-i-hton","()","<p>Returns a network byte ordered string form of the IP address.\n"],["http","Buildr::Options::Proxies","Buildr/Options/Proxies.html#method-i-http","()","<p>Returns the HTTP_PROXY URL.\n"],["http=","Buildr::Options::Proxies","Buildr/Options/Proxies.html#method-i-http-3D","(url)","<p>Sets the HTTP_PROXY URL.\n"],["httpd","Object","Object.html#method-i-httpd","()","<p>Run WEBrick HTTP server.\n\n<pre>ruby -run -e httpd -- [OPTION] DocumentRoot\n\n--bind-address=ADDR         address ...</pre>\n"],["httpdate","Time","Time.html#method-c-httpdate","(date)","<p>Parses <code>date</code> as HTTP-date defined by RFC 2616 and converts it\nto a Time object.\n<p>ArgumentError is raised …\n"],["httpdate","Time","Time.html#method-i-httpdate","()","<p>Returns a string which represents the time as rfc1123-date of HTTP-date\ndefined by RFC 2616:\n\n<pre>day-of-week, ...</pre>\n"],["https","Buildr::Options::Proxies","Buildr/Options/Proxies.html#method-i-https","()","<p>Returns the HTTPS_PROXY URL.\n"],["https=","Buildr::Options::Proxies","Buildr/Options/Proxies.html#method-i-https-3D","(url)","<p>Sets the HTTPS_PROXY URL.\n"],["human","ProgressBar","ProgressBar.html#method-i-human","(bytes)",""],["id","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-id","()",""],["id","Buildr::Package","Buildr/Package.html#method-i-id","()","<p>The project’s identifier. Same as the project name, with colons replaced by\ndashes. The ID for project …\n"],["identical?","FileUtils","FileUtils.html#method-c-identical-3F","(a, b)",""],["identity","Matrix","Matrix.html#method-c-identity","(n)","<p>Creates an <code>n</code> by <code>n</code> identity matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">identity</span>(<span class=\"ruby-value\">2</span>)\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span> <span class=\"ruby-value\">0</span>\n     <span class=\"ruby-value\">0</span> <span class=\"ruby-value\">1</span>\n</pre>\n"],["imag","Matrix","Matrix.html#method-i-imag","()",""],["image_obj","TkComm","TkComm.html#method-c-image_obj","(val)",""],["imaginary","Matrix","Matrix.html#method-i-imaginary","()","<p>Returns the imaginary part of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>), <span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-value\">1</span>), <span class=\"ruby-value\">0</span>], [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span><span class=\"ruby-operator\">+</span><span class=\"ruby-value\">2</span><span class=\"ruby-identifier\">i</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["iml","Buildr::IntellijIdea::ProjectExtension","Buildr/IntellijIdea/ProjectExtension.html#method-i-iml","()",""],["iml?","Buildr::IntellijIdea::ProjectExtension","Buildr/IntellijIdea/ProjectExtension.html#method-i-iml-3F","()",""],["import","Java::JavaWrapper","Java/JavaWrapper.html#method-i-import","(class_name)","<p><strong>Deprecated:</strong> Use Java.pkg.pkg.ClassName to import a Java\nclass.\n"],["in_service?","GServer","GServer.html#method-c-in_service-3F","(port, host = DEFAULT_HOST)","<p>Check if a server is running on the given port and host\n<p>port &mdash; port, as a FixNum, of the server to check …\n"],["inc","OptionParser","OptionParser.html#method-c-inc","(arg, default = nil)","<p>Returns an incremented value of <code>default</code> according to\n<code>arg</code>.\n"],["inc","OptionParser","OptionParser.html#method-i-inc","(*args)",""],["inc","ProgressBar","ProgressBar.html#method-i-inc","(count)",""],["include","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-include","(*files)","<p>Include files in this archive, or when called on a path, within that path.\nReturns self.\n<p>The first form …\n"],["include","Buildr::ArchiveTask::Merge","Buildr/ArchiveTask/Merge.html#method-i-include","(*files)",""],["include","Buildr::ArtifactSearch","Buildr/ArtifactSearch.html#method-i-include","(method = nil)",""],["include","Buildr::Doc::DocTask","Buildr/Doc/DocTask.html#method-i-include","(*files)","<p>Includes additional source files and directories when generating the\ndocumentation and returns self. …\n"],["include","Buildr::Filter","Buildr/Filter.html#method-i-include","(*files)","<p>Specifies files to include and returns self. See FileList#include.\n<p>By default all files are included. …\n"],["include","Buildr::ResourcesTask","Buildr/ResourcesTask.html#method-i-include","(*files)","<p>Includes the specified files in the filter and returns self.\n"],["include","Buildr::TestTask","Buildr/TestTask.html#method-i-include","(*names)","<p>Include only the specified tests. Unless specified, the default is to\ninclude all tests identified by …\n"],["include","Buildr::TestTask","Buildr/TestTask.html#method-c-include","(includes)","<p>Used by the test/integration to include specific tests\n"],["include","Buildr::Unzip","Buildr/Unzip.html#method-i-include","(*files)","<p>Include all files that match the patterns and returns self.\n<p>Use include if you only want to unzip some …\n"],["include?","Buildr::TestTask","Buildr/TestTask.html#method-i-include-3F","(name)","<p>Returns true if the specified test name matches the inclusion/exclusion\npattern. Used to determine which …\n"],["include?","CSV::Row","CSV/Row.html#method-i-include-3F","(name)",""],["include?","IPAddr","IPAddr.html#method-i-include-3F","(other)","<p>Returns true if the given ipaddr is in the range.\n<p>e.g.:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'ipaddr'</span>\n<span class=\"ruby-identifier\">net1</span> = <span class=\"ruby-constant\">IPAddr</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;192.168.2.0/24&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["include?","Set","Set.html#method-i-include-3F","(o)","<p>Returns true if the set contains the given object.\n"],["included","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-c-included","(mod)",""],["included?","Buildr::Unzip","Buildr/Unzip.html#method-i-included-3F","(entry_name)","<p>reads the includes/excludes and apply them to the entry_name\n"],["incompatible_argument_styles","OptionParser::Switch","OptionParser/Switch.html#method-c-incompatible_argument_styles","(arg, t)",""],["incompatible_argument_styles","OptionParser::Switch::NoArgument","OptionParser/Switch/NoArgument.html#method-c-incompatible_argument_styles","(*)",""],["incremental","Buildr::Scala::ScalacOptions","Buildr/Scala/ScalacOptions.html#method-i-incremental","()",""],["index","CSV::Row","CSV/Row.html#method-i-index","(header, minimum_index = 0)","<p>This method will return the index of a field with the provided\n<code>header</code>. The <code>offset</code> can be used to locate …\n"],["index","Matrix","Matrix.html#method-i-index","(*args)","<p>The index method is specialized to return the index as [row, column] It\nalso accepts an optional <code>selector</code> …\n"],["inflate","Gem","Gem.html#method-c-inflate","(data)","<p>A Zlib::Inflate#inflate wrapper\n"],["info","Logger","Logger.html#method-i-info","(progname = nil, &block)","<p>Log an <code>INFO</code> message.\n<p>message &mdash; the message to log; does not need to be a String\n<p>progname &mdash; in the block form, …\n"],["info","Object","Object.html#method-i-info","(message)","<p>Show optional information.  The message is printed only when running in\nverbose mode (the default).\n"],["info?","Logger","Logger.html#method-i-info-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>INFO</code> messages.\n"],["inherited","MultiTkIp","MultiTkIp.html#method-c-inherited","(subclass)",""],["inherited","MultiTkIp","MultiTkIp.html#method-c-inherited","(subclass)",""],["init_ip_env","MultiTkIp","MultiTkIp.html#method-c-init_ip_env","(script = Proc.new)",""],["init_ip_env","MultiTkIp","MultiTkIp.html#method-c-init_ip_env","(script = Proc.new)",""],["init_ip_internal","MultiTkIp","MultiTkIp.html#method-c-init_ip_internal","()",""],["init_ip_internal","MultiTkIp","MultiTkIp.html#method-c-init_ip_internal","()",""],["initial_components","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-initial_components","()",""],["initial_components","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-initial_components","()",""],["initialize_copy","Buildr::Layout","Buildr/Layout.html#method-i-initialize_copy","(copy)",""],["initialize_copy","OpenStruct","OpenStruct.html#method-i-initialize_copy","(orig)","<p>Duplicate an OpenStruct object members.\n"],["initialize_copy","Set","Set.html#method-i-initialize_copy","(orig)","<p>Copy internal hash.\n"],["inject_component","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-inject_component","(doc, component)","<p>replace overridden component (if any) with specified component\n"],["inject_components","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-inject_components","(doc, components)",""],["inner_product","Vector","Vector.html#method-i-inner_product","(v)","<p>Returns the inner product of this vector with the other.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Vector</span>[<span class=\"ruby-value\">4</span>,<span class=\"ruby-value\">7</span>].<span class=\"ruby-identifier\">inner_product</span> <span class=\"ruby-constant\">Vector</span>[<span class=\"ruby-value\">10</span>,<span class=\"ruby-value\">1</span>]  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">47</span>\n</pre>\n"],["inspect","CSV","CSV.html#method-i-inspect","()","<p>Returns a simplified description of the key CSV attributes in an ASCII\ncompatible String.\n"],["inspect","CSV::Row","CSV/Row.html#method-i-inspect","()","<p>A summary of fields, by header, in an ASCII compatible String.\n"],["inspect","CSV::Table","CSV/Table.html#method-i-inspect","()","<p>Shows the mode and size of this table in a US-ASCII String.\n"],["inspect","IPAddr","IPAddr.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of the ipaddr.\n(“#&lt;IPAddr: family: …\n"],["inspect","IRB::Irb","IRB/Irb.html#method-i-inspect","()",""],["inspect","Matrix","Matrix.html#method-i-inspect","()","<p>Overrides Object#inspect\n"],["inspect","MultiTkIp","MultiTkIp.html#method-i-inspect","()",""],["inspect","MultiTkIp","MultiTkIp.html#method-i-inspect","()",""],["inspect","OpenStruct","OpenStruct.html#method-i-inspect","()","<p>Returns a string containing a detailed summary of the keys and values.\n"],["inspect","OptionParser::ParseError","OptionParser/ParseError.html#method-i-inspect","()",""],["inspect","Set","Set.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of the set.\n(“#&lt;Set: {element1, element2, …\n"],["inspect","Shell","Shell.html#method-i-inspect","()",""],["inspect","TkCore","TkCore.html#method-i-inspect","()",""],["inspect","TkCore","TkCore.html#method-c-inspect","()",""],["inspect","Vector","Vector.html#method-i-inspect","()","<p>Overrides Object#inspect\n"],["install","Buildr","Buildr.html#method-i-install","(*args, &block)","<p>Installs the specified artifacts in the local repository as part of the\ninstall task.\n<p>You can use this …\n"],["install","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-install","()",""],["install","FileUtils","FileUtils.html#method-c-install","(src, dest, options = {})","<p>Options: mode preserve noop verbose\n<p>If <code>src</code> is not same as <code>dest</code>, copies it and changes\nthe permission mode …\n"],["install","Object","Object.html#method-i-install","()","<p>Copy SOURCE to DEST.\n\n<pre>ruby -run -e install -- [OPTION] SOURCE DEST\n\n-p          apply access/modification ...</pre>\n"],["install_cmd","TkComm","TkComm.html#method-c-install_cmd","(cmd, local_cmdtbl=nil)",""],["install_cmd","TkComm","TkComm.html#method-i-install_cmd","(cmd)","<p>private :install_cmd, :uninstall_cmd module_function :install_cmd,\n:uninstall_cmd\n"],["install_system_commands","Shell","Shell.html#method-c-install_system_commands","(pre = \"sys_\")",""],["installed?","Buildr::Scala::Scalac","Buildr/Scala/Scalac.html#method-c-installed-3F","()",""],["installed_version","Buildr::Scala","Buildr/Scala.html#method-c-installed_version","()",""],["installed_version","Buildr::Scala","Buildr/Scala.html#method-c-installed_version","()",""],["instance","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-c-instance","(name = nil)","<p>Obtain an instance for the given name\n"],["instance","CSV","CSV.html#method-c-instance","(data = $stdout, options = Hash.new)","<p>This method will return a CSV instance, just like CSV::new(), but the\ninstance will be cached and returned …\n"],["instance","Prime","Prime.html#method-c-instance","()","<p>Returns the default instance of Prime.\n"],["instance_delegate","Forwardable","Forwardable.html#method-i-instance_delegate","(hash)","<p>Takes a hash as its argument.  The key is a symbol or an array of symbols. \nThese symbols correspond …\n"],["int_from_prime_division","Prime","Prime.html#method-i-int_from_prime_division","(pd)","<p>Re-composes a prime factorization and returns the product.\n<p>Parameters\n<p>pd &mdash; Array of pairs of integers. The …\n"],["integration","Buildr","Buildr.html#method-i-integration","(*deps, &block)","<p>Use this method to return the integration tests task.\n"],["integration","Buildr::Test","Buildr/Test.html#method-i-integration","(*deps, &block)","<p>Use this method to return the integration tests task, or enhance it with a\nblock to execute.\n<p>There is …\n"],["interrupt","DEBUGGER__","DEBUGGER__.html#method-c-interrupt","()",""],["intersection","Set","Set.html#method-i-intersection","(enum)",""],["into","Buildr::CompileTask","Buildr/CompileTask.html#method-i-into","(path)","<p>Sets the target directory and returns self. This will also set the compile\ntask as a prerequisite to …\n"],["into","Buildr::Doc::DocTask","Buildr/Doc/DocTask.html#method-i-into","(path)","<p>Sets the target directory and returns self. This will also set the Javadoc\ntask as a prerequisite to …\n"],["into","Buildr::Filter","Buildr/Filter.html#method-i-into","(dir)","<p>Sets the target directory into which files are copied and returns self.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">filter</span>.<span class=\"ruby-identifier\">from</span>(<span class=\"ruby-string\">'src'</span>).<span class=\"ruby-identifier\">into</span>(<span class=\"ruby-string\">'target'</span>).<span class=\"ruby-identifier\">using</span>(<span class=\"ruby-string\">'build'</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>)\n</pre>\n"],["inv","Matrix","Matrix.html#method-i-inv","()",""],["invalid_namespace?","MultiTkIp","MultiTkIp.html#method-c-invalid_namespace-3F","()",""],["invalid_namespace?","MultiTkIp","MultiTkIp.html#method-i-invalid_namespace-3F","()",""],["invalid_namespace?","MultiTkIp","MultiTkIp.html#method-c-invalid_namespace-3F","()",""],["invalid_namespace?","MultiTkIp","MultiTkIp.html#method-i-invalid_namespace-3F","()",""],["invalid_namespace?","RemoteTkIp","RemoteTkIp.html#method-i-invalid_namespace-3F","()",""],["inverse","Matrix","Matrix.html#method-i-inverse","()","<p>Returns the inverse of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">-1</span>, <span class=\"ruby-value\">-1</span>], [<span class=\"ruby-value\">0</span>, <span class=\"ruby-value\">-1</span>]].<span class=\"ruby-identifier\">inverse</span>\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">-1</span>  <span class=\"ruby-value\">1</span>\n      <span class=\"ruby-value\">0</span> <span class=\"ruby-operator\">-</span><span class=\"ruby-value\">1</span>\n</pre>\n"],["invoke_hidden","MultiTkIp","MultiTkIp.html#method-i-invoke_hidden","(slave, cmd, *args)",""],["invoke_hidden","MultiTkIp","MultiTkIp.html#method-c-invoke_hidden","(slave, cmd, *args)",""],["invoke_hidden","MultiTkIp","MultiTkIp.html#method-c-invoke_hidden","(slave, cmd, *args)",""],["invoke_hidden","MultiTkIp","MultiTkIp.html#method-i-invoke_hidden","(slave, cmd, *args)",""],["invoke_hidden_on_global","MultiTkIp","MultiTkIp.html#method-c-invoke_hidden_on_global","(slave, cmd, *args)",""],["invoke_hidden_on_global","MultiTkIp","MultiTkIp.html#method-i-invoke_hidden_on_global","(slave, cmd, *args)",""],["invoke_hidden_on_global","MultiTkIp","MultiTkIp.html#method-c-invoke_hidden_on_global","(slave, cmd, *args)",""],["invoke_hidden_on_global","MultiTkIp","MultiTkIp.html#method-i-invoke_hidden_on_global","(slave, cmd, *args)",""],["invoke_hidden_on_namespace","MultiTkIp","MultiTkIp.html#method-i-invoke_hidden_on_namespace","(slave, ns, cmd, *args)",""],["invoke_hidden_on_namespace","MultiTkIp","MultiTkIp.html#method-c-invoke_hidden_on_namespace","(slave, ns, cmd, *args)",""],["invoke_hidden_on_namespace","MultiTkIp","MultiTkIp.html#method-c-invoke_hidden_on_namespace","(slave, ns, cmd, *args)",""],["invoke_hidden_on_namespace","MultiTkIp","MultiTkIp.html#method-i-invoke_hidden_on_namespace","(slave, ns, cmd, *args)",""],["ip6_arpa","IPAddr","IPAddr.html#method-i-ip6_arpa","()","<p>Returns a string for DNS reverse lookup compatible with RFC3172.\n"],["ip6_int","IPAddr","IPAddr.html#method-i-ip6_int","()","<p>Returns a string for DNS reverse lookup compatible with RFC1886.\n"],["ip_name","MultiTkIp","MultiTkIp.html#method-c-ip_name","()",""],["ip_name","MultiTkIp","MultiTkIp.html#method-i-ip_name","()",""],["ip_name","MultiTkIp","MultiTkIp.html#method-i-ip_name","()",""],["ip_name","MultiTkIp","MultiTkIp.html#method-c-ip_name","()",""],["ipr","Buildr::IntellijIdea::ProjectExtension","Buildr/IntellijIdea/ProjectExtension.html#method-i-ipr","()",""],["ipr?","Buildr::IntellijIdea::ProjectExtension","Buildr/IntellijIdea/ProjectExtension.html#method-i-ipr-3F","()",""],["ipv4?","IPAddr","IPAddr.html#method-i-ipv4-3F","()","<p>Returns true if the ipaddr is an IPv4 address.\n"],["ipv4_compat","IPAddr","IPAddr.html#method-i-ipv4_compat","()","<p>Returns a new ipaddr built by converting the native IPv4 address into an\nIPv4-compatible IPv6 address. …\n"],["ipv4_compat?","IPAddr","IPAddr.html#method-i-ipv4_compat-3F","()","<p>Returns true if the ipaddr is an IPv4-compatible IPv6 address.\n"],["ipv4_mapped","IPAddr","IPAddr.html#method-i-ipv4_mapped","()","<p>Returns a new ipaddr built by converting the native IPv4 address into an\nIPv4-mapped IPv6 address.\n"],["ipv4_mapped?","IPAddr","IPAddr.html#method-i-ipv4_mapped-3F","()","<p>Returns true if the ipaddr is an IPv4-mapped IPv6 address.\n"],["ipv6?","IPAddr","IPAddr.html#method-i-ipv6-3F","()","<p>Returns true if the ipaddr is an IPv6 address.\n"],["ipv6only!","Socket","Socket.html#method-i-ipv6only-21","()","<p>enable the socket option IPV6_V6ONLY if IPV6_V6ONLY is available.\n"],["irb_abort","IRB","IRB.html#method-c-irb_abort","(irb, exception = Abort)",""],["irb_at_exit","IRB","IRB.html#method-c-irb_at_exit","()",""],["irb_exit","IRB","IRB.html#method-c-irb_exit","(irb, ret)",""],["is_rubytk?","RemoteTkIp","RemoteTkIp.html#method-i-is_rubytk-3F","()",""],["iseuc","Kconv","Kconv.html#method-c-iseuc","(str)","<p>Returns whether input encoding is EUC-JP or not.\n<p><strong>Note</strong> don't expect this return value is MatchData.\n"],["iseuc","String","String.html#method-i-iseuc","()","<p>Returns whether <code>self</code>‘s encoding is EUC-JP or not.\n"],["isjis","Kconv","Kconv.html#method-c-isjis","(str)","<p>Returns whether input encoding is ISO-2022-JP or not.\n"],["isjis","String","String.html#method-i-isjis","()","<p>Returns whether <code>self</code>‘s encoding is ISO-2022-JP or not.\n"],["iso8601","Time","Time.html#method-i-iso8601","(fraction_digits=0)",""],["iso8601","Time","Time.html#method-c-iso8601","(date)",""],["issjis","Kconv","Kconv.html#method-c-issjis","(str)","<p>Returns whether input encoding is Shift_JIS or not.\n"],["issjis","String","String.html#method-i-issjis","()","<p>Returns whether <code>self</code>‘s encoding is Shift_JIS or not.\n"],["isutf8","Kconv","Kconv.html#method-c-isutf8","(str)","<p>Returns whether input encoding is UTF-8 or not.\n"],["isutf8","String","String.html#method-i-isutf8","()","<p>Returns whether <code>self</code>‘s encoding is UTF-8 or not.\n"],["jar_path","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-jar_path","(path)",""],["java","Java","Java.html#method-c-java","(*args, &block)","<p><strong>Deprecated</strong>: Use Java::Commands.java instead.\n"],["java","Java::Commands","Java/Commands.html#method-c-java","(*args, &block)","<p>Runs Java with the specified arguments.\n<p>Each argument should be provided as separate array value, e.g. …\n"],["java_args","Buildr::Shell::ShellTask","Buildr/Shell/ShellTask.html#method-i-java_args","()",""],["java_args","Java::Options","Java/Options.html#method-i-java_args","()","<p><strong>Deprecated:</strong> Use ENV instead.\n"],["java_args=","Java::Options","Java/Options.html#method-i-java_args-3D","(args)","<p><strong>Deprecated:</strong> Use ENV instead.\n"],["java_platform?","Buildr::Util","Buildr/Util.html#method-i-java_platform-3F","()",""],["javac","Java","Java.html#method-c-javac","(*args)","<p><strong>Deprecated</strong>: Use Java::Commands.javac instead.\n"],["javac","Java::Commands","Java/Commands.html#method-c-javac","(*args)","<p>Runs Javac with the specified arguments.\n<p>The last argument may be a Hash with additional options:\n<p>:output …\n"],["javadoc","Buildr::Doc","Buildr/Doc.html#method-i-javadoc","(*sources, &block)",""],["javadoc","Java","Java.html#method-c-javadoc","(*args)","<p><strong>Deprecated</strong>: Use Java::Commands.javadoc instead.\n"],["javadoc","Java::Commands","Java/Commands.html#method-c-javadoc","(*args)","<p>Runs Javadocs with the specified files and options.\n<p>This method accepts the following special options: …\n"],["javadoc_artifact","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-javadoc_artifact","()","<p>Convenience method that returns the associated javadoc artifact\n"],["jdk_version","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-jdk_version","()",""],["jdk_version","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-jdk_version","()",""],["jobs","Shell","Shell.html#method-i-jobs","()","<p>process management\n"],["join","GServer","GServer.html#method-i-join","()","<p>Join with the server thread\n"],["join","Pathname","Pathname.html#method-i-join","(*args)","<p>Pathname#join joins pathnames.\n<p><code>path0.join(path1, ..., pathN)</code> is the same as <code>path0 +\npath1 + ... + path</code> ...\n"],["join","Shellwords","Shellwords.html#method-c-join","(array)",""],["join","ThreadsWait","ThreadsWait.html#method-i-join","(*threads)","<p>Waits for specified threads to terminate, and returns when one of the\nthreads terminated.\n"],["join","ThreadsWait","ThreadsWait.html#method-i-join","(*threads)","<p>Waits for specified threads to terminate, and returns when one of the\nthreads terminated.\n"],["join_nowait","ThreadsWait","ThreadsWait.html#method-i-join_nowait","(*threads)","<p>Specifies the threads that this object will wait for, but does not actually\nwait.\n"],["join_nowait","ThreadsWait","ThreadsWait.html#method-i-join_nowait","(*threads)","<p>Specifies the threads that this object will wait for, but does not actually\nwait.\n"],["jrebel_args","Buildr::JRebel","Buildr/JRebel.html#method-i-jrebel_args","()",""],["jrebel_home","Buildr::JRebel","Buildr/JRebel.html#method-i-jrebel_home","()",""],["jrebel_props","Buildr::JRebel","Buildr/JRebel.html#method-i-jrebel_props","(project)",""],["jruby","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-i-jruby","(*args)",""],["jruby_artifact","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-c-jruby_artifact","()",""],["jruby_gem","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-i-jruby_gem","()",""],["jruby_home","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-i-jruby_home","()",""],["jruby_installed?","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-i-jruby_installed-3F","()",""],["kconv","Kconv","Kconv.html#method-c-kconv","(str, to_enc, from_enc=nil)","<p>Convert <code>str</code> to <code>to_enc</code>. <code>to_enc</code> and\n<code>from_enc</code> are given as constants of Kconv or Encoding objects.\n"],["kconv","String","String.html#method-i-kconv","(to_enc, from_enc=nil)","<p>Convert <code>self</code> to <code>to_enc</code>. <code>to_enc</code> and\n<code>from_enc</code> are given as constants of Kconv or Encoding objects.\n"],["keep_if","Set","Set.html#method-i-keep_if","()","<p>Deletes every element of the set for which block evaluates to false, and\nreturns self.\n"],["key?","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-key-3F","(name, include_parents = false)",""],["keys","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-keys","()",""],["kill","Shell","Shell.html#method-i-kill","(sig, command)",""],["language","Buildr::CompileTask","Buildr/CompileTask.html#method-i-language","()","<p>Returns the compiled language, if known.  See also #compiler.\n"],["last_error","Fiddle","Fiddle.html#method-c-last_error","()","<p>Returns the last <code>Error</code> of the current executing\n<code>Thread</code> or nil if none\n"],["last_error=","Fiddle","Fiddle.html#method-c-last_error-3D","(error)","<p>Sets the last <code>Error</code> of the current executing\n<code>Thread</code> to <code>error</code>\n"],["last_failures","Buildr::TestTask","Buildr/TestTask.html#method-i-last_failures","()","<p>We read the last test failures if any and return them.\n"],["last_modified","OpenURI::Meta","OpenURI/Meta.html#method-i-last_modified","()","<p>returns a Time that represents the Last-Modified field.\n"],["latest_load_paths","Gem","Gem.html#method-c-latest_load_paths","()","<p>Return a list of all possible load paths for the latest version for all\ngems in the Gem installation. …\n"],["latest_rubygems_version","Gem","Gem.html#method-c-latest_rubygems_version","()",""],["latest_spec_for","Gem","Gem.html#method-c-latest_spec_for","(name)",""],["latest_version_for","Gem","Gem.html#method-c-latest_version_for","(name)",""],["launch","Buildr::Groovy::GroovySH","Buildr/Groovy/GroovySH.html#method-i-launch","(task)",""],["launch","Buildr::Run::Base","Buildr/Run/Base.html#method-i-launch","()",""],["launch","Buildr::Scala::ScalaShell","Buildr/Scala/ScalaShell.html#method-i-launch","(task)",""],["launch","Buildr::Shell::Base","Buildr/Shell/Base.html#method-i-launch","(task)",""],["launch","Buildr::Shell::BeanShell","Buildr/Shell/BeanShell.html#method-i-launch","(task)",""],["launch","Buildr::Shell::Clojure","Buildr/Shell/Clojure.html#method-i-launch","(task)",""],["launch","Buildr::Shell::JIRB","Buildr/Shell/JIRB.html#method-i-launch","(task)",""],["layout","Buildr::Project","Buildr/Project.html#method-i-layout","()","<p>Returns the layout associated with this project.\n"],["layout=","Buildr::Project","Buildr/Project.html#method-i-layout-3D","(layout)","<p>Sets the project layout.  Accepts Layout object or class (or for that\nmatter, anything that can expand). …\n"],["length","Queue","Queue.html#method-i-length","()","<p>Returns the length of the queue.\n"],["length","Set","Set.html#method-i-length","()",""],["length","Tempfile","Tempfile.html#method-i-length","()",""],["level=","Logger::Application","Logger/Application.html#method-i-level-3D","(level)","<p>Set the logging threshold, just like <code>Logger#level=</code>.\n"],["line_at","DEBUGGER__","DEBUGGER__.html#method-i-line_at","(file, line)",""],["link","FileUtils","FileUtils.html#method-c-link","(src, dest, options = {})",""],["list","Buildr::Artifact","Buildr/Artifact.html#method-c-list","()","<p>Returns an array of specs for all the registered artifacts. (Anything\ncreated from artifact, or package). …\n"],["list","TkComm","TkComm.html#method-c-list","(val, depth=0, enc=true)","<p>### –&gt; definition is moved to TkUtil module def _symbolkey2str(keys)\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = {}\n<span class=\"ruby-identifier\">keys</span>.<span class=\"ruby-identifier\">each</span>{<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">key</span>,<span class=\"ruby-identifier\">value</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["listen","Addrinfo","Addrinfo.html#method-i-listen","(backlog=5)","<p>creates a listening socket bound to self.\n"],["ln","FileUtils","FileUtils.html#method-c-ln","(src, dest, options = {})","<p>Options: force noop verbose\n<p><strong><code>ln(old, new, options = {})</code></strong>\n<p>Creates a hard link <code>new</code> which points to <code>old</code>. If …\n"],["ln","Object","Object.html#method-i-ln","()","<p>Create a link to the specified TARGET with LINK_NAME.\n\n<pre>ruby -run -e ln -- [OPTION] TARGET LINK_NAME\n\n-s ...</pre>\n"],["ln_s","FileUtils","FileUtils.html#method-c-ln_s","(src, dest, options = {})","<p>Options: force noop verbose\n<p><strong><code>ln_s(old, new, options = {})</code></strong>\n<p>Creates a symbolic link <code>new</code> which points to <code>old</code> …\n"],["ln_sf","FileUtils","FileUtils.html#method-c-ln_sf","(src, dest, options = {})","<p>Options: noop verbose\n<p>Same as\n\n<pre>#ln_s(src, dest, :force)</pre>\n"],["load","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-c-load","(namespaces = {})","<p>Populate namespaces from a hash of hashes. The following example uses the\nprofiles yaml to achieve this. …\n"],["load","Buildr::POM","Buildr/POM.html#method-c-load","(source)","<p>Load new POM object form various kind of sources such as artifact, hash\nrepresenting spec, filename, …\n"],["load","CSV","CSV.html#method-c-load","(io_or_str, options = Hash.new)","<p>This method is the reading counterpart to CSV::dump().  See that method for\na detailed description of …\n"],["load","Java","Java.html#method-c-load","()","<p>Loads the JVM and all the libraries listed on the classpath.  Call this\nmethod before accessing any  …\n"],["load","Java::JavaWrapper","Java/JavaWrapper.html#method-i-load","()","<p><strong>Deprecated:</strong> Use Java.load instead.\n"],["load","OptionParser","OptionParser.html#method-i-load","(filename = nil)","<p>Loads options from file names as <code>filename</code>. Does nothing when\nthe file is not present. Returns whether …\n"],["load","Psych","Psych.html#method-c-load","(yaml, filename = nil)","<p>Load <code>yaml</code> in to a Ruby data structure.  If multiple documents\nare provided, the object contained in the …\n"],["load","Syck","Syck.html#method-c-load","( io )","<p>Load a document from the current <em>io</em> stream.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">open</span>( <span class=\"ruby-string\">'animals.yaml'</span> ) { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">yf</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-constant\">YAML</span><span class=\"ruby-operator\">::</span><span class=\"ruby-identifier\">load</span>( <span class=\"ruby-identifier\">yf</span> ) }\n   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n"],["load_document","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-load_document","(filename)",""],["load_documents","Syck","Syck.html#method-c-load_documents","( io, &doc_proc )","<p>Calls <em>block</em> with each consecutive document in the YAML stream\ncontained in <em>io</em>.\n\n<pre>File.open( 'many-docs.yaml' ...</pre>\n"],["load_env_plugins","Gem","Gem.html#method-c-load_env_plugins","()","<p>Find all ‘rubygems_plugin’ files in $LOAD_PATH and load them\n"],["load_file","Psych","Psych.html#method-c-load_file","(filename)","<p>Load the document contained in <code>filename</code>.  Returns the yaml\ncontained in <code>filename</code> as a ruby object\n"],["load_file","Syck","Syck.html#method-c-load_file","( filepath )","<p>Load a document from the file located at <em>filepath</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">YAML</span>.<span class=\"ruby-identifier\">load_file</span>( <span class=\"ruby-string\">'animals.yaml'</span> )\n   <span class=\"ruby-comment\">#=&gt; ['badger', ...</span>\n</pre>\n"],["load_path_insert_index","Gem","Gem.html#method-c-load_path_insert_index","()","<p>The index to insert activated gem paths into the $LOAD_PATH.\n<p>Defaults to the site lib directory unless …\n"],["load_plugin_files","Gem","Gem.html#method-c-load_plugin_files","(plugins)","<p>Load <code>plugins</code> as ruby files\n"],["load_plugins","Gem","Gem.html#method-c-load_plugins","()","<p>Find all ‘rubygems_plugin’ files in installed gems and load them\n"],["load_stream","Psych","Psych.html#method-c-load_stream","(yaml, filename = nil)","<p>Load multiple documents given in <code>yaml</code>.  Returns the parsed\ndocuments as a list.  If a block is given, …\n"],["load_stream","Syck","Syck.html#method-c-load_stream","( io )","<p>Loads all documents from the current <em>io</em> stream, returning a\n+YAML::Stream+ object containing all loaded …\n"],["load_yaml","Gem","Gem.html#method-c-load_yaml","()","<p>Loads YAML, preferring Psych\n"],["loaded_path?","Gem","Gem.html#method-c-loaded_path-3F","(path)",""],["local","Buildr::Repositories","Buildr/Repositories.html#method-i-local","()","<p>Returns the path to the local repository.\n<p>The default path is .m2/repository relative to the home directory. …\n"],["local=","Buildr::Repositories","Buildr/Repositories.html#method-i-local-3D","(dir)","<p>Sets the path to the local repository.\n<p>The best place to set the local repository path is from a buildr.rb …\n"],["local_task","Buildr::Project","Buildr/Project.html#method-c-local_task","(*args, &block)","<p>Defines a local task with an optional execution message.\n<p>A local task is a task that executes a task with …\n"],["locate","Buildr::Repositories","Buildr/Repositories.html#method-i-locate","(spec)","<p>Locates an artifact in the local repository based on its specification, and\nreturns a file path.\n<p>For example: …\n"],["location_of_caller","Gem","Gem.html#method-c-location_of_caller","()","<p>The file name and line number of the caller of the caller of this method.\n"],["log","CMath","CMath.html#method-c-log","(*args)","<p>Returns the natural logarithm of Complex.  If a second argument is given,\nit will be the base of logarithm. …\n"],["log","GServer","GServer.html#method-i-log","(msg)","<p>Log a message to #stdlog, if it’s defined.  This implementation outputs the\ntimestamp and message to …\n"],["log","Logger","Logger.html#method-i-log","(severity, message = nil, progname = nil, &block)",""],["log","Logger::Application","Logger/Application.html#method-i-log","(severity, message = nil, &block)","<p>See Logger#add.  This application’s <code>appname</code> is used.\n"],["log!","CMath","CMath.html#method-c-log-21","(*args)",""],["log10","CMath","CMath.html#method-c-log10","(z)","<p>returns the base 10 logarithm of <code>z</code>\n"],["log10!","CMath","CMath.html#method-c-log10-21","(z)",""],["log2","CMath","CMath.html#method-c-log2","(z)","<p>returns the base 2 logarithm of <code>z</code>\n"],["log2!","CMath","CMath.html#method-c-log2-21","(z)",""],["log=","Logger::Application","Logger/Application.html#method-i-log-3D","(logdev)",""],["logger","Logger::Application","Logger/Application.html#method-i-logger","()","<p>Logger for this application.  See the class Logger for an explanation.\n"],["logger=","Logger::Application","Logger/Application.html#method-i-logger-3D","(logger)","<p>Sets the logger for this application.  See the class Logger for an\nexplanation.\n"],["lookup","Buildr::Artifact","Buildr/Artifact.html#method-c-lookup","(spec)","<p>Lookup a previously registered artifact task based on its specification\n(String or Hash).\n"],["lower_triangular?","Matrix","Matrix.html#method-i-lower_triangular-3F","()","<p>Returns <code>true</code> is this is a lower triangular matrix.\n"],["lup","Matrix","Matrix.html#method-i-lup","()","<p>Returns the LUP decomposition of the matrix; see\n<code>LUPDecomposition</code>.\n\n<pre>a = Matrix[[1, 2], [3, 4]]\nl, u, p ...</pre>\n"],["lup_decomposition","Matrix","Matrix.html#method-i-lup_decomposition","()",""],["m2_repo_var","Buildr::Eclipse::Options","Buildr/Eclipse/Options.html#method-i-m2_repo_var","(*values)","<p>The classpath variable used to point at the local maven2 repository.\nExample:\n\n<pre>eclipse.options.m2_repo_var ...</pre>\n"],["magnitude","Vector","Vector.html#method-i-magnitude","()","<p>Returns the modulus (Pythagorean distance) of the vector.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Vector</span>[<span class=\"ruby-value\">5</span>,<span class=\"ruby-value\">8</span>,<span class=\"ruby-value\">2</span>].<span class=\"ruby-identifier\">r</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">9.643650761</span>\n</pre>\n"],["main","Buildr::Packaging::Java::Manifest","Buildr/Packaging/Java/Manifest.html#method-i-main","()","<p>The main (first) section of this manifest.\n"],["main_dependencies","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-main_dependencies","()",""],["main_output_dir","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-main_output_dir","()",""],["main_source_directories","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-main_source_directories","()",""],["mainloop","MultiTkIp","MultiTkIp.html#method-i-mainloop","(check_root = true, restart_on_dead = false)","<p>def mainloop(check_root = true, restart_on_dead = true)\n"],["mainloop","MultiTkIp","MultiTkIp.html#method-i-mainloop","(check_root = true, restart_on_dead = false)","<p>def mainloop(check_root = true, restart_on_dead = true)\n"],["mainloop","MultiTkIp","MultiTkIp.html#method-c-mainloop","(check_root = true)",""],["mainloop","MultiTkIp","MultiTkIp.html#method-c-mainloop","(check_root = true)",""],["mainloop","RemoteTkIp","RemoteTkIp.html#method-i-mainloop","()",""],["mainloop","RemoteTkIp","RemoteTkIp.html#method-c-mainloop","(*args)",""],["mainloop","TclTkLib","TclTkLib.html#method-c-mainloop","(check_root = true)",""],["mainloop_abort_on_exception","MultiTkIp","MultiTkIp.html#method-c-mainloop_abort_on_exception","()",""],["mainloop_abort_on_exception","MultiTkIp","MultiTkIp.html#method-c-mainloop_abort_on_exception","()",""],["mainloop_abort_on_exception","RemoteTkIp","RemoteTkIp.html#method-i-mainloop_abort_on_exception","()",""],["mainloop_abort_on_exception","RemoteTkIp","RemoteTkIp.html#method-c-mainloop_abort_on_exception","()",""],["mainloop_abort_on_exception=","MultiTkIp","MultiTkIp.html#method-c-mainloop_abort_on_exception-3D","(mode)",""],["mainloop_abort_on_exception=","MultiTkIp","MultiTkIp.html#method-c-mainloop_abort_on_exception-3D","(mode)",""],["mainloop_abort_on_exception=","RemoteTkIp","RemoteTkIp.html#method-i-mainloop_abort_on_exception-3D","(mode)",""],["mainloop_abort_on_exception=","RemoteTkIp","RemoteTkIp.html#method-c-mainloop_abort_on_exception-3D","(mode)",""],["mainloop_watchdog","MultiTkIp","MultiTkIp.html#method-c-mainloop_watchdog","(check_root = true)",""],["mainloop_watchdog","MultiTkIp","MultiTkIp.html#method-c-mainloop_watchdog","(check_root = true)",""],["mainloop_watchdog","RemoteTkIp","RemoteTkIp.html#method-i-mainloop_watchdog","()",""],["mainloop_watchdog","RemoteTkIp","RemoteTkIp.html#method-c-mainloop_watchdog","(*args)",""],["mainloop_watchdog","TclTkLib","TclTkLib.html#method-c-mainloop_watchdog","(check_root = true)",""],["make_safe","MultiTkIp","MultiTkIp.html#method-c-make_safe","()",""],["make_safe","MultiTkIp","MultiTkIp.html#method-c-make_safe","()",""],["make_safe","MultiTkIp","MultiTkIp.html#method-i-make_safe","()",""],["make_safe","MultiTkIp","MultiTkIp.html#method-i-make_safe","()",""],["make_safe","RemoteTkIp","RemoteTkIp.html#method-i-make_safe","()",""],["make_switch","OptionParser","OptionParser.html#method-i-make_switch","(opts, block = nil)","<p>Creates an OptionParser::Switch from the parameters. The parsed argument\nvalue is passed to the given …\n"],["make_thread_list","DEBUGGER__","DEBUGGER__.html#method-c-make_thread_list","()",""],["makedirs","FileUtils","FileUtils.html#method-c-makedirs","(list, options = {})",""],["managed","Buildr::POM","Buildr/POM.html#method-i-managed","(spec = nil)","<p>The first form returns all the managed dependencies specified by this POM\nin dependencyManagement. The …\n"],["manipulable?","MultiTkIp","MultiTkIp.html#method-c-manipulable-3F","()",""],["manipulable?","MultiTkIp","MultiTkIp.html#method-i-manipulable-3F","()",""],["manipulable?","MultiTkIp","MultiTkIp.html#method-c-manipulable-3F","()",""],["manipulable?","MultiTkIp","MultiTkIp.html#method-i-manipulable-3F","()",""],["manipulable?","RemoteTkIp","RemoteTkIp.html#method-i-manipulable-3F","()",""],["manipulable?","RemoteTkIp","RemoteTkIp.html#method-c-manipulable-3F","()",""],["map","Matrix","Matrix.html#method-i-map","()",""],["map","Vector","Vector.html#method-i-map","()",""],["map!","Set","Set.html#method-i-map-21","()",""],["map2","Vector","Vector.html#method-i-map2","(v)","<p>Like Vector#collect2, but returns a Vector instead of an Array.\n"],["mark_trusted","MultiTkIp","MultiTkIp.html#method-i-mark_trusted","(slave = '')",""],["mark_trusted","MultiTkIp","MultiTkIp.html#method-c-mark_trusted","(slave = '')",""],["mark_trusted","MultiTkIp","MultiTkIp.html#method-i-mark_trusted","(slave = '')",""],["mark_trusted","MultiTkIp","MultiTkIp.html#method-c-mark_trusted","(slave = '')",""],["marshal_dump","Delegator","Delegator.html#method-i-marshal_dump","()","<p>Serialization support for the object returned by __getobj__.\n"],["marshal_dump","OpenStruct","OpenStruct.html#method-i-marshal_dump","()","<p>Provides marshalling support for use by the Marshal library. Returning the\nunderlying Hash table that …\n"],["marshal_load","Delegator","Delegator.html#method-i-marshal_load","(data)","<p>Reinitializes delegation from a serialized object.\n"],["marshal_load","OpenStruct","OpenStruct.html#method-i-marshal_load","(x)","<p>Provides marshalling support for use by the Marshal library. Accepting a\nHash of keys and values which …\n"],["marshal_version","Gem","Gem.html#method-c-marshal_version","()","<p>The version of the Marshal format for your Ruby.\n"],["mask","IPAddr","IPAddr.html#method-i-mask","(prefixlen)","<p>Returns a new ipaddr built by masking IP address with the given\nprefixlen/netmask. (e.g. 8, 64, “ …\n"],["mask!","IPAddr","IPAddr.html#method-i-mask-21","(mask)","<p>Set current netmask to given mask.\n"],["master?","MultiTkIp","MultiTkIp.html#method-i-master-3F","()",""],["master?","MultiTkIp","MultiTkIp.html#method-c-master-3F","()",""],["master?","MultiTkIp","MultiTkIp.html#method-i-master-3F","()",""],["master?","MultiTkIp","MultiTkIp.html#method-c-master-3F","()",""],["match","OptionParser::CompletingHash","OptionParser/CompletingHash.html#method-i-match","(key)","<p>Completion for hash key.\n"],["max","SizedQueue","SizedQueue.html#method-i-max","()","<p>Returns the maximum size of the queue.\n"],["max=","SizedQueue","SizedQueue.html#method-i-max-3D","(max)","<p>Sets the maximum size of the queue.\n"],["maybe_install_jruby","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-i-maybe_install_jruby","()",""],["measure","Benchmark","Benchmark.html#method-c-measure","(label = \"\")","<p>Returns the time used to execute the given block as a Benchmark::Tms\nobject.\n"],["member?","Set","Set.html#method-i-member-3F","(o)",""],["memberwise","Benchmark::Tms","Benchmark/Tms.html#method-i-memberwise","(op, x)","<p>Returns a new Tms object obtained by memberwise operation <code>op</code>\nof the individual times for this Tms object …\n"],["merge","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-merge","(*files)","<p>Merges another archive into this one by including the individual files from\nthe merged archive.\n<p>Returns …\n"],["merge","Set","Set.html#method-i-merge","(enum)","<p>Merges the elements of the given enumerable object to the set and returns\nself.\n"],["message","Exception2MessageMapper","Exception2MessageMapper.html#method-c-message","(klass, exp)",""],["message","Exception2MessageMapper","Exception2MessageMapper.html#method-c-message","(klass, exp)",""],["message","OptionParser::ParseError","OptionParser/ParseError.html#method-i-message","()","<p>Default stringizing method to emit standard error message.\n"],["method_missing","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-method_missing","(name, *args, &block)","<p>First form creates an ArtifactRequirement on the namespace. It is\nequivalent to providing a requirement_spec …\n"],["method_missing","Delegator","Delegator.html#method-i-method_missing","(m, *args, &block)","<p>Handles the magic of delegation through __getobj__.\n"],["method_missing","MultiTkIp","MultiTkIp.html#method-c-method_missing","(m, *args)",""],["method_missing","MultiTkIp","MultiTkIp.html#method-c-method_missing","(m, *args)",""],["method_missing","Object","Object.html#method-i-method_missing","(id, *args)",""],["method_missing","OpenObject","OpenObject.html#method-i-method_missing","(symbol, *args)",""],["method_missing","TkComm::Tk_CMDTBL","TkComm/Tk_CMDTBL.html#method-c-method_missing","(id, *args)",""],["method_missing","TkComm::Tk_WINDOWS","TkComm/Tk_WINDOWS.html#method-c-method_missing","(id, *args)",""],["method_missing","TkCore::Tk_OBJECT_TABLE","TkCore/Tk_OBJECT_TABLE.html#method-i-method_missing","(m, *args, &b)",""],["methods","Delegator","Delegator.html#method-i-methods","()","<p>Returns the methods available to this delegate object as the union of this\nobject’s and __getobj__ methods. …\n"],["minor","Matrix","Matrix.html#method-i-minor","(*param)","<p>Returns a section of the matrix.  The parameters are either:\n<p>start_row, nrows, start_col, ncols; OR\n<p>row_range …\n"],["mkdir","FileUtils","FileUtils.html#method-c-mkdir","(list, options = {})","<p>Options: mode noop verbose\n<p>Creates one or more directories.\n\n<pre>FileUtils.mkdir 'test'\nFileUtils.mkdir %w( ...</pre>\n"],["mkdir","Object","Object.html#method-i-mkdir","()","<p>Create the DIR, if they do not already exist.\n\n<pre>ruby -run -e mkdir -- [OPTION] DIR\n\n-p          no error ...</pre>\n"],["mkdir_p","FileUtils","FileUtils.html#method-c-mkdir_p","(list, options = {})","<p>Options: mode noop verbose\n<p>Creates a directory and all its parent directories. For example,\n\n<pre>FileUtils.mkdir_p ...</pre>\n"],["mkmf","Object","Object.html#method-i-mkmf","()","<p>Create makefile using mkmf.\n\n<pre>ruby -run -e mkmf -- [OPTION] EXTNAME [OPTION]\n\n-d ARGS     run dir_config ...</pre>\n"],["mkpath","FileUtils","FileUtils.html#method-c-mkpath","(list, options = {})",""],["mkpath","Pathname","Pathname.html#method-i-mkpath","()","<p>See <code>FileUtils.mkpath</code>.  Creates a full path, including any\nintermediate directories that don’t yet exist. …\n"],["mktmpdir","Dir","Dir.html#method-c-mktmpdir","(prefix_suffix=nil, *rest)","<p>Dir.mktmpdir creates a temporary directory.\n<p>The directory is created with 0700 permission.\n<p>The prefix and …\n"],["modifiable","OpenStruct","OpenStruct.html#method-i-modifiable","()","<p>#modifiable is used internally to check if the OpenStruct is able to be\nmodified before granting access …\n"],["module_root_component","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-module_root_component","()",""],["modules_component","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-modules_component","()",""],["mon_enter","MonitorMixin","MonitorMixin.html#method-i-mon_enter","()","<p>Enters exclusive section.\n"],["mon_exit","MonitorMixin","MonitorMixin.html#method-i-mon_exit","()","<p>Leaves exclusive section.\n"],["mon_synchronize","MonitorMixin","MonitorMixin.html#method-i-mon_synchronize","()","<p>Enters exclusive section and executes the block.  Leaves the exclusive\nsection automatically when the …\n"],["mon_try_enter","MonitorMixin","MonitorMixin.html#method-i-mon_try_enter","()","<p>Attempts to enter exclusive section.  Returns <code>false</code> if lock\nfails.\n"],["mountpoint?","Pathname","Pathname.html#method-i-mountpoint-3F","()","<p>mountpoint? returns <code>true</code> if <code>self</code> points to a\nmountpoint.\n"],["move","File","File.html#method-c-move","(source, dest)",""],["move","FileUtils","FileUtils.html#method-c-move","(src, dest, options = {})",""],["mu_extended","Mutex_m","Mutex_m.html#method-i-mu_extended","()",""],["mu_lock","Mutex_m","Mutex_m.html#method-i-mu_lock","()",""],["mu_locked?","Mutex_m","Mutex_m.html#method-i-mu_locked-3F","()",""],["mu_synchronize","Mutex_m","Mutex_m.html#method-i-mu_synchronize","(&block)","<p>locking\n"],["mu_try_lock","Mutex_m","Mutex_m.html#method-i-mu_try_lock","()",""],["mu_unlock","Mutex_m","Mutex_m.html#method-i-mu_unlock","()",""],["mutex","MultiTkIp","MultiTkIp.html#method-c-mutex","()",""],["mutex","MultiTkIp","MultiTkIp.html#method-c-mutex","()",""],["mutex","MultiTkIp","MultiTkIp.html#method-i-mutex","()",""],["mutex","MultiTkIp","MultiTkIp.html#method-i-mutex","()",""],["mutex","TkComm","TkComm.html#method-i-mutex","()",""],["mutex","TkCore::Tk_OBJECT_TABLE","TkCore/Tk_OBJECT_TABLE.html#method-i-mutex","()",""],["mv","FileUtils","FileUtils.html#method-c-mv","(src, dest, options = {})","<p>Options: force noop verbose\n<p>Moves file(s) <code>src</code> to <code>dest</code>.  If <code>file</code>\nand <code>dest</code> exist on the different disk partition, …\n"],["mv","Object","Object.html#method-i-mv","()","<p>Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\n\n<pre>ruby -run -e mv -- [OPTION] SOURCE DEST\n\n-v    ...</pre>\n"],["name","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-name","()",""],["name","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-name","()",""],["name=","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-name-3D","(name)",""],["native","IPAddr","IPAddr.html#method-i-native","()","<p>Returns a new ipaddr built by converting the IPv6 address into a native\nIPv4 address.  If the IP address …\n"],["natures","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-natures","(*values)","<p>An Eclipse project nature is used internally by Eclipse to determine the\naspects of a project.\n"],["natures=","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-i-natures-3D","(var)",""],["need","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-need","(*specs)","<p>Create a new ArtifactRequirement on this namespace.\nArtifactNamespace#method_missing provides syntactic …\n"],["needed?","Buildr::Artifact","Buildr/Artifact.html#method-c-needed-3F","()","<p>Force overwriting target since we don’t have source file to check for\ntimestamp modification\n"],["needed?","Buildr::Artifact","Buildr/Artifact.html#method-i-needed-3F","()","<p>Validates whether artifact is required to be downloaded from repository\n"],["nest","PrettyPrint","PrettyPrint.html#method-i-nest","(indent)","<p>Increases left margin after newline with <code>indent</code> for line\nbreaks added in the block.\n"],["nest","PrettyPrint::SingleLine","PrettyPrint/SingleLine.html#method-i-nest","(indent)",""],["net_excluded_directories","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-net_excluded_directories","()","<p>Don’t exclude things that are subdirectories of other excluded things\n"],["new","Benchmark::Tms","Benchmark/Tms.html#method-c-new","(utime = 0.0, stime = 0.0, cutime = 0.0, cstime = 0.0, real = 0.0, label = nil)","<p>Returns an initialized Tms object which has <em>utime</em> as the user CPU\ntime, <em>stime</em> as the system CPU time, …\n"],["new","Buildr::ArchiveTask::Merge","Buildr/ArchiveTask/Merge.html#method-c-new","(expanders)",""],["new","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-c-new","(spec)","<p>Create a requirement from an `artifact requirement spec`. This spec has\nthree parts, separated by  -&gt; …\n"],["new","Buildr::CCTask","Buildr/CCTask.html#method-c-new","(*args)",""],["new","Buildr::Checks::Expectation","Buildr/Checks/Expectation.html#method-c-new","(*args, &block)","<p>First argument is subject (returned from it method), second argument is\ndescription. If you omit the …\n"],["new","Buildr::Doc::Base","Buildr/Doc/Base.html#method-c-new","(project)",""],["new","Buildr::Eclipse::Eclipse","Buildr/Eclipse/Eclipse.html#method-c-new","(project)",""],["new","Buildr::Eclipse::Options","Buildr/Eclipse/Options.html#method-c-new","(project)",""],["new","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-c-new","()",""],["new","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-c-new","()",""],["new","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-c-new","(buildr_project)",""],["new","Buildr::JUnit::Report","Buildr/JUnit/Report.html#method-c-new","()",""],["new","Buildr::Layout::Default","Buildr/Layout/Default.html#method-c-new","()",""],["new","Buildr::PackageGemTask","Buildr/PackageGemTask.html#method-c-new","(*args)",""],["new","Buildr::Packaging::Java::EarTask","Buildr/Packaging/Java/EarTask.html#method-c-new","(*args)",""],["new","Buildr::Packaging::Java::Manifest","Buildr/Packaging/Java/Manifest.html#method-c-new","(arg = nil)","<p>Returns a new Manifest object based on the argument:\n<p>nil         – Empty Manifest.\n<p>Hash        – Manifest …\n"],["new","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-c-new","(pid, success, exitstatus)",""],["new","Buildr::Run::Base","Buildr/Run/Base.html#method-c-new","(project)",""],["new","Buildr::Scala::ScalaTest","Buildr/Scala/ScalaTest.html#method-c-new","(test_task, options)",""],["new","Buildr::Scala::ScalacOptions","Buildr/Scala/ScalacOptions.html#method-c-new","(project)",""],["new","Buildr::Shell::Base","Buildr/Shell/Base.html#method-c-new","(project)",""],["new","Buildr::TestFramework::Base","Buildr/TestFramework/Base.html#method-c-new","(test_task, options)","<p>Construct a new test framework with the specified options.  Note that\noptions may change before the framework …\n"],["new","Buildr::TestFramework::TestResult","Buildr/TestFramework/TestResult.html#method-c-new","()",""],["new","Buildr::TestFramework::TestResult::Error","Buildr/TestFramework/TestResult/Error.html#method-c-new","(message, backtrace)",""],["new","Buildr::TestFramework::TestResult::YamlFormatter","Buildr/TestFramework/TestResult/YamlFormatter.html#method-c-new","(output)",""],["new","Buildr::Unzip","Buildr/Unzip.html#method-c-new","(args)","<p>Initialize with hash argument of the form target=&gt;zip_file.\n"],["new","CSV","CSV.html#method-c-new","(data, options = Hash.new)","<p>This constructor will wrap either a String or IO object passed in\n<code>data</code> for reading and/or writing.   …\n"],["new","CSV::Row","CSV/Row.html#method-c-new","(headers, fields, header_row = false)","<p>Construct a new CSV::Row from <code>headers</code> and <code>fields</code>,\nwhich are expected to be Arrays.  If one Array is shorter …\n"],["new","CSV::Table","CSV/Table.html#method-c-new","(array_of_rows)","<p>Construct a new CSV::Table from <code>array_of_rows</code>, which are\nexpected to be CSV::Row objects.  All rows are …\n"],["new","ConditionVariable","ConditionVariable.html#method-c-new","()","<p>Creates a new ConditionVariable\n"],["new","DEBUGGER__::Context","DEBUGGER__/Context.html#method-c-new","()",""],["new","Delegator","Delegator.html#method-c-new","(obj)","<p>Pass in the <em>obj</em> to delegate method calls to.  All methods\nsupported by <em>obj</em> will be delegated to.\n"],["new","ERB","ERB.html#method-c-new","(str, safe_level=nil, trim_mode=nil, eoutvar='_erbout')","<p>Constructs a new ERB object with the template specified in <em>str</em>.\n<p>An ERB object works by building a chunk …\n"],["new","GServer","GServer.html#method-c-new","(port, host = DEFAULT_HOST, maxConnections = 4, stdlog = $stderr, audit = false, debug = false)","<p>Create a new server\n<p>port &mdash; the port, as a FixNum, on which to listen.\n<p>host &mdash; the host to bind to\n"],["new","GetoptLong","GetoptLong.html#method-c-new","(*arguments)","<p>Set up option processing.\n<p>The options to support are passed to new() as an array of arrays. Each\nsub-array …\n"],["new","IPAddr","IPAddr.html#method-c-new","(addr = '::', family = Socket::AF_UNSPEC)","<p>Creates a new ipaddr object either from a human readable IP address\nrepresentation in string, or from …\n"],["new","IRB::Irb","IRB/Irb.html#method-c-new","(workspace = nil, input_method = nil, output_method = nil)",""],["new","Logger","Logger.html#method-c-new","(logdev, shift_age = 0, shift_size = 1048576)","<p>Synopsis\n\n<pre>Logger.new(name, shift_age = 7, shift_size = 1048576)\nLogger.new(name, shift_age = 'weekly')</pre>\n"],["new","Logger::Application","Logger/Application.html#method-c-new","(appname = nil)","<p>Synopsis\n\n<pre>Application.new(appname = '')</pre>\n<p>Args\n"],["new","Logger::Formatter","Logger/Formatter.html#method-c-new","()",""],["new","Logger::LogDevice","Logger/LogDevice.html#method-c-new","(log = nil, opt = {})",""],["new","Matrix","Matrix.html#method-c-new","(rows, column_size = rows[0].size)","<p>Matrix.new is private; use Matrix.rows, columns, [], etc… to create.\n"],["new","MonitorMixin","MonitorMixin.html#method-c-new","(*args)","<p>Use <code>extend MonitorMixin</code> or <code>include MonitorMixin</code>\ninstead of this constructor.  Have look at the examples …\n"],["new","MonitorMixin::ConditionVariable","MonitorMixin/ConditionVariable.html#method-c-new","(monitor)",""],["new","MultiTkIp","MultiTkIp.html#method-c-new","(ip, cmd)",""],["new","MultiTkIp","MultiTkIp.html#method-c-new","(target, ret)",""],["new","MultiTkIp","MultiTkIp.html#method-c-new","(ip, cmd)",""],["new","MultiTkIp","MultiTkIp.html#method-c-new","(target, ret)",""],["new","MultiTkIp::Command_Queue","MultiTkIp/Command_Queue.html#method-c-new","(interp)",""],["new","MultiTkIp_OK","MultiTkIp_OK.html#method-c-new","(ret=nil)",""],["new","Mutex_m","Mutex_m.html#method-c-new","(*args)",""],["new","OpenObject","OpenObject.html#method-c-new","(source=nil, &block)",""],["new","OpenStruct","OpenStruct.html#method-c-new","(hash=nil)","<p>Creates a new OpenStruct object.  By default, the resulting OpenStruct\nobject will have no attributes. …\n"],["new","OpenURI::HTTPError","OpenURI/HTTPError.html#method-c-new","(message, io)",""],["new","OpenURI::HTTPRedirect","OpenURI/HTTPRedirect.html#method-c-new","(message, io, uri)",""],["new","OptionParser","OptionParser.html#method-c-new","(banner = nil, width = 32, indent = ' ' * 4)","<p>Initializes the instance and yields itself if called with a block.\n<p>banner &mdash; Banner message.\n<p>width &mdash; Summary …\n"],["new","OptionParser","OptionParser.html#method-i-new","()","<p>Pushes a new List.\n"],["new","OptionParser::Arguable","OptionParser/Arguable.html#method-c-new","(*args)",""],["new","OptionParser::List","OptionParser/List.html#method-c-new","()","<p>Just initializes all instance variables.\n"],["new","OptionParser::ParseError","OptionParser/ParseError.html#method-c-new","(*args)",""],["new","OptionParser::Switch","OptionParser/Switch.html#method-c-new","(pattern = nil, conv = nil, short = nil, long = nil, arg = nil, desc = ([] if short or long), block = Proc.new)",""],["new","PStore","PStore.html#method-c-new","(file, thread_safe = false)","<p>To construct a PStore object, pass in the <em>file</em> path where you\nwould like the data to be stored.\n<p>PStore …\n"],["new","PrettyPrint","PrettyPrint.html#method-c-new","(output='', maxwidth=79, newline=\"\\n\", &genspace)","<p>Creates a buffer for pretty printing.\n<p><code>output</code> is an output target. If it is not specified, \" is\nassumed. ...\n"],["new","PrettyPrint::Breakable","PrettyPrint/Breakable.html#method-c-new","(sep, width, q)",""],["new","PrettyPrint::Group","PrettyPrint/Group.html#method-c-new","(depth)",""],["new","PrettyPrint::GroupQueue","PrettyPrint/GroupQueue.html#method-c-new","(*groups)",""],["new","PrettyPrint::SingleLine","PrettyPrint/SingleLine.html#method-c-new","(output, maxwidth=nil, newline=nil)",""],["new","PrettyPrint::Text","PrettyPrint/Text.html#method-c-new","()",""],["new","Prime","Prime.html#method-c-new","()","<p>obsolete. Use <code>Prime</code>::<code>instance</code> or class methods of\n<code>Prime</code>.\n"],["new","Prime::EratosthenesGenerator","Prime/EratosthenesGenerator.html#method-c-new","()",""],["new","Prime::Generator23","Prime/Generator23.html#method-c-new","()",""],["new","Prime::PseudoPrimeGenerator","Prime/PseudoPrimeGenerator.html#method-c-new","(ubound = nil)",""],["new","Prime::TrialDivisionGenerator","Prime/TrialDivisionGenerator.html#method-c-new","()",""],["new","ProgressBar","ProgressBar.html#method-c-new","(args = {})",""],["new","Queue","Queue.html#method-c-new","()","<p>Creates a new queue.\n"],["new","RemoteTkIp","RemoteTkIp.html#method-c-new","(*args, &b)",""],["new","RemoteTkIp","RemoteTkIp.html#method-c-new","(remote_ip, displayof=nil, timeout=5)",""],["new","Resolv","Resolv.html#method-c-new","(resolvers=[Hosts.new, DNS.new])","<p>Creates a new Resolv using <code>resolvers</code>.\n"],["new","Resolv::DNS","Resolv/DNS.html#method-c-new","(config_info=nil)","<p>Creates a new DNS resolver.\n<p><code>config_info</code> can be:\n<p>nil &mdash; Uses /etc/resolv.conf.\n"],["new","Resolv::DNS::Resource::DomainName","Resolv/DNS/Resource/DomainName.html#method-c-new","(name)","<p>Creates a new DomainName from <code>name</code>.\n"],["new","Resolv::DNS::Resource::Generic","Resolv/DNS/Resource/Generic.html#method-c-new","(data)","<p>Creates a new generic resource.\n"],["new","Resolv::DNS::Resource::HINFO","Resolv/DNS/Resource/HINFO.html#method-c-new","(cpu, os)","<p>Creates a new HINFO running <code>os</code> on <code>cpu</code>.\n"],["new","Resolv::DNS::Resource::IN::A","Resolv/DNS/Resource/IN/A.html#method-c-new","(address)","<p>Creates a new A for <code>address</code>.\n"],["new","Resolv::DNS::Resource::IN::AAAA","Resolv/DNS/Resource/IN/AAAA.html#method-c-new","(address)","<p>Creates a new AAAA for <code>address</code>.\n"],["new","Resolv::DNS::Resource::IN::SRV","Resolv/DNS/Resource/IN/SRV.html#method-c-new","(priority, weight, port, target)","<p>Create a SRV resource record.\n<p>See the documentation for #priority, #weight, #port and #target for\n<code>priority</code> …\n"],["new","Resolv::DNS::Resource::IN::WKS","Resolv/DNS/Resource/IN/WKS.html#method-c-new","(address, protocol, bitmap)",""],["new","Resolv::DNS::Resource::MINFO","Resolv/DNS/Resource/MINFO.html#method-c-new","(rmailbx, emailbx)",""],["new","Resolv::DNS::Resource::MX","Resolv/DNS/Resource/MX.html#method-c-new","(preference, exchange)","<p>Creates a new MX record with <code>preference</code>, accepting mail at\n<code>exchange</code>.\n"],["new","Resolv::DNS::Resource::SOA","Resolv/DNS/Resource/SOA.html#method-c-new","(mname, rname, serial, refresh, retry_, expire, minimum)","<p>Creates a new SOA record.  See the attr documentation for the details of\neach argument.\n"],["new","Resolv::DNS::Resource::TXT","Resolv/DNS/Resource/TXT.html#method-c-new","(first_string, *rest_strings)",""],["new","Resolv::Hosts","Resolv/Hosts.html#method-c-new","(filename = DefaultFileName)","<p>Creates a new Resolv::Hosts, using <code>filename</code> for its data\nsource.\n"],["new","SOCKSSocket","SOCKSSocket.html#method-c-new","(host, serv)",""],["new","Set","Set.html#method-c-new","(enum = nil)","<p>Creates a new set containing the elements of the given enumerable object.\n<p>If a block is given, the elements …\n"],["new","Shell","Shell.html#method-c-new","(pwd = Dir.pwd, umask = nil)",""],["new","SizedQueue","SizedQueue.html#method-c-new","(max)","<p>Creates a fixed-length queue with a maximum size of <code>max</code>.\n"],["new","Socket::UDPSource","Socket/UDPSource.html#method-c-new","(remote_address, local_address, &reply_proc)","<p><code>remote_adress</code> is an Addrinfo object.\n<p><code>local_adress</code> is an Addrinfo object.\n<p><code>reply_proc</code> is a Proc used to send ...\n"],["new","Sync_m","Sync_m.html#method-c-new","(*args)",""],["new","Sync_m","Sync_m.html#method-c-new","(*args)",""],["new","TCPSocket","TCPSocket.html#method-c-new","(host, serv, *rest)",""],["new","TclTkIp","TclTkIp.html#method-c-new","(*args)",""],["new","TclTkIp","TclTkIp.html#method-c-new","(*args)",""],["new","Tempfile","Tempfile.html#method-c-new","(basename, *rest)","<p>Creates a temporary file with permissions 0600 (= only readable and\nwritable by the owner) and opens …\n"],["new","ThreadsWait","ThreadsWait.html#method-c-new","(*threads)","<p>Creates a ThreadsWait object, specifying the threads to wait on.\nNon-blocking.\n"],["new","ThreadsWait","ThreadsWait.html#method-c-new","(*threads)","<p>Creates a ThreadsWait object, specifying the threads to wait on.\nNon-blocking.\n"],["new","TkCore","TkCore.html#method-c-new","(ip, cmd)",""],["new","TkCore::Tk_OBJECT_TABLE","TkCore/Tk_OBJECT_TABLE.html#method-c-new","(id)",""],["new","URI::FILE","URI/FILE.html#method-c-new","(*args)",""],["new","Vector","Vector.html#method-c-new","(array)","<p>Vector.new is private; use Vector[] or Vector.elements to create.\n"],["new","WeakRef","WeakRef.html#method-c-new","(orig)","<p>Creates a weak reference to <code>orig</code>\n"],["new_cond","MonitorMixin","MonitorMixin.html#method-i-new_cond","()","<p>Creates a new MonitorMixin::ConditionVariable associated with the receiver.\n"],["new_document","Buildr::IntellijIdea","Buildr/IntellijIdea.html#method-c-new_document","(value)",""],["new_master","MultiTkIp","MultiTkIp.html#method-c-new_master","(safe=nil, keys={}, &blk)",""],["new_master","MultiTkIp","MultiTkIp.html#method-c-new_master","(safe=nil, keys={}, &blk)",""],["new_ntoh","IPAddr","IPAddr.html#method-c-new_ntoh","(addr)","<p>Creates a new ipaddr containing the given network byte ordered string form\nof an IP address.\n"],["new_ostruct_member","OpenStruct","OpenStruct.html#method-i-new_ostruct_member","(name)","<p>new_ostruct_member is used internally to defined properties on the\nOpenStruct. It does this by using …\n"],["new_runtime","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-i-new_runtime","(cfg = {})",""],["new_safeTk","MultiTkIp","MultiTkIp.html#method-c-new_safeTk","(safe=4, keys={}, &blk)",""],["new_safeTk","MultiTkIp","MultiTkIp.html#method-c-new_safeTk","(safe=4, keys={}, &blk)",""],["new_safe_slave","MultiTkIp","MultiTkIp.html#method-c-new_safe_slave","(safe=4, keys={}, &blk)",""],["new_safe_slave","MultiTkIp","MultiTkIp.html#method-c-new_safe_slave","(safe=4, keys={}, &blk)",""],["new_slave","MultiTkIp","MultiTkIp.html#method-c-new_slave","(safe=nil, keys={}, &blk)",""],["new_slave","MultiTkIp","MultiTkIp.html#method-c-new_slave","(safe=nil, keys={}, &blk)",""],["new_trusted_slave","MultiTkIp","MultiTkIp.html#method-c-new_trusted_slave","(safe=nil, keys={}, &blk)",""],["new_trusted_slave","MultiTkIp","MultiTkIp.html#method-c-new_trusted_slave","(safe=nil, keys={}, &blk)",""],["next","Prime::EratosthenesGenerator","Prime/EratosthenesGenerator.html#method-i-next","()",""],["next","Prime::Generator23","Prime/Generator23.html#method-i-next","()",""],["next","Prime::OldCompatibility","Prime/OldCompatibility.html#method-i-next","()",""],["next","Prime::PseudoPrimeGenerator","Prime/PseudoPrimeGenerator.html#method-i-next","()","<p>alias of <code>succ</code>.\n"],["next","Prime::TrialDivisionGenerator","Prime/TrialDivisionGenerator.html#method-i-next","()",""],["next_to","Prime::EratosthenesSieve","Prime/EratosthenesSieve.html#method-i-next_to","(n)","<p>returns the least odd prime number which is greater than <code>n</code>.\n"],["next_wait","ThreadsWait","ThreadsWait.html#method-i-next_wait","(nonblock = nil)","<p>Waits until any of the specified threads has terminated, and returns the\none that does.\n<p>If there is no …\n"],["next_wait","ThreadsWait","ThreadsWait.html#method-i-next_wait","(nonblock = nil)","<p>Waits until any of the specified threads has terminated, and returns the\none that does.\n<p>If there is no …\n"],["no_iml","Buildr::IntellijIdea::ProjectExtension","Buildr/IntellijIdea/ProjectExtension.html#method-i-no_iml","()",""],["no_ipr","Buildr::IntellijIdea::ProjectExtension","Buildr/IntellijIdea/ProjectExtension.html#method-i-no_ipr","()",""],["norm","Vector","Vector.html#method-i-norm","()",""],["normal?","Matrix","Matrix.html#method-i-normal-3F","()","<p>Returns <code>true</code> is this is a normal matrix. Raises an error if\nmatrix is not square.\n"],["normalize","Vector","Vector.html#method-i-normalize","()","<p>Returns a new vector with the same direction but with norm 1.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">v</span> = <span class=\"ruby-constant\">Vector</span>[<span class=\"ruby-value\">5</span>,<span class=\"ruby-value\">8</span>,<span class=\"ruby-value\">2</span>].<span class=\"ruby-identifier\">normalize</span>\n<span class=\"ruby-comment\"># =&gt; Vector[0.5184758473652127, ...</span>\n</pre>\n"],["normalize_path","Buildr::Util","Buildr/Util.html#method-i-normalize_path","(path, *dirs)","<p>Just like File.expand_path, but for windows systems it capitalizes the\ndrive name and ensures backslashes …\n"],["notify","Shell","Shell.html#method-c-notify","(*opts, &block)",""],["notify_observers","Observable","Observable.html#method-i-notify_observers","(*arg)","<p>Notify observers of a change in state <strong>if</strong> this object’s\nchanged state is <code>true</code>.\n<p>This will invoke the method …\n"],["notify_send","Object","Object.html#method-i-notify_send","(type, title, message)",""],["ns","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-ns","(name, *uses, &block)","<p>Create a named sub-namespace, sub-namespaces are themselves\nArtifactNamespace instances but cannot be …\n"],["ns?","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-ns-3F","(name)","<p>Test if a sub-namespace by the given name exists\n"],["ntop","IPAddr","IPAddr.html#method-c-ntop","(addr)","<p>Convert a network byte ordered string form of an IP address into human\nreadable form.\n"],["num_waiting","Queue","Queue.html#method-i-num_waiting","()","<p>Returns the number of threads waiting on the queue.\n"],["num_waiting","SizedQueue","SizedQueue.html#method-i-num_waiting","()","<p>Returns the number of threads waiting on the queue.\n"],["object_address_group","PP::PPMethods","PP/PPMethods.html#method-i-object_address_group","(obj, &block)",""],["object_group","PP::PPMethods","PP/PPMethods.html#method-i-object_group","(obj)","<p>A convenience method which is same as follows:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">group</span>(<span class=\"ruby-value\">1</span>, <span class=\"ruby-string\">'#&lt;'</span> <span class=\"ruby-operator\">+</span> <span class=\"ruby-identifier\">obj</span>.<span class=\"ruby-identifier\">class</span>.<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-string\">'&gt;'</span>) { <span class=\"ruby-operator\">...</span> }\n</pre>\n"],["object_maker","Syck","Syck.html#method-c-object_maker","( obj_class, val )","<p>Allocate blank object\n"],["off","Tracer","Tracer.html#method-c-off","()","<p>Disable tracing\n"],["on","OptionParser","OptionParser.html#method-i-on","(*opts, &block)","<p>Add option switch and handler. See #make_switch for an explanation of\nparameters.\n"],["on","Tracer","Tracer.html#method-c-on","()","<p>Start tracing\n<p>Example\n\n<pre>Tracer.on\n# code to trace here\nTracer.off</pre>\n"],["on_define","Buildr::Project","Buildr/Project.html#method-c-on_define","(&block)","<p><strong>Deprecated</strong> Check the Extension module to see how\nextensions are handled.\n"],["on_head","OptionParser","OptionParser.html#method-i-on_head","(*opts, &block)","<p>Add option switch like with #on, but at head of summary.\n"],["on_tail","OptionParser","OptionParser.html#method-i-on_tail","(*opts, &block)","<p>Add option switch like with #on, but at tail of summary.\n"],["onload","Java::JavaWrapper","Java/JavaWrapper.html#method-i-onload","()",""],["only","Hash","Hash.html#method-i-only","(*keys)","<p>Returns a new hash with only the specified keys.\n<p>For example:\n\n<pre class=\"ruby\">{ :<span class=\"ruby-identifier\">a=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-value\">1</span>, :<span class=\"ruby-identifier\">b=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-value\">2</span>, :<span class=\"ruby-identifier\">c=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-value\">3</span>, :<span class=\"ruby-identifier\">d=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-value\">4</span> }.<span class=\"ruby-identifier\">only</span>(:<span class=\"ruby-identifier\">a</span>, :<span class=\"ruby-identifier\">c</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["only_run","Buildr::TestTask","Buildr/TestTask.html#method-i-only_run","(tests)","<p>Limit running tests to specific list.\n"],["only_run_failed","Buildr::TestTask","Buildr/TestTask.html#method-i-only_run_failed","()","<p>Limit running tests to those who failed the last time.\n"],["open","CSV","CSV.html#method-c-open","(*args)","<p>This method opens an IO object, and wraps that with CSV.  This is intended\nas the primary interface for …\n"],["open","Kernel","Kernel.html#method-i-open","(name, *rest, &block)","<p>Allows the opening of various resources including URIs.\n<p>If the first argument responds to the ‘open’ method, …\n"],["open","Kernel","Kernel.html#method-c-open","(name, *rest, &block)","<p>Allows the opening of various resources including URIs.\n<p>If the first argument responds to the ‘open’ method, …\n"],["open","OpenURI::OpenRead","OpenURI/OpenRead.html#method-i-open","(*rest, &block)","<p>OpenURI::OpenRead#open provides `open’ for URI::HTTP and URI::FTP.\n<p>OpenURI::OpenRead#open takes optional …\n"],["open","Resolv::DNS","Resolv/DNS.html#method-c-open","(*args)","<p>Creates a new DNS resolver.  See Resolv::DNS.new for argument details.\n<p>Yields the created DNS resolver …\n"],["open","Tempfile","Tempfile.html#method-i-open","()","<p>Opens or reopens the file with mode “r+”.\n"],["open","Tempfile","Tempfile.html#method-c-open","(*args)","<p>Creates a new Tempfile.\n<p>If no block is given, this is a synonym for Tempfile.new.\n<p>If a block is given, …\n"],["operation","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-i-operation","(op, other)",""],["options","Buildr","Buildr.html#method-i-options","()","<p>Returns the Buildr options. See Options.\n"],["options","Buildr","Buildr.html#method-c-options","()","<p>Returns the Buildr options. See Options.\n"],["options","OptionParser::Arguable","OptionParser/Arguable.html#method-i-options","()","<p>Actual OptionParser object, automatically created if nonexistent.\n<p>If called with a block, yields the  …\n"],["options=","OptionParser::Arguable","OptionParser/Arguable.html#method-i-options-3D","(opt)","<p>Sets OptionParser object, when <code>opt</code> is <code>false</code> or\n<code>nil</code>, methods OptionParser::Arguable#options and\nOptionParser::Arguable#options= …\n"],["order","OptionParser","OptionParser.html#method-i-order","(*argv, &block)","<p>Parses command line arguments <code>argv</code> in order. When a block is\ngiven, each non-option argument is yielded. …\n"],["order!","OptionParser","OptionParser.html#method-i-order-21","(argv = default_argv, &nonopt)","<p>Same as #order, but removes switches destructively.\n"],["order!","OptionParser::Arguable","OptionParser/Arguable.html#method-i-order-21","(&blk)","<p>Parses <code>self</code> destructively in order and returns\n<code>self</code> containing the rest arguments left unparsed.\n"],["ordering=","GetoptLong","GetoptLong.html#method-i-ordering-3D","(ordering)","<p>Set the handling of the ordering of options and arguments. A RuntimeError\nis raised if option processing …\n"],["orthogonal?","Matrix","Matrix.html#method-i-orthogonal-3F","()","<p>Returns <code>true</code> is this is an orthogonal matrix Raises an error\nif matrix is not square.\n"],["output","PrettyPrint::Breakable","PrettyPrint/Breakable.html#method-i-output","(out, output_width)",""],["output","PrettyPrint::Text","PrettyPrint/Text.html#method-i-output","(out, output_width)",""],["output_value","IRB::Irb","IRB/Irb.html#method-i-output_value","()",""],["package","Buildr::Package","Buildr/Package.html#method-i-package","(*args)","<p>Defines and returns a package created by this project.\n<p>The first argument declares the package type.  …\n"],["package_with_javadoc","Buildr::Packaging::Java","Buildr/Packaging/Java.html#method-i-package_with_javadoc","(options = nil)","<p>Call this when you want the project (and all its sub-projects) to create a\nJavaDoc distribution. You …\n"],["package_with_sources","Buildr::Packaging::Java","Buildr/Packaging/Java.html#method-i-package_with_sources","(options = nil)","<p>Call this when you want the project (and all its sub-projects) to create a\nsource distribution. You can …\n"],["packages","Buildr::Package","Buildr/Package.html#method-i-packages","()","<p>Returns all packages created by this project. A project may create any\nnumber of packages.\n<p>This method …\n"],["packaging","Buildr::CompileTask","Buildr/CompileTask.html#method-i-packaging","()","<p>Returns the default packaging type for this compiler, if known.\n"],["parent","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-parent","()","<p>ROOT namespace has no parent\n"],["parent","Pathname","Pathname.html#method-i-parent","()","<p>#parent returns the parent directory.\n<p>This is same as <code>self + '..'</code>.\n"],["parent=","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-parent-3D","(other)","<p>Set the parent for the current namespace, except if it is ROOT\n"],["parse","Buildr::Packaging::Java::Manifest","Buildr/Packaging/Java/Manifest.html#method-c-parse","(str)","<p>Parse a string in MANIFEST.MF format and return a new Manifest.\n"],["parse","CSV","CSV.html#method-c-parse","(*args, &block)","<p>This method can be used to easily parse CSV out of a String.  You may\neither provide a <code>block</code> which will …\n"],["parse","OptionParser","OptionParser.html#method-i-parse","(*argv)","<p>Parses command line arguments <code>argv</code> in order when environment\nvariable POSIXLY_CORRECT is set, and in …\n"],["parse","OptionParser::Switch::NoArgument","OptionParser/Switch/NoArgument.html#method-i-parse","(arg, argv)","<p>Raises an exception if any arguments given.\n"],["parse","OptionParser::Switch::OptionalArgument","OptionParser/Switch/OptionalArgument.html#method-i-parse","(arg, argv, &error)","<p>Parses argument if given, or uses default value.\n"],["parse","OptionParser::Switch::PlacedArgument","OptionParser/Switch/PlacedArgument.html#method-i-parse","(arg, argv, &error)","<p>Returns nil if argument is not present or begins with ‘-’.\n"],["parse","OptionParser::Switch::RequiredArgument","OptionParser/Switch/RequiredArgument.html#method-i-parse","(arg, argv)","<p>Raises an exception if argument is not present.\n"],["parse","Psych","Psych.html#method-c-parse","(yaml, filename = nil)","<p>Parse a YAML string in <code>yaml</code>.  Returns the first object of a\nYAML AST. <code>filename</code> is used in the exception …\n"],["parse","Syck","Syck.html#method-c-parse","( io )","<p>Parse the first document from the current <em>io</em> stream\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">open</span>( <span class=\"ruby-string\">'animals.yaml'</span> ) { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">yf</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-constant\">YAML</span><span class=\"ruby-operator\">::</span><span class=\"ruby-identifier\">load</span>( <span class=\"ruby-identifier\">yf</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["parse","Time","Time.html#method-c-parse","(date, now=self.now)","<p>Parses <code>date</code> using Date._parse and converts it to a Time\nobject.\n<p>If a block is given, the year described …\n"],["parse!","OptionParser","OptionParser.html#method-i-parse-21","(argv = default_argv)","<p>Same as #parse, but removes switches destructively.\n"],["parse!","OptionParser::Arguable","OptionParser/Arguable.html#method-i-parse-21","()","<p>Parses <code>self</code> destructively and returns <code>self</code>\ncontaining the rest arguments left unparsed.\n"],["parse_csv","String","String.html#method-i-parse_csv","(options = Hash.new)","<p>Equivalent to <code>CSV::parse_line(self, options)</code>.\n"],["parse_documents","Syck","Syck.html#method-c-parse_documents","( io, &doc_proc )","<p>Calls <em>block</em> with a tree of +YAML::BaseNodes+, one tree for each\nconsecutive document in the YAML stream …\n"],["parse_file","Psych","Psych.html#method-c-parse_file","(filename)","<p>Parse a file at <code>filename</code>. Returns the YAML AST.\n<p>Raises a Psych::SyntaxError when a YAML syntax error is …\n"],["parse_file","Syck","Syck.html#method-c-parse_file","( filepath )","<p>Parse a document from the file located at <em>filepath</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">YAML</span>.<span class=\"ruby-identifier\">parse_file</span>( <span class=\"ruby-string\">'animals.yaml'</span> )\n   <span class=\"ruby-comment\">#=&gt; #&lt;YAML::Syck::Node:0x82ccce0 ...</span>\n</pre>\n"],["parse_line","CSV","CSV.html#method-c-parse_line","(line, options = Hash.new)","<p>This method is a shortcut for converting a single line of a CSV String into\na into an Array.  Note that …\n"],["parse_stream","Psych","Psych.html#method-c-parse_stream","(yaml, filename = nil, &block)","<p>Parse a YAML string in <code>yaml</code>.  Returns the full AST for the\nYAML document. This method can handle multiple …\n"],["parser","Psych","Psych.html#method-c-parser","()","<p>Returns a default parser\n"],["parser","Syck","Syck.html#method-c-parser","()","<p>Returns a new default parser\n"],["path","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-path","(name)","<p>Returns a path object. Use the path object to include files under a path,\nfor example, to include the …\n"],["path","Buildr::Unzip","Buildr/Unzip.html#method-i-path","(name)",""],["path","Gem","Gem.html#method-c-path","()",""],["path","MultiTkIp","MultiTkIp.html#method-i-path","()",""],["path","MultiTkIp","MultiTkIp.html#method-c-path","()",""],["path","MultiTkIp","MultiTkIp.html#method-i-path","()",""],["path","MultiTkIp","MultiTkIp.html#method-c-path","()",""],["path","PStore","PStore.html#method-i-path","()","<p>Returns the path to the data store file.\n"],["path","Tempfile","Tempfile.html#method-i-path","()","<p>Returns the full path name of the temporary file. This will be nil if\n#unlink has been called.\n"],["path_to","Buildr::Project","Buildr/Project.html#method-i-path_to","(*names)","<p>Returns a path from a combination of name, relative to the project’s base\ndirectory. Essentially, joins …\n"],["path_to_bin","Java::Commands","Java/Commands.html#method-c-path_to_bin","(name = nil)","<p>Returns the path to the specified Java command (with no argument to java\nitself).\n"],["paths","Gem","Gem.html#method-c-paths","()",""],["paths=","Gem","Gem.html#method-c-paths-3D","(env)",""],["pattern","OptionParser::Switch","OptionParser/Switch.html#method-c-pattern","()",""],["pattern","OptionParser::Switch::NoArgument","OptionParser/Switch/NoArgument.html#method-c-pattern","()",""],["pattern_match","Buildr::Filter","Buildr/Filter.html#method-i-pattern_match","(file, pattern)","<p>This method returns true if the file name matches the pattern. The pattern\nmay be a String, a Regexp …\n"],["percentage","ProgressBar","ProgressBar.html#method-i-percentage","()",""],["permutation?","Matrix","Matrix.html#method-i-permutation-3F","()","<p>Returns <code>true</code> is this is a permutation matrix Raises an error\nif matrix is not square.\n"],["permute","OptionParser","OptionParser.html#method-i-permute","(*argv)","<p>Parses command line arguments <code>argv</code> in permutation mode and\nreturns list of non-option arguments.\n"],["permute!","OptionParser","OptionParser.html#method-i-permute-21","(argv = default_argv)","<p>Same as #permute, but removes switches destructively.\n"],["permute!","OptionParser::Arguable","OptionParser/Arguable.html#method-i-permute-21","()","<p>Parses <code>self</code> destructively in permutation mode and returns\n<code>self</code> containing the rest arguments left unparsed. …\n"],["pipeline","Open3","Open3.html#method-c-pipeline","(*cmds)","<p>Open3.pipeline starts a list of commands as a pipeline. It waits the finish\nof the commands. No pipe …\n"],["pipeline_r","Open3","Open3.html#method-c-pipeline_r","(*cmds, &block)","<p>Open3.pipeline_r starts a list of commands as a pipeline with a pipe which\nconnects stdout of the last …\n"],["pipeline_rw","Open3","Open3.html#method-c-pipeline_rw","(*cmds, &block)","<p>Open3.pipeline_rw starts a list of commands as a pipeline with pipes which\nconnects stdin of the first …\n"],["pipeline_start","Open3","Open3.html#method-c-pipeline_start","(*cmds, &block)","<p>Open3.pipeline_start starts a list of commands as a pipeline. No pipe made\nfor stdin of the first command …\n"],["pipeline_w","Open3","Open3.html#method-c-pipeline_w","(*cmds, &block)","<p>Open3.pipeline_w starts a list of commands as a pipeline with a pipe which\nconnects stdin of the first …\n"],["platforms","Gem","Gem.html#method-c-platforms","()","<p>Array of platforms this RubyGems supports.\n"],["platforms=","Gem","Gem.html#method-c-platforms-3D","(platforms)","<p>Set array of platforms this RubyGems supports (primarily for testing).\n"],["pom","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-pom","()","<p>Convenience method that returns a POM artifact.\n"],["pom_xml","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-pom_xml","()","<p>Creates POM XML for this artifact.\n"],["pop","Queue","Queue.html#method-i-pop","(non_block=false)","<p>Retrieves data from the queue.  If the queue is empty, the calling thread\nis suspended until data is …\n"],["pop","SizedQueue","SizedQueue.html#method-i-pop","(*args)","<p>Retrieves data from the queue and runs a waiting thread, if any.\n"],["pop_inspect_key","PP::PPMethods","PP/PPMethods.html#method-i-pop_inspect_key","(id)",""],["popd","Shell","Shell.html#method-i-popd","()",""],["popdir","Shell","Shell.html#method-i-popdir","()",""],["popen2","Open3","Open3.html#method-c-popen2","(*cmd, &block)","<p>Open3.popen2 is similer to Open3.popen3 except it doesn’t make a pipe for\nthe standard error stream. …\n"],["popen2e","Open3","Open3.html#method-c-popen2e","(*cmd, &block)","<p>Open3.popen2e is similer to Open3.popen3 except it merges the standard\noutput stream and the standard …\n"],["popen3","Open3","Open3.html#method-c-popen3","(*cmd, &block)","<p>Open stdin, stdout, and stderr streams and start external executable. In\naddition, a thread for waiting …\n"],["post_build","Gem","Gem.html#method-c-post_build","(&hook)","<p>Adds a post-build hook that will be passed an Gem::Installer instance when\nGem::Installer#install is …\n"],["post_install","Gem","Gem.html#method-c-post_install","(&hook)","<p>Adds a post-install hook that will be passed an Gem::Installer instance\nwhen Gem::Installer#install is …\n"],["post_reset","Gem","Gem.html#method-c-post_reset","(&hook)","<p>Adds a hook that will get run after Gem::Specification.reset is run.\n"],["post_uninstall","Gem","Gem.html#method-c-post_uninstall","(&hook)","<p>Adds a post-uninstall hook that will be passed a Gem::Uninstaller instance\nand the spec that was uninstalled …\n"],["power!","Bignum","Bignum.html#method-i-power-21","(other)",""],["power!","Fixnum","Fixnum.html#method-i-power-21","(other)",""],["power!","Float","Float.html#method-i-power-21","(other)",""],["pp","Kernel","Kernel.html#method-c-pp","(*objs)","<p>prints arguments in pretty form.\n<p>pp returns argument(s).\n"],["pp","Kernel","Kernel.html#method-i-pp","(*objs)","<p>prints arguments in pretty form.\n<p>pp returns argument(s).\n"],["pp","PP","PP.html#method-c-pp","(obj, out=$>, width=79)","<p>Outputs <code>obj</code> to <code>out</code> in pretty printed format of\n<code>width</code> columns in width.\n<p>If <code>out</code> is omitted, +$&gt;+ is assumed. …\n"],["pp","PP::PPMethods","PP/PPMethods.html#method-i-pp","(obj)","<p>Adds <code>obj</code> to the pretty printing buffer using\nObject#pretty_print or Object#pretty_print_cycle.\n<p>Object#pretty_print_cycle …\n"],["pp_hash","PP::PPMethods","PP/PPMethods.html#method-i-pp_hash","(obj)",""],["pp_object","PP::PPMethods","PP/PPMethods.html#method-i-pp_object","(obj)",""],["pre_install","Gem","Gem.html#method-c-pre_install","(&hook)","<p>Adds a pre-install hook that will be passed an Gem::Installer instance when\nGem::Installer#install is …\n"],["pre_reset","Gem","Gem.html#method-c-pre_reset","(&hook)","<p>Adds a hook that will get run before Gem::Specification.reset is run.\n"],["pre_uninstall","Gem","Gem.html#method-c-pre_uninstall","(&hook)","<p>Adds a pre-uninstall hook that will be passed an Gem::Uninstaller instance\nand the spec that will be …\n"],["prefix","Gem","Gem.html#method-c-prefix","()","<p>The directory prefix this RubyGems was installed at. If your prefix is in a\nstandard location (ie, rubygems …\n"],["prepare","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-prepare","(&block)","<p>Adds a prepare block. These blocks are called early on for adding more\ncontent to the archive, before …\n"],["prepend","OptionParser::List","OptionParser/List.html#method-i-prepend","(*args)","<p>Inserts <code>switch</code> at the head of the list, and associates short,\nlong and negated long options. Arguments …\n"],["pretty_inspect","Kernel","Kernel.html#method-i-pretty_inspect","()","<p>returns a pretty printed object as a string.\n"],["pretty_print","Array","Array.html#method-i-pretty_print","(q)",""],["pretty_print","ENV","ENV.html#method-c-pretty_print","(q)",""],["pretty_print","File::Stat","File/Stat.html#method-i-pretty_print","(q)",""],["pretty_print","Hash","Hash.html#method-i-pretty_print","(q)",""],["pretty_print","MatchData","MatchData.html#method-i-pretty_print","(q)",""],["pretty_print","Object","Object.html#method-i-pretty_print","(q)",""],["pretty_print","PP::ObjectMixin","PP/ObjectMixin.html#method-i-pretty_print","(q)","<p>A default pretty printing method for general objects. It calls\n#pretty_print_instance_variables to list …\n"],["pretty_print","Range","Range.html#method-i-pretty_print","(q)",""],["pretty_print","Struct","Struct.html#method-i-pretty_print","(q)",""],["pretty_print_cycle","Array","Array.html#method-i-pretty_print_cycle","(q)",""],["pretty_print_cycle","Hash","Hash.html#method-i-pretty_print_cycle","(q)",""],["pretty_print_cycle","Object","Object.html#method-i-pretty_print_cycle","(q)",""],["pretty_print_cycle","PP::ObjectMixin","PP/ObjectMixin.html#method-i-pretty_print_cycle","(q)","<p>A default pretty printing method for general objects that are detected as\npart of a cycle.\n"],["pretty_print_cycle","Struct","Struct.html#method-i-pretty_print_cycle","(q)",""],["pretty_print_inspect","PP::ObjectMixin","PP/ObjectMixin.html#method-i-pretty_print_inspect","()","<p>Is #inspect implementation using #pretty_print. If you implement\n#pretty_print, it can be used as follows. …\n"],["pretty_print_instance_variables","PP::ObjectMixin","PP/ObjectMixin.html#method-i-pretty_print_instance_variables","()","<p>Returns a sorted array of instance variable names.\n<p>This method should return an array of names of instance …\n"],["prime?","Integer","Integer.html#method-i-prime-3F","()","<p>Returns true if <code>self</code> is a prime number, false for a composite.\n"],["prime?","Prime","Prime.html#method-i-prime-3F","(value, generator = Prime::Generator23.new)","<p>Returns true if <code>value</code> is prime, false for a composite.\n<p>Parameters\n<p>value &mdash; an arbitrary integer to be checked. …\n"],["prime_division","Integer","Integer.html#method-i-prime_division","(generator = Prime::Generator23.new)","<p>Returns the factorization of <code>self</code>.\n<p>See Prime#prime_division for more details.\n"],["prime_division","Prime","Prime.html#method-i-prime_division","(value, generator= Prime::Generator23.new)","<p>Returns the factorization of <code>value</code>.\n<p>Parameters\n<p>value &mdash; An arbitrary integer.\n"],["primes","Prime::TrialDivision","Prime/TrialDivision.html#method-i-primes","()",""],["primes_so_far","Prime::TrialDivision","Prime/TrialDivision.html#method-i-primes_so_far","()",""],["print_profile","Profiler__","Profiler__.html#method-i-print_profile","(f)",""],["procedure","TkComm","TkComm.html#method-c-procedure","(val)",""],["profile","Buildr::Settings","Buildr/Settings.html#method-i-profile","()","<p>Returns the profile for the current environment.\n"],["profiles","Buildr::Settings","Buildr/Settings.html#method-i-profiles","()","<p>Profiles loaded from profiles.yaml file in build directory.\n"],["program_name","OptionParser","OptionParser.html#method-i-program_name","()","<p>Program name to be emitted in error message and default banner, defaults to\n$0.\n"],["progress","ProgressBar","ProgressBar.html#method-i-progress","(width)",""],["project","Buildr","Buildr.html#method-i-project","(*args, &block)","<p>Returns a project definition.\n<p>When called from outside a project definition, must reference the project …\n"],["project","Buildr::Project","Buildr/Project.html#method-i-project","(*args, &block)","<p>Same as Buildr#project. This method is called on a project, so a relative\nname is sufficient to find …\n"],["project_details_component","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-project_details_component","()",""],["project_root_manager_component","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-project_root_manager_component","()",""],["projects","Buildr","Buildr.html#method-i-projects","(*args)","<p>With no arguments, returns a list of all projects defined so far. When\ncalled on a project, returns all …\n"],["projects","Buildr::Project","Buildr/Project.html#method-i-projects","(*args)","<p>Same as Buildr#projects. This method is called on a project, so relative\nnames are sufficient to find …\n"],["promote_load_path","Gem","Gem.html#method-c-promote_load_path","(gem_name, over_name)","<p>Promotes the load paths of the <code>gem_name</code> over the load paths of\n<code>over_name</code>.  Useful for allowing one gem …\n"],["prompt","IRB::Irb","IRB/Irb.html#method-i-prompt","(prompt, ltype, indent, line_no)",""],["proper_subset?","Set","Set.html#method-i-proper_subset-3F","(set)","<p>Returns true if the set is a proper subset of the given set.\n"],["proper_superset?","Set","Set.html#method-i-proper_superset-3F","(set)","<p>Returns true if the set is a proper superset of the given set.\n"],["properties","Buildr::POM","Buildr/POM.html#method-i-properties","()","<p>Returns properties available to this POM as hash. Includes explicit\nproperties and pom.xxx/project.xxx …\n"],["properties","Buildr::Shell::ShellTask","Buildr/Shell/ShellTask.html#method-i-properties","()",""],["protected_methods","Delegator","Delegator.html#method-i-protected_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this\nobject’s and __getobj__ protected …\n"],["providers","Buildr::Shell","Buildr/Shell.html#method-c-providers","()",""],["proxy","Buildr::Options","Buildr/Options.html#method-i-proxy","()","<p>Returns the proxy options. Currently supported options are:\n<p>:http – HTTP proxy for use when downloading. …\n"],["proxy_uri","URI::Generic","URI/Generic.html#method-i-proxy_uri","()","<p>Returns the proxy server to use. Obtains the proxy from the relevant\nenvironment variable (e.g. HTTP_PROXY …\n"],["prune","Find","Find.html#method-c-prune","()","<p>Skips the current file or directory, restarting the loop with the next\nentry. If the current file is …\n"],["pseudo_toplevel_evaluable=","MultiTkIp_PseudoToplevel_Evaluable","MultiTkIp_PseudoToplevel_Evaluable.html#method-i-pseudo_toplevel_evaluable-3D","(mode)",""],["pseudo_toplevel_evaluable?","MultiTkIp_PseudoToplevel_Evaluable","MultiTkIp_PseudoToplevel_Evaluable.html#method-i-pseudo_toplevel_evaluable-3F","()","<p>def pseudo_toplevel_eval(body = Proc.new)\n\n<pre>Thread.current[:TOPLEVEL] = self\nbegin\n  body.call\nensure\n  ...</pre>\n"],["public_methods","Delegator","Delegator.html#method-i-public_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this\nobject’s and __getobj__ public …\n"],["push","Buildr::Packaging::Java::EarTask","Buildr/Packaging/Java/EarTask.html#method-i-push","(*args)",""],["push","CSV::Row","CSV/Row.html#method-i-push","(*args)","<p>A shortcut for appending multiple fields.  Equivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">args</span>.<span class=\"ruby-identifier\">each</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">arg</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">csv_row</span> <span class=\"ruby-operator\">&lt;&lt;</span> <span class=\"ruby-identifier\">arg</span> }\n</pre>\n<p>This method …\n"],["push","CSV::Table","CSV/Table.html#method-i-push","(*rows)","<p>A shortcut for appending multiple rows.  Equivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">rows</span>.<span class=\"ruby-identifier\">each</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">row</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-keyword\">self</span> <span class=\"ruby-operator\">&lt;&lt;</span> <span class=\"ruby-identifier\">row</span> }\n</pre>\n<p>This method returns …\n"],["push","MultiTkIp::Command_Queue","MultiTkIp/Command_Queue.html#method-i-push","(value)",""],["push","Queue","Queue.html#method-i-push","(obj)","<p>Pushes <code>obj</code> to the queue.\n"],["push","SizedQueue","SizedQueue.html#method-i-push","(obj)","<p>Pushes <code>obj</code> to the queue.  If there is no space left in the\nqueue, waits until space becomes available. …\n"],["push_inspect_key","PP::PPMethods","PP/PPMethods.html#method-i-push_inspect_key","(id)",""],["pushd","Shell","Shell.html#method-i-pushd","(path = nil, verbose = @verbose)",""],["pushdir","Shell","Shell.html#method-i-pushdir","(path = nil, verbose = @verbose)",""],["puts","CSV","CSV.html#method-i-puts","(row)",""],["pwd","FileUtils","FileUtils.html#method-c-pwd","()","<p>Options: (none)\n<p>Returns the name of the current directory.\n"],["quick_emit","Syck","Syck.html#method-c-quick_emit","( oid, opts = {}, &e )","<p>Allocate an Emitter if needed\n"],["r","Vector","Vector.html#method-i-r","()",""],["random_bytes","SecureRandom","SecureRandom.html#method-c-random_bytes","(n=nil)","<p>SecureRandom.random_bytes generates a random binary string.\n<p>The argument <em>n</em> specifies the length of the …\n"],["random_number","SecureRandom","SecureRandom.html#method-c-random_number","(n=0)","<p>SecureRandom.random_number generates a random number.\n<p>If a positive integer is given as <em>n</em>, SecureRandom.random_number …\n"],["rank","Matrix","Matrix.html#method-i-rank","()","<p>Returns the rank of the matrix. Beware that using Float values can yield\nerroneous results because of …\n"],["rank_e","Matrix","Matrix.html#method-i-rank_e","()","<p>deprecated; use Matrix#rank\n"],["rate","ProgressBar","ProgressBar.html#method-i-rate","()",""],["rb_appsend","RemoteTkIp","RemoteTkIp.html#method-i-rb_appsend","(async, *args)",""],["read","Buildr","Buildr.html#method-i-read","(*args)","<p>Reads and returns the contents of a file. The second form yields to the\nblock and returns the result …\n"],["read","CSV","CSV.html#method-c-read","(path, *options)","<p>Use to slurp a CSV file into an Array of Arrays.  Pass the\n<code>path</code> to the file and any <code>options</code> CSV::new() …\n"],["read","CSV","CSV.html#method-i-read","()","<p>Slurps the remaining rows and returns an Array of Arrays.\n<p>The data source must be open for reading.\n"],["read","OpenURI::OpenRead","OpenURI/OpenRead.html#method-i-read","(options={})","<p>OpenURI::OpenRead#read() reads a content referenced by self and returns the\ncontent as string. The string …\n"],["read","URI","URI.html#method-c-read","(uri, options = nil, &block)","<p>Reads from the resource behind this URI. The first form returns the content\nof the resource, the second …\n"],["read","URI::FILE","URI/FILE.html#method-i-read","(options = nil, &block)","<p>See URI::Generic#read\n"],["read","URI::Generic","URI/Generic.html#method-i-read","(options = nil, &block)","<p>Reads from the resource behind this URI. The first form returns the content\nof the resource, the second …\n"],["read_binary","Gem","Gem.html#method-c-read_binary","(path)","<p>Safely read a file in binary mode on all platforms.\n"],["read_type_class","Syck","Syck.html#method-c-read_type_class","( type, obj_class )","<p>Method to extract colon-seperated type and class, returning the type and\nthe constant of the class\n"],["readline","CSV","CSV.html#method-i-readline","()",""],["readline","DEBUGGER__::Context","DEBUGGER__/Context.html#method-i-readline","(prompt, hist)",""],["readlines","CSV","CSV.html#method-i-readlines","()",""],["readlines","CSV","CSV.html#method-c-readlines","(*args)","<p>Alias for CSV::read().\n"],["ready?","RemoteTkIp","RemoteTkIp.html#method-i-ready-3F","(timeout=5)",""],["real","Matrix","Matrix.html#method-i-real","()","<p>Returns the real part of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>), <span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-value\">1</span>), <span class=\"ruby-value\">0</span>], [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span><span class=\"ruby-operator\">+</span><span class=\"ruby-value\">2</span><span class=\"ruby-identifier\">i</span>  <span class=\"ruby-identifier\">i</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n"],["real?","Matrix","Matrix.html#method-i-real-3F","()","<p>Returns <code>true</code> if all entries of the matrix are real.\n"],["realtime","Benchmark","Benchmark.html#method-c-realtime","()","<p>Returns the elapsed real time used to execute the given block.\n"],["reason","OptionParser::ParseError","OptionParser/ParseError.html#method-i-reason","()","<p>Returns error reason. Override this for I18N.\n"],["rebel_jar","Buildr::JRebel","Buildr/JRebel.html#method-i-rebel_jar","()",""],["recover","OptionParser::ParseError","OptionParser/ParseError.html#method-i-recover","(argv)","<p>Pushes back erred argument(s) to <code>argv</code>.\n"],["rect","Matrix","Matrix.html#method-i-rect","()","<p>Returns an array containing matrices corresponding to the real and\nimaginary parts of the matrix\n<p>m.rect …\n"],["rectangular","Matrix","Matrix.html#method-i-rectangular","()",""],["recursion_limit","MultiTkIp","MultiTkIp.html#method-i-recursion_limit","(slave = '', limit = None)",""],["recursion_limit","MultiTkIp","MultiTkIp.html#method-c-recursion_limit","(slave = '', limit = None)",""],["recursion_limit","MultiTkIp","MultiTkIp.html#method-i-recursion_limit","(slave = '', limit = None)",""],["recursion_limit","MultiTkIp","MultiTkIp.html#method-c-recursion_limit","(slave = '', limit = None)",""],["recursive_task","Buildr::Project","Buildr/Project.html#method-i-recursive_task","(*args, &block)","<p>Define a recursive task. A recursive task executes itself and the same task\nin all the sub-projects. …\n"],["recursive_with_dot_files","Buildr::Util","Buildr/Util.html#method-i-recursive_with_dot_files","(*dirs)","<p>Generally speaking, it’s not a good idea to operate on dot files (files\nstarting with dot). These are …\n"],["refresh","Gem","Gem.html#method-c-refresh","()","<p>Refresh source_index from disk and clear searcher.\n"],["regexp","OptionParser::Completion","OptionParser/Completion.html#method-c-regexp","(key, icase)",""],["register","Buildr::Artifact","Buildr/Artifact.html#method-c-register","(*tasks)","<p>Register an artifact task(s) for later lookup (see #lookup).\n"],["regular?","Matrix","Matrix.html#method-i-regular-3F","()","<p>Returns <code>true</code> if this is a regular (i.e. non-singular) matrix.\n"],["reject","OptionParser","OptionParser.html#method-i-reject","(*args, &blk)","<p>Directs to reject specified class argument.\n<p>t &mdash; Argument class specifier, any object including Class.\n\n\n<pre>reject(t)</pre>\n"],["reject","OptionParser","OptionParser.html#method-c-reject","(*args, &blk)","<p>See #reject.\n"],["reject","OptionParser::List","OptionParser/List.html#method-i-reject","(t)","<p>See OptionParser.reject.\n"],["reject!","Set","Set.html#method-i-reject-21","()","<p>Equivalent to Set#delete_if, but returns nil if no changes were made.\n"],["relative","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-relative","(path)",""],["relative?","Pathname","Pathname.html#method-i-relative-3F","()","<p>The opposite of #absolute?\n"],["relative_dir_inside_dir?","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-relative_dir_inside_dir-3F","(dir)",""],["relative_path","Buildr::Util","Buildr/Util.html#method-i-relative_path","(to, from = '.')","<p>Return the path to the first argument, starting from the path provided by\nthe second argument.\n<p>For example: …\n"],["relative_path_from","Pathname","Pathname.html#method-i-relative_path_from","(base_directory)","<p>#relative_path_from returns a relative path from the argument to the\nreceiver.  If <code>self</code> is absolute, …\n"],["release","OptionParser","OptionParser.html#method-i-release","()","<p>Release code\n"],["release_to","Buildr::Repositories","Buildr/Repositories.html#method-i-release_to","()","<p>Returns the current release server setting as a Hash. This is a more\nconvenient way to configure the …\n"],["release_to=","Buildr::Repositories","Buildr/Repositories.html#method-i-release_to-3D","(options)","<p>Specifies the release server. Accepts a Hash with different repository\nsettings (e.g. url, username, …\n"],["remote","Buildr::Repositories","Buildr/Repositories.html#method-i-remote","()","<p>Returns an array of all the remote repository URLs.\n<p>When downloading artifacts, repositories are accessed …\n"],["remote=","Buildr::Repositories","Buildr/Repositories.html#method-i-remote-3D","(urls)","<p>With a String argument, clears the array and set it to that single URL.\n<p>With an Array argument, clears …\n"],["remove","FileUtils","FileUtils.html#method-c-remove","(list, options = {})",""],["remove","OptionParser","OptionParser.html#method-i-remove","()","<p>Removes the last List.\n"],["remove_dir","FileUtils","FileUtils.html#method-c-remove_dir","(path, force = false)","<p>Removes a directory <code>dir</code> and its contents recursively. This\nmethod ignores StandardError if <code>force</code> is true. …\n"],["remove_entry","FileUtils","FileUtils.html#method-c-remove_entry","(path, force = false)","<p>This method removes a file system entry <code>path</code>.\n<code>path</code> might be a regular file, a directory, or something. …\n"],["remove_entry_secure","FileUtils","FileUtils.html#method-c-remove_entry_secure","(path, force = false)","<p>This method removes a file system entry <code>path</code>. \n<code>path</code> shall be a regular file, a directory, or something. …\n"],["remove_file","FileUtils","FileUtils.html#method-c-remove_file","(path, force = false)","<p>Removes a file <code>path</code>. This method ignores StandardError if\n<code>force</code> is true.\n"],["remove_tk_procs","MultiTkIp","MultiTkIp.html#method-c-remove_tk_procs","(*names)",""],["remove_tk_procs","MultiTkIp","MultiTkIp.html#method-c-remove_tk_procs","(*names)",""],["render","ProgressBar","ProgressBar.html#method-i-render","()",""],["replace","Set","Set.html#method-i-replace","(enum)","<p>Replaces the contents of the set with the contents of the given enumerable\nobject and returns self.\n"],["replace_extension","Buildr::Util","Buildr/Util.html#method-i-replace_extension","(filename, new_ext)","<p>Replace the file extension, e.g.,\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">replace_extension</span>(<span class=\"ruby-string\">&quot;foo.zip&quot;</span>, <span class=\"ruby-string\">&quot;txt&quot;</span>) =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;foo.txt&quot;</span>\n</pre>\n"],["reply","Socket::UDPSource","Socket/UDPSource.html#method-i-reply","(msg)","<p>Sends the String <code>msg</code> to the source\n"],["report","Buildr::JUnit","Buildr/JUnit.html#method-c-report","()","<p>Returns the Report object used by the junit:report task. You can use this\nobject to set various options …\n"],["report_dir","Buildr::Cobertura","Buildr/Cobertura.html#method-c-report_dir","()",""],["report_to","Buildr::Cobertura","Buildr/Cobertura.html#method-c-report_to","(file = nil)",""],["report_to","Buildr::Emma","Buildr/Emma.html#method-c-report_to","(format=nil)",""],["report_to","Buildr::TestTask","Buildr/TestTask.html#method-i-report_to","()","<p>Test frameworks that can produce reports, will write them to this\ndirectory.\n<p>This is framework dependent, …\n"],["reports","Buildr::Build","Buildr/Build.html#method-i-reports","()","<p><strong>Deprecated:</strong> Use +path_to(:reports)+ instead.\n"],["reports=","Buildr::Build","Buildr/Build.html#method-i-reports-3D","(dir)","<p><strong>Deprecated:</strong> Use Layout instead.\n"],["repositories","Buildr","Buildr.html#method-i-repositories","()","<p>Returns an object you can use for setting the local repository path, remote\nrepositories URL and release …\n"],["required_location","Gem","Gem.html#method-c-required_location","(gemname, libfile, *requirements)","<p>Full path to <code>libfile</code> in <code>gemname</code>.  Searches for\nthe latest gem unless <code>requirements</code> is given.\n"],["requirement=","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-requirement-3D","(version_requirement)","<p>Set a the requirement, this must be an string formatted for\nVersionRequirement#create to parse.\n"],["requirement?","Buildr::ArtifactSearch","Buildr/ArtifactSearch.html#method-i-requirement-3F","(spec)",""],["requirement?","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-c-requirement-3F","(str)","<p>is <code>str</code> a version requirement?\n"],["requirement_hash","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-requirement_hash","(spec = self)","<p>Return a hash consisting of :name, :spec, :requirement\n"],["requires","Buildr::Run::RunTask","Buildr/Run/RunTask.html#method-i-requires","(*files)","<p>Adds additional files and directories as dependencies to the task and\nreturns self. When specifying a …\n"],["resolve_path","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-resolve_path","(path)",""],["resolve_path","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-resolve_path","(path)",""],["resolve_path_from_base","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-resolve_path_from_base","(path, base_variable)",""],["resolver","Syck","Syck.html#method-c-resolver","()","<p>Returns the default resolver\n"],["resources","Buildr::Compile","Buildr/Compile.html#method-i-resources","(*prereqs, &block)","<p>The resources task is executed by the compile task to copy resources files\nfrom the resource directory …\n"],["resources","Buildr::TestTask","Buildr/TestTask.html#method-i-resources","(*prereqs, &block)","<p>Executes by the #compile task to copy resource files over. See\nProject#resources.\n"],["respond_to_missing?","Delegator","Delegator.html#method-i-respond_to_missing-3F","(m, include_private)","<p>Checks for a method provided by this the delegate object by forwarding the\ncall through __getobj__.\n"],["restart","MultiTkIp","MultiTkIp.html#method-i-restart","(app_name = nil, keys = {})",""],["restart","MultiTkIp","MultiTkIp.html#method-c-restart","(app_name = nil, keys = {})",""],["restart","MultiTkIp","MultiTkIp.html#method-c-restart","(app_name = nil, keys = {})",""],["restart","MultiTkIp","MultiTkIp.html#method-i-restart","(app_name = nil, keys = {})",""],["restart","RemoteTkIp","RemoteTkIp.html#method-i-restart","()",""],["restart","TclTkLib","TclTkLib.html#method-c-restart","(*args)",""],["result","ERB","ERB.html#method-i-result","(b=TOPLEVEL_BINDING)","<p>Executes the generated ERB code to produce a completed template, returning\nthe results of that code. …\n"],["resume","DEBUGGER__","DEBUGGER__.html#method-c-resume","()",""],["resume_all","DEBUGGER__::Context","DEBUGGER__/Context.html#method-i-resume_all","()",""],["return_headers?","CSV","CSV.html#method-i-return_headers-3F","()","<p>Returns <code>true</code> if headers will be returned as a row of results.\nSee CSV::new for details.\n"],["reverse","IPAddr","IPAddr.html#method-i-reverse","()","<p>Returns a string for DNS reverse lookup.  It returns a string in RFC3172\nform for an IPv6 address.\n"],["rewind","CSV","CSV.html#method-i-rewind","()","<p>Rewinds the underlying IO object and resets CSV’s lineno() counter.\n"],["rewind","Prime::EratosthenesGenerator","Prime/EratosthenesGenerator.html#method-i-rewind","()",""],["rewind","Prime::Generator23","Prime/Generator23.html#method-i-rewind","()",""],["rewind","Prime::PseudoPrimeGenerator","Prime/PseudoPrimeGenerator.html#method-i-rewind","()","<p>Rewinds the internal position for enumeration.\n<p>See <code>Enumerator</code>#rewind.\n"],["rewind","Prime::TrialDivisionGenerator","Prime/TrialDivisionGenerator.html#method-i-rewind","()",""],["rfc2822","Time","Time.html#method-i-rfc2822","()","<p>Returns a string which represents the time as date-time defined by RFC\n2822:\n\n<pre>day-of-week, DD month-name ...</pre>\n"],["rfc2822","Time","Time.html#method-c-rfc2822","(date)","<p>Parses <code>date</code> as date-time defined by RFC 2822 and converts it\nto a Time object.  The format is identical …\n"],["rfc822","Time","Time.html#method-c-rfc822","(date)",""],["rfc822","Time","Time.html#method-i-rfc822","()",""],["rjb","Java","Java.html#method-c-rjb","()",""],["rm","FileUtils","FileUtils.html#method-c-rm","(list, options = {})","<p>Options: force noop verbose\n<p>Remove file(s) specified in <code>list</code>.  This method cannot remove\ndirectories. …\n"],["rm","Object","Object.html#method-i-rm","()","<p>Remove the FILE\n\n<pre>ruby -run -e rm -- [OPTION] FILE\n\n-f          ignore nonexistent files\n-r          remove ...</pre>\n"],["rm_f","FileUtils","FileUtils.html#method-c-rm_f","(list, options = {})","<p>Options: noop verbose\n<p>Equivalent to\n\n<pre class=\"ruby\"><span class=\"ruby-comment\">#rm(list, :force =&gt; true)</span>\n</pre>\n"],["rm_r","FileUtils","FileUtils.html#method-c-rm_r","(list, options = {})","<p>Options: force noop verbose secure\n<p>remove files <code>list[0]</code> <code>list[1]</code>… If\n<code>list[n]</code> is a directory, removes …\n"],["rm_rf","File","File.html#method-c-rm_rf","(path)",""],["rm_rf","FileUtils","FileUtils.html#method-c-rm_rf","(list, options = {})","<p>Options: noop verbose secure\n<p>Equivalent to\n\n<pre class=\"ruby\"><span class=\"ruby-comment\">#rm_r(list, :force =&gt; true)</span>\n</pre>\n"],["rmdir","FileUtils","FileUtils.html#method-c-rmdir","(list, options = {})","<p>Options: noop, verbose\n<p>Removes one or more directories.\n\n<pre>FileUtils.rmdir 'somedir'\nFileUtils.rmdir %w(somedir ...</pre>\n"],["rmdir","Object","Object.html#method-i-rmdir","()","<p>Remove the DIR.\n\n<pre>ruby -run -e rmdir -- [OPTION] DIR\n\n-p          remove DIRECTORY and its ancestors.\n-v ...</pre>\n"],["rmtree","FileUtils","FileUtils.html#method-c-rmtree","(list, options = {})",""],["rmtree","Pathname","Pathname.html#method-i-rmtree","()","<p>See <code>FileUtils.rm_r</code>.  Deletes a directory and all beneath it.\n"],["root","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-root","()","<p>Call this on an archive to return itself, and on a path to return the\narchive.\n"],["root","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-c-root","()","<p>Obtain the root namespace, returns the ROOT constant\n"],["root","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-root","()",""],["root","Buildr::Unzip","Buildr/Unzip.html#method-i-root","()","<p>Returns the root path, essentially the Unzip object itself. In case you are\nwondering down paths and …\n"],["root?","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-root-3F","()","<p>Is this the ROOT namespace?\n"],["root?","PStore","PStore.html#method-i-root-3F","(name)","<p>Returns true if the supplied <em>name</em> is currently in the data store.\n<p><strong>WARNING</strong>:  This method is only valid ...\n"],["root?","Pathname","Pathname.html#method-i-root-3F","()","<p>#root? is a predicate for root directories.  I.e. it returns\n<code>true</code> if the pathname consists of consecutive …\n"],["roots","PStore","PStore.html#method-i-roots","()","<p>Returns the names of all object hierarchies currently in the store.\n<p><strong>WARNING</strong>:  This method is only valid ...\n"],["round","Matrix","Matrix.html#method-i-round","(ndigits=0)","<p>Returns a matrix with entries rounded to the given precision (see\nFloat#round)\n"],["row","Matrix","Matrix.html#method-i-row","(i)","<p>Returns row vector number <code>i</code> of the matrix as a Vector\n(starting at 0 like an array).  When a block is …\n"],["row_size","Matrix","Matrix.html#method-i-row_size","()","<p>Returns the number of rows.\n"],["row_vector","Matrix","Matrix.html#method-c-row_vector","(row)","<p>Creates a single-row matrix where the values of that row are as given in\n<code>row</code>.\n\n<pre>Matrix.row_vector([4,5,6]) ...</pre>\n"],["row_vectors","Matrix","Matrix.html#method-i-row_vectors","()","<p>Returns an array of the row vectors of the matrix.  See Vector.\n"],["rows","Matrix","Matrix.html#method-c-rows","(rows, copy = true)","<p>Creates a matrix where <code>rows</code> is an array of arrays, each of\nwhich is a row of the matrix.  If the optional …\n"],["rsqrt","Math","Math.html#method-c-rsqrt","(a)","<p>Compute square root of a non negative number. This method is internally\nused by <code>Math.sqrt</code>.\n"],["ruby","Buildr::Util","Buildr/Util.html#method-i-ruby","(*args)","<p>Runs Ruby with these command line arguments.  The last argument may be a\nhash, supporting the following …\n"],["ruby","Gem","Gem.html#method-c-ruby","()","<p>The path to the running Ruby interpreter.\n"],["ruby_version","Gem","Gem.html#method-c-ruby_version","()","<p>A Gem::Version for the currently running ruby.\n"],["run","Buildr::Filter","Buildr/Filter.html#method-i-run","()","<p>Runs the filter.\n"],["run","Buildr::Run","Buildr/Run.html#method-i-run","(&block)","<p>This method returns the project’s run task. It also accepts a block to be\nexecuted when the run task …\n"],["run","Buildr::Run::JavaRunner","Buildr/Run/JavaRunner.html#method-i-run","(task)",""],["run","Buildr::Run::RunTask","Buildr/Run/RunTask.html#method-i-run","()",""],["run","Buildr::Shell::ShellTask","Buildr/Shell/ShellTask.html#method-i-run","()",""],["run","Buildr::TestFramework::Base","Buildr/TestFramework/Base.html#method-i-run","(tests, dependencies)","<p>TestTask calls this method to run the named (and only those) tests.  This\nmethod returns the list of …\n"],["run","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-i-run","(tests, dependencies)",""],["run","ERB","ERB.html#method-i-run","(b=TOPLEVEL_BINDING)","<p>Generate results and print them. (see ERB#result)\n"],["run_against","Buildr::Checks::Expectation","Buildr/Checks/Expectation.html#method-i-run_against","(context)","<p>Runs this expectation against the context object. The context object is\ndifferent from the subject, but …\n"],["run_tests","Buildr::TestTask","Buildr/TestTask.html#method-i-run_tests","()","<p>Runs the tests using the selected test framework.\n"],["runner","Buildr::Run::RunTask","Buildr/Run/RunTask.html#method-i-runner","()",""],["runner?","Buildr::Run::RunTask","Buildr/Run/RunTask.html#method-i-runner-3F","()",""],["runner_config","Buildr::RSpec","Buildr/RSpec.html#method-i-runner_config","()",""],["runner_config","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-i-runner_config","(runner = OpenStruct.new)",""],["runner_content","Buildr::RSpec","Buildr/RSpec.html#method-i-runner_content","(binding)",""],["runners","Buildr::Run","Buildr/Run.html#method-c-runners","()",""],["running_mainloop?","MultiTkIp","MultiTkIp.html#method-i-running_mainloop-3F","()",""],["running_mainloop?","MultiTkIp","MultiTkIp.html#method-i-running_mainloop-3F","()",""],["safe?","MultiTkIp","MultiTkIp.html#method-i-safe-3F","()",""],["safe?","MultiTkIp","MultiTkIp.html#method-c-safe-3F","()",""],["safe?","MultiTkIp","MultiTkIp.html#method-i-safe-3F","()",""],["safe?","MultiTkIp","MultiTkIp.html#method-c-safe-3F","()",""],["safe?","RemoteTkIp","RemoteTkIp.html#method-i-safe-3F","()",""],["safe_base?","MultiTkIp","MultiTkIp.html#method-i-safe_base-3F","()",""],["safe_base?","MultiTkIp","MultiTkIp.html#method-c-safe_base-3F","()",""],["safe_base?","MultiTkIp","MultiTkIp.html#method-i-safe_base-3F","()",""],["safe_base?","MultiTkIp","MultiTkIp.html#method-c-safe_base-3F","()",""],["safe_base?","RemoteTkIp","RemoteTkIp.html#method-i-safe_base-3F","()",""],["safe_level","MultiTkIp","MultiTkIp.html#method-i-safe_level","()",""],["safe_level","MultiTkIp","MultiTkIp.html#method-c-safe_level","()",""],["safe_level","MultiTkIp","MultiTkIp.html#method-c-safe_level","()",""],["safe_level","MultiTkIp","MultiTkIp.html#method-i-safe_level","()",""],["safe_level=","MultiTkIp","MultiTkIp.html#method-i-safe_level-3D","(safe)",""],["safe_level=","MultiTkIp","MultiTkIp.html#method-c-safe_level-3D","(safe)",""],["safe_level=","MultiTkIp","MultiTkIp.html#method-i-safe_level-3D","(safe)",""],["safe_level=","MultiTkIp","MultiTkIp.html#method-c-safe_level-3D","(safe)",""],["safe_unlink","FileUtils","FileUtils.html#method-c-safe_unlink","(list, options = {})",""],["safeip_add_to_access_path","MultiTkIp","MultiTkIp.html#method-i-safeip_add_to_access_path","(dir)",""],["safeip_add_to_access_path","MultiTkIp","MultiTkIp.html#method-i-safeip_add_to_access_path","(dir)",""],["safeip_configinfo","MultiTkIp","MultiTkIp.html#method-i-safeip_configinfo","(slot = nil)",""],["safeip_configinfo","MultiTkIp","MultiTkIp.html#method-i-safeip_configinfo","(slot = nil)",""],["safeip_configure","MultiTkIp","MultiTkIp.html#method-i-safeip_configure","(slot, value=None)",""],["safeip_configure","MultiTkIp","MultiTkIp.html#method-i-safeip_configure","(slot, value=None)",""],["safeip_delete","MultiTkIp","MultiTkIp.html#method-i-safeip_delete","()",""],["safeip_delete","MultiTkIp","MultiTkIp.html#method-i-safeip_delete","()",""],["safeip_find_in_access_path","MultiTkIp","MultiTkIp.html#method-i-safeip_find_in_access_path","(dir)",""],["safeip_find_in_access_path","MultiTkIp","MultiTkIp.html#method-i-safeip_find_in_access_path","(dir)",""],["safeip_set_log_cmd","MultiTkIp","MultiTkIp.html#method-i-safeip_set_log_cmd","(cmd = Proc.new)",""],["safeip_set_log_cmd","MultiTkIp","MultiTkIp.html#method-i-safeip_set_log_cmd","(cmd = Proc.new)",""],["satisfied_by?","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-satisfied_by-3F","(spec)","<p>Test if this requirement is satisfied by an artifact spec.\n"],["satisfied_by?","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-i-satisfied_by-3F","(version)","<p>Test if this requirement can be satisfied by <code>version</code>\n"],["scala_home","Buildr::Scala::Scalac","Buildr/Scala/Scalac.html#method-c-scala_home","()",""],["scalac_options","Buildr::Scala::ProjectExtension","Buildr/Scala/ProjectExtension.html#method-i-scalac_options","()",""],["scalar","Matrix","Matrix.html#method-c-scalar","(n, value)","<p>Creates an <code>n</code> by <code>n</code> diagonal matrix where each\ndiagonal element is <code>value</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">scalar</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">5</span>)\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">5</span> <span class=\"ruby-value\">0</span>\n <span class=\"ruby-operator\">...</span>\n</pre>\n"],["scalaz_dependencies","Buildr::Scala::Specs2","Buildr/Scala/Specs2.html#method-c-scalaz_dependencies","()",""],["scanf","IO","IO.html#method-i-scanf","(str)","<p>Scans the current string until the match is exhausted, yielding each match\nas it is encountered in the …\n"],["scanf","Kernel","Kernel.html#method-i-scanf","(format, &b)","<p>Scans STDIN for data matching <code>format</code>.  See IO#scanf for\ndetails.\n<p>See Scanf for details on creating a format …\n"],["scanf","String","String.html#method-i-scanf","(fstr)","<p>Scans the current string. If a block is given, it functions exactly like\nblock_scanf.\n\n<pre>arr = &quot;123 456&quot;.scanf(&quot;%d%d&quot;) ...</pre>\n"],["search","OptionParser::List","OptionParser/List.html#method-i-search","(id, key)","<p>Searches <code>key</code> in <code>id</code> list. The result is returned\nor yielded if a block is given. If it isn’t found, nil …\n"],["searcher","Gem","Gem.html#method-c-searcher","()","<p>The GemPathSearcher object used to search for matching installed gems.\n"],["select","Buildr::Compiler","Buildr/Compiler.html#method-c-select","(name)","<p>Select a compiler by its name.\n"],["select","Buildr::Doc","Buildr/Doc.html#method-c-select","(lang)",""],["select","Buildr::Run","Buildr/Run.html#method-c-select","(lang)",""],["select","Buildr::Shell","Buildr/Shell.html#method-c-select","(lang)",""],["select","Buildr::TestFramework","Buildr/TestFramework.html#method-c-select","(name)","<p>Select a test framework by its name.\n"],["select!","Set","Set.html#method-i-select-21","()","<p>Equivalent to Set#keep_if, but returns nil if no changes were made.\n"],["select_by_lang","Buildr::Doc","Buildr/Doc.html#method-c-select_by_lang","(lang)",""],["select_by_lang","Buildr::Run","Buildr/Run.html#method-c-select_by_lang","(lang)",""],["select_by_lang","Buildr::Shell","Buildr/Shell.html#method-c-select_by_lang","(lang)",""],["select_by_name","Buildr::Doc","Buildr/Doc.html#method-c-select_by_name","(name)",""],["select_by_name","Buildr::Run","Buildr/Run.html#method-c-select_by_name","(name)",""],["select_by_name","Buildr::Shell","Buildr/Shell.html#method-c-select_by_name","(name)",""],["select_from","Buildr::TestFramework","Buildr/TestFramework.html#method-c-select_from","(project)","<p>Identify which test framework applies for this project.\n"],["selected?","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-selected-3F","()","<p>Has user selected a version for this requirement?\n"],["send","MultiTkIp_OK","MultiTkIp_OK.html#method-c-send","(thread, ret=nil)",""],["send","UDPSocket","UDPSocket.html#method-i-send","(mesg, flags, *rest)",""],["separator","OptionParser","OptionParser.html#method-i-separator","(string)","<p>Add separator in summary.\n"],["seplist","PP::PPMethods","PP/PPMethods.html#method-i-seplist","(list, sep=nil, iter_method=:each)","<p>Adds a separated list. The list is separated by comma with breakable space,\nby default.\n<p>#seplist iterates …\n"],["serve","GServer","GServer.html#method-i-serve","(io)",""],["set","IPAddr","IPAddr.html#method-i-set","(addr, *family)","<p>Set +@addr+, the internal stored ip address, to given <code>addr</code>.\nThe parameter <code>addr</code> is validated using the …\n"],["set","ProgressBar","ProgressBar.html#method-i-set","(count)",""],["set_backtrace","OptionParser::ParseError","OptionParser/ParseError.html#method-i-set_backtrace","(array)",""],["set_bgerror_handler","MultiTkIp","MultiTkIp.html#method-i-set_bgerror_handler","(cmd = Proc.new, slave = nil, &b)",""],["set_bgerror_handler","MultiTkIp","MultiTkIp.html#method-i-set_bgerror_handler","(cmd = Proc.new, slave = nil, &b)",""],["set_cb_error","MultiTkIp","MultiTkIp.html#method-i-set_cb_error","(cmd = Proc.new)",""],["set_cb_error","MultiTkIp","MultiTkIp.html#method-i-set_cb_error","(cmd = Proc.new)",""],["set_eoutvar","ERB","ERB.html#method-i-set_eoutvar","(compiler, eoutvar = '_erbout')","<p>Can be used to set <em>eoutvar</em> as described in ERB#new.  It’s probably\neasier to just use the constructor …\n"],["set_error","GetoptLong","GetoptLong.html#method-i-set_error","(type, message)","<p>Set an error (a protected method).\n"],["set_eventloop_tick","MultiTkIp","MultiTkIp.html#method-c-set_eventloop_tick","(tick)",""],["set_eventloop_tick","MultiTkIp","MultiTkIp.html#method-c-set_eventloop_tick","(tick)",""],["set_eventloop_tick","RemoteTkIp","RemoteTkIp.html#method-i-set_eventloop_tick","(*args)",""],["set_eventloop_tick","RemoteTkIp","RemoteTkIp.html#method-c-set_eventloop_tick","(*args)",""],["set_eventloop_tick","TclTkLib","TclTkLib.html#method-c-set_eventloop_tick","(tick)","<p>def mainloop_abort_on_exception\n\n<pre>MultiTkIp.mainloop_abort_on_exception</pre>\n<p>end def mainloop_abort_on_exception …\n"],["set_eventloop_weight","MultiTkIp","MultiTkIp.html#method-c-set_eventloop_weight","(loop_max, no_event_tick)",""],["set_eventloop_weight","MultiTkIp","MultiTkIp.html#method-c-set_eventloop_weight","(loop_max, no_event_tick)",""],["set_eventloop_weight","RemoteTkIp","RemoteTkIp.html#method-c-set_eventloop_weight","(*args)",""],["set_eventloop_weight","RemoteTkIp","RemoteTkIp.html#method-i-set_eventloop_weight","(*args)",""],["set_eventloop_weight","TclTkLib","TclTkLib.html#method-c-set_eventloop_weight","(loop_max, no_event_tick)",""],["set_get_line_procs","Tracer","Tracer.html#method-c-set_get_line_procs","(file_name, p = proc)","<p>Register an event handler <code>p</code> which is called everytime a line\nin <code>file_name</code> is executed.\n<p>Example:\n\n<pre>Tracer.set_get_line_procs(&quot;example.rb&quot;, ...</pre>\n"],["set_last_thread","DEBUGGER__","DEBUGGER__.html#method-c-set_last_thread","(th)",""],["set_last_thread","DEBUGGER__","DEBUGGER__.html#method-i-set_last_thread","(th)",""],["set_limit","MultiTkIp","MultiTkIp.html#method-c-set_limit","(limit_type, slave = '', opts = {})",""],["set_limit","MultiTkIp","MultiTkIp.html#method-i-set_limit","(limit_type, slave = '', opts = {})",""],["set_limit","MultiTkIp","MultiTkIp.html#method-i-set_limit","(limit_type, slave = '', opts = {})",""],["set_limit","MultiTkIp","MultiTkIp.html#method-c-set_limit","(limit_type, slave = '', opts = {})",""],["set_log","Logger::Application","Logger/Application.html#method-i-set_log","(logdev, shift_age = 0, shift_size = 1024000)","<p>Sets the log device for this application.  See <code>Logger.new</code> for\nan explanation of the arguments.\n"],["set_no_event_wait","MultiTkIp","MultiTkIp.html#method-c-set_no_event_wait","(tick)",""],["set_no_event_wait","MultiTkIp","MultiTkIp.html#method-c-set_no_event_wait","(tick)",""],["set_no_event_wait","RemoteTkIp","RemoteTkIp.html#method-c-set_no_event_wait","(*args)",""],["set_no_event_wait","RemoteTkIp","RemoteTkIp.html#method-i-set_no_event_wait","(*args)",""],["set_no_event_wait","TclTkLib","TclTkLib.html#method-c-set_no_event_wait","(tick)",""],["set_option","OptionParser::ParseError","OptionParser/ParseError.html#method-i-set_option","(opt, eq)",""],["set_options","GetoptLong","GetoptLong.html#method-i-set_options","(*arguments)","<p>Set options. Takes the same argument as GetoptLong.new.\n<p>Raises a RuntimeError if option processing has …\n"],["set_safe_level","MultiTkIp","MultiTkIp.html#method-i-set_safe_level","(safe)",""],["set_safe_level","MultiTkIp","MultiTkIp.html#method-i-set_safe_level","(safe)",""],["set_safe_level","MultiTkIp","MultiTkIp.html#method-c-set_safe_level","(safe)",""],["set_safe_level","MultiTkIp","MultiTkIp.html#method-c-set_safe_level","(safe)",""],["set_suspend","DEBUGGER__::Context","DEBUGGER__/Context.html#method-i-set_suspend","()",""],["set_trace","DEBUGGER__","DEBUGGER__.html#method-c-set_trace","( arg )",""],["set_trace","DEBUGGER__","DEBUGGER__.html#method-i-set_trace","(arg)",""],["set_trace_all","DEBUGGER__","DEBUGGER__.html#method-i-set_trace_all","(arg)",""],["settings","Buildr","Buildr.html#method-c-settings","()","<p>Returns the Settings associated with this build.\n"],["setup","Buildr::IntegrationTestsTask","Buildr/IntegrationTestsTask.html#method-i-setup","(*prereqs, &block)","<p>Returns the setup task. The setup task is executed before running the\nintegration tests.\n"],["setup","Buildr::TestTask","Buildr/TestTask.html#method-i-setup","(*prereqs, &block)","<p>Returns the setup task. The setup task is executed at the beginning of the\ntest task, after compiling …\n"],["setup","Java::JavaWrapper","Java/JavaWrapper.html#method-i-setup","()","<p><strong>Deprecated:</strong> No longer necessary.\n"],["setup","Object","Object.html#method-i-setup","(options = \"\", *long_options)",""],["sh","FileUtils","FileUtils.html#method-i-sh","(*cmd, &block)","<p>code “borrowed” directly from Rake\n"],["share_stderr","MultiTkIp","MultiTkIp.html#method-i-share_stderr","(dist, src = '')",""],["share_stderr","MultiTkIp","MultiTkIp.html#method-c-share_stderr","(dist, src = '')",""],["share_stderr","MultiTkIp","MultiTkIp.html#method-i-share_stderr","(dist, src = '')",""],["share_stderr","MultiTkIp","MultiTkIp.html#method-c-share_stderr","(dist, src = '')",""],["share_stdin","MultiTkIp","MultiTkIp.html#method-i-share_stdin","(dist, src = '')",""],["share_stdin","MultiTkIp","MultiTkIp.html#method-i-share_stdin","(dist, src = '')",""],["share_stdin","MultiTkIp","MultiTkIp.html#method-c-share_stdin","(dist, src = '')",""],["share_stdin","MultiTkIp","MultiTkIp.html#method-c-share_stdin","(dist, src = '')",""],["share_stdio","MultiTkIp","MultiTkIp.html#method-c-share_stdio","(dist, src = '')",""],["share_stdio","MultiTkIp","MultiTkIp.html#method-i-share_stdio","(dist, src = '')",""],["share_stdio","MultiTkIp","MultiTkIp.html#method-i-share_stdio","(dist, src = '')",""],["share_stdio","MultiTkIp","MultiTkIp.html#method-c-share_stdio","(dist, src = '')",""],["share_stdout","MultiTkIp","MultiTkIp.html#method-c-share_stdout","(dist, src = '')",""],["share_stdout","MultiTkIp","MultiTkIp.html#method-c-share_stdout","(dist, src = '')",""],["share_stdout","MultiTkIp","MultiTkIp.html#method-i-share_stdout","(dist, src = '')",""],["share_stdout","MultiTkIp","MultiTkIp.html#method-i-share_stdout","(dist, src = '')",""],["shell","Buildr::Shell","Buildr/Shell.html#method-i-shell","(&block)","<p>This method returns the project’s shell task. It also accepts a block to be\nexecuted when the shell task …\n"],["shellescape","Shellwords","Shellwords.html#method-c-shellescape","(str)","<p>Escapes a string so that it can be safely used in a Bourne shell command\nline.\n<p>Note that a resulted string …\n"],["shellescape","String","String.html#method-i-shellescape","()","<p>Escapes <code>str</code> so that it can be safely used in a Bourne shell\ncommand line.  See Shellwords::shellescape …\n"],["shelljoin","Array","Array.html#method-i-shelljoin","()","<p>Builds a command line string from an argument list <code>array</code>\njoining all elements escaped for Bourne shell …\n"],["shelljoin","Shellwords","Shellwords.html#method-c-shelljoin","(array)","<p>Builds a command line string from an argument list <code>array</code>\njoining all elements escaped for Bourne shell …\n"],["shellsplit","Shellwords","Shellwords.html#method-c-shellsplit","(line)","<p>Splits a string into an array of tokens in the same way the UNIX Bourne\nshell does.\n\n<pre>argv = Shellwords.split('here ...</pre>\n"],["shellsplit","String","String.html#method-i-shellsplit","()","<p>Splits <code>str</code> into an array of tokens in the same way the UNIX\nBourne shell does.  See Shellwords::shellsplit …\n"],["shellwords","Shellwords","Shellwords.html#method-c-shellwords","(line)",""],["shift","CSV","CSV.html#method-i-shift","()","<p>The primary read method for wrapped Strings and IOs, a single row is pulled\nfrom the data source, parsed …\n"],["shift","Queue","Queue.html#method-i-shift","(non_block=false)","<p>Alias of pop\n"],["shift","SizedQueue","SizedQueue.html#method-i-shift","(*args)","<p>Alias of pop\n"],["short_names","Buildr::Eclipse::Options","Buildr/Eclipse/Options.html#method-i-short_names","()",""],["shutdown","GServer","GServer.html#method-i-shutdown","()","<p>Schedule a shutdown for the server\n"],["signal","ConditionVariable","ConditionVariable.html#method-i-signal","()","<p>Wakes up the first thread in line waiting for this lock.\n"],["signal","MonitorMixin::ConditionVariable","MonitorMixin/ConditionVariable.html#method-i-signal","()","<p>Wakes up the first thread in line waiting for this lock.\n"],["signal_handle","IRB::Irb","IRB/Irb.html#method-i-signal_handle","()",""],["signal_status","IRB::Irb","IRB/Irb.html#method-i-signal_status","(status)",""],["simplelist","TkComm","TkComm.html#method-c-simplelist","(val, src_enc=true, dst_enc=true)",""],["sin","CMath","CMath.html#method-c-sin","(z)","<p>returns the sine of <code>z</code>, where <code>z</code> is given in\nradians\n"],["sin!","CMath","CMath.html#method-c-sin-21","(z)",""],["single_delegate","SingleForwardable","SingleForwardable.html#method-i-single_delegate","(hash)","<p>Takes a hash as its argument.  The key is a symbol or an array of symbols. \nThese symbols correspond …\n"],["singleline_format","PrettyPrint","PrettyPrint.html#method-c-singleline_format","(output='', maxwidth=nil, newline=nil, genspace=nil)","<p>This is similar to PrettyPrint::format but the result has no breaks.\n<p><code>maxwidth</code>, <code>newline</code> and <code>genspace</code> are\n...\n"],["singleline_pp","PP","PP.html#method-c-singleline_pp","(obj, out=$>)","<p>Outputs <code>obj</code> to <code>out</code> like PP.pp but with no indent\nand newline.\n<p>PP.singleline_pp returns <code>out</code>.\n"],["singular?","Matrix","Matrix.html#method-i-singular-3F","()","<p>Returns <code>true</code> is this is a singular matrix.\n"],["sinh","CMath","CMath.html#method-c-sinh","(z)","<p>returns the hyperbolic sine of <code>z</code>, where <code>z</code> is\ngiven in radians\n"],["sinh!","CMath","CMath.html#method-c-sinh-21","(z)",""],["size","Queue","Queue.html#method-i-size","()","<p>Alias of length.\n"],["size","Set","Set.html#method-i-size","()","<p>Returns the number of elements.\n"],["size","Tempfile","Tempfile.html#method-i-size","()","<p>Returns the size of the temporary file.  As a side effect, the IO buffer is\nflushed before determining …\n"],["size","Vector","Vector.html#method-i-size","()","<p>Returns the number of elements in the vector.\n"],["skip_blanks?","CSV","CSV.html#method-i-skip_blanks-3F","()","<p>Returns <code>true</code> blank lines are skipped by the parser. See\nCSV::new for details.\n"],["skip_content!","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-skip_content-21","()",""],["skip_content?","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-skip_content-3F","()",""],["slave?","MultiTkIp","MultiTkIp.html#method-c-slave-3F","()",""],["slave?","MultiTkIp","MultiTkIp.html#method-i-slave-3F","()",""],["slave?","MultiTkIp","MultiTkIp.html#method-i-slave-3F","()",""],["slave?","MultiTkIp","MultiTkIp.html#method-c-slave-3F","()",""],["slaves","MultiTkIp","MultiTkIp.html#method-i-slaves","(all = false)",""],["slaves","MultiTkIp","MultiTkIp.html#method-i-slaves","(all = false)",""],["slaves","MultiTkIp","MultiTkIp.html#method-c-slaves","(all = false)",""],["slaves","MultiTkIp","MultiTkIp.html#method-c-slaves","(all = false)",""],["sleep","Mutex_m","Mutex_m.html#method-i-sleep","(timeout = nil)",""],["slice_ary","TkComm","TkComm.html#method-c-slice_ary","(ary, size)",""],["snapshot?","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-snapshot-3F","()",""],["source_index","Gem","Gem.html#method-c-source_index","()","<p>Returns the Gem::SourceIndex of specifications that are in the Gem.path\n"],["sources","Buildr::ResourcesTask","Buildr/ResourcesTask.html#method-i-sources","()","<p>Returns the list of source directories (each being a file task).\n"],["sources","Gem","Gem.html#method-c-sources","()","<p>Returns an Array of sources to fetch remote gems from.  If the sources list\nis empty, attempts to load …\n"],["sources=","Gem","Gem.html#method-c-sources-3D","(new_sources)","<p>Need to be able to set the sources without calling Gem.sources.replace\nsince that would cause an infinite …\n"],["sources_artifact","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-sources_artifact","()","<p>Convenience method that returns a sources artifact.\n"],["spec","Buildr::PackageGemTask","Buildr/PackageGemTask.html#method-i-spec","()",""],["specify","Buildr::Doc::Base","Buildr/Doc/Base.html#method-c-specify","(options)",""],["specify","Buildr::Run::Base","Buildr/Run/Base.html#method-c-specify","(options)",""],["specify","Buildr::Shell::Base","Buildr/Shell/Base.html#method-c-specify","(options)",""],["specs","Buildr::Scala::ScalaTest","Buildr/Scala/ScalaTest.html#method-c-specs","()",""],["specs","Buildr::Scala::Specs","Buildr/Scala/Specs.html#method-c-specs","()",""],["specs","Buildr::Scala::Specs2","Buildr/Scala/Specs2.html#method-c-specs","()",""],["split","Shellwords","Shellwords.html#method-c-split","(line)",""],["sqrt","CMath","CMath.html#method-c-sqrt","(z)","<p>Returns the non-negative square root of Complex.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">sqrt</span>(<span class=\"ruby-value\">-1</span>)            <span class=\"ruby-comment\">#=&gt; 0+1.0i</span>\n<span class=\"ruby-identifier\">sqrt</span>(<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">-1</span>,<span class=\"ruby-value\">0</span>)) <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n"],["sqrt","Math","Math.html#method-c-sqrt","(a)","<p>Computes the square root of <code>a</code>.  It makes use of Complex and\nRational to have no rounding errors if possible. …\n"],["sqrt!","CMath","CMath.html#method-c-sqrt-21","(z)",""],["square?","Matrix","Matrix.html#method-i-square-3F","()","<p>Returns <code>true</code> is this is a square matrix.\n"],["start","Buildr::TestFramework::TestResult::YamlFormatter","Buildr/TestFramework/TestResult/YamlFormatter.html#method-i-start","(example_count)",""],["start","GServer","GServer.html#method-i-start","(maxConnections = -1)","<p>Start the server if it isn’t already running\n<p>maxConnections &mdash; override <code>maxConnections</code> given to the constructor. …\n\n"],["start","IRB","IRB.html#method-c-start","(ap_path = nil)","<p>initialize IRB and start TOP_LEVEL irb\n"],["start","Logger::Application","Logger/Application.html#method-i-start","()","<p>Start the application.  Return the status code.\n"],["start","ProgressBar","ProgressBar.html#method-c-start","(args, &block)",""],["start","ProgressBar","ProgressBar.html#method-i-start","()",""],["start_profile","Profiler__","Profiler__.html#method-i-start_profile","()",""],["starting","GServer","GServer.html#method-i-starting","()","<p>Called when the server is starting up, if auditing is enabled.\n"],["stdout","DEBUGGER__","DEBUGGER__.html#method-c-stdout","()",""],["stdout","DEBUGGER__","DEBUGGER__.html#method-i-stdout","()",""],["stdout=","DEBUGGER__","DEBUGGER__.html#method-c-stdout-3D","(s)",""],["stop","GServer","GServer.html#method-c-stop","(port, host = DEFAULT_HOST)","<p>Stop the server running on the given port, bound to the given host\n<p>port &mdash; port, as a FixNum, of the server …\n"],["stop","GServer","GServer.html#method-i-stop","()","<p>Stop the server\n"],["stop_next","DEBUGGER__::Context","DEBUGGER__/Context.html#method-i-stop_next","(n=1)",""],["stop_profile","Profiler__","Profiler__.html#method-i-stop_profile","()",""],["stopped?","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-stopped-3F","()",""],["stopped?","GServer","GServer.html#method-i-stopped-3F","()","<p>Returns true if the server has stopped.\n"],["stopping","GServer","GServer.html#method-i-stopping","()","<p>Called when the server is shutting down, if auditing is enabled.\n"],["strict_decode64","Base64","Base64.html#method-i-strict_decode64","(str)","<p>Returns the Base64-decoded version of <code>str</code>. This method\ncomplies with RFC 4648. ArgumentError is raised …\n"],["strict_encode64","Base64","Base64.html#method-i-strict_encode64","(bin)","<p>Returns the Base64-encoded version of <code>bin</code>. This method\ncomplies with RFC 4648. No line feeds are added. …\n"],["strongly_connected_components","TSort","TSort.html#method-i-strongly_connected_components","()","<p>Returns strongly connected components as an array of arrays of nodes. The\narray is sorted from children …\n"],["strptime","Time","Time.html#method-c-strptime","(date, format, now=self.now)","<p>Parses <code>date</code> using Date._strptime and converts it to a Time\nobject.\n<p>If a block is given, the year described …\n"],["struct","Buildr","Buildr.html#method-i-struct","(hash)","<p>Convenience method for creating an anonymous Struct.\n<p>For example:\n\n<pre>COMMONS             = struct(\n  :collections ...</pre>\n"],["subdomain_of?","Resolv::DNS::Name","Resolv/DNS/Name.html#method-i-subdomain_of-3F","(other)","<p>Returns true if <code>other</code> is a subdomain.\n<p>Example:\n\n<pre>domain = Resolv::DNS::Name.create(&quot;y.z&quot;)\np Resolv::DNS::Name.create(&quot;w.x.y.z&quot;).subdomain_of?(domain) ...</pre>\n"],["subset?","Set","Set.html#method-i-subset-3F","(set)","<p>Returns true if the set is a subset of the given set.\n"],["subst","TkComm","TkComm.html#method-i-subst","(str, *opts)",""],["subtract","Set","Set.html#method-i-subtract","(enum)","<p>Deletes every element that appears in the given enumerable object and\nreturns self.\n"],["succ","IPAddr","IPAddr.html#method-i-succ","()","<p>Returns the successor to the ipaddr.\n"],["succ","Prime::EratosthenesGenerator","Prime/EratosthenesGenerator.html#method-i-succ","()",""],["succ","Prime::Generator23","Prime/Generator23.html#method-i-succ","()",""],["succ","Prime::OldCompatibility","Prime/OldCompatibility.html#method-i-succ","()","<p>Returns the next prime number and forwards internal pointer.\n"],["succ","Prime::PseudoPrimeGenerator","Prime/PseudoPrimeGenerator.html#method-i-succ","()","<p>returns the next pseudo-prime number, and move the internal position\nforward.\n<p><code>PseudoPrimeGenerator</code>#succ ...\n"],["succ","Prime::TrialDivisionGenerator","Prime/TrialDivisionGenerator.html#method-i-succ","()",""],["success?","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-success-3F","()",""],["suffix","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-suffix","()",""],["suffix_pattern","Gem","Gem.html#method-c-suffix_pattern","()","<p>Glob pattern for require-able path suffixes.\n"],["suffixes","Gem","Gem.html#method-c-suffixes","()","<p>Suffixes for require-able paths.\n"],["summarize","OptionParser","OptionParser.html#method-i-summarize","(to = [], width = @summary_width, max = width - 1, indent = @summary_indent, &blk)","<p>Puts option summary into <code>to</code> and returns <code>to</code>.\nYields each line if a block is given.\n<p>to &mdash; Output destination, …\n"],["summarize","OptionParser::List","OptionParser/List.html#method-i-summarize","(*args, &block)","<p>Creates the summary table, passing each line to the <code>block</code>\n(without newline). The arguments <code>args</code> are passed …\n"],["summarize","OptionParser::Switch","OptionParser/Switch.html#method-i-summarize","(sdone = [], ldone = [], width = 1, max = width - 1, indent = \"\")","<p>Produces the summary text. Each line of the summary is yielded to the block\n(without newline).\n<p>sdone &mdash; "],["superset?","Set","Set.html#method-i-superset-3F","(set)","<p>Returns true if the set is a superset of the given set.\n"],["suspend","DEBUGGER__","DEBUGGER__.html#method-c-suspend","()",""],["suspend_all","DEBUGGER__::Context","DEBUGGER__/Context.html#method-i-suspend_all","()",""],["suspend_context","IRB::Irb","IRB/Irb.html#method-i-suspend_context","(context)",""],["suspend_input_method","IRB::Irb","IRB/Irb.html#method-i-suspend_input_method","(input_method)",""],["suspend_name","IRB::Irb","IRB/Irb.html#method-i-suspend_name","(path = nil, name = nil)",""],["suspend_workspace","IRB::Irb","IRB/Irb.html#method-i-suspend_workspace","(workspace)",""],["switch_name","OptionParser::Switch","OptionParser/Switch.html#method-i-switch_name","()","<p>Main name of the switch.\n"],["symlink","FileUtils","FileUtils.html#method-c-symlink","(src, dest, options = {})",""],["symmetric?","Matrix","Matrix.html#method-i-symmetric-3F","()","<p>Returns <code>true</code> is this is a symmetric matrix. Raises an error if\nmatrix is not square.\n"],["sync_exclusive?","Sync_m","Sync_m.html#method-i-sync_exclusive-3F","()",""],["sync_exclusive?","Sync_m","Sync_m.html#method-i-sync_exclusive-3F","()",""],["sync_extend","Sync_m","Sync_m.html#method-i-sync_extend","()",""],["sync_extend","Sync_m","Sync_m.html#method-i-sync_extend","()",""],["sync_inspect","Sync_m","Sync_m.html#method-i-sync_inspect","()",""],["sync_inspect","Sync_m","Sync_m.html#method-i-sync_inspect","()",""],["sync_lock","Sync_m","Sync_m.html#method-i-sync_lock","(m = EX)",""],["sync_lock","Sync_m","Sync_m.html#method-i-sync_lock","(m = EX)",""],["sync_locked?","Sync_m","Sync_m.html#method-i-sync_locked-3F","()","<p>accessing\n"],["sync_locked?","Sync_m","Sync_m.html#method-i-sync_locked-3F","()","<p>accessing\n"],["sync_shared?","Sync_m","Sync_m.html#method-i-sync_shared-3F","()",""],["sync_shared?","Sync_m","Sync_m.html#method-i-sync_shared-3F","()",""],["sync_synchronize","Sync_m","Sync_m.html#method-i-sync_synchronize","(mode = EX)",""],["sync_synchronize","Sync_m","Sync_m.html#method-i-sync_synchronize","(mode = EX)",""],["sync_try_lock","Sync_m","Sync_m.html#method-i-sync_try_lock","(mode = EX)","<p>locking methods.\n"],["sync_try_lock","Sync_m","Sync_m.html#method-i-sync_try_lock","(mode = EX)","<p>locking methods.\n"],["sync_unlock","Sync_m","Sync_m.html#method-i-sync_unlock","(m = EX)",""],["sync_unlock","Sync_m","Sync_m.html#method-i-sync_unlock","(m = EX)",""],["synchronize","MonitorMixin","MonitorMixin.html#method-i-synchronize","()",""],["system_path=","Shell","Shell.html#method-i-system_path-3D","(path)",""],["t","Matrix","Matrix.html#method-i-t","()",""],["table","CSV","CSV.html#method-c-table","(path, options = Hash.new)","<p>A shortcut for:\n\n<pre>CSV.read( path, { headers:           true,\n                  converters:        :numeric, ...</pre>\n"],["table","MultiTkIp","MultiTkIp.html#method-c-table","()",""],["table","MultiTkIp","MultiTkIp.html#method-c-table","()",""],["tag_release","Buildr::GitRelease","Buildr/GitRelease.html#method-i-tag_release","(tag)","<p>Add a tag reference in .git/refs/tags and push it to the remote if any. If\na tag with the same name already …\n"],["tag_release","Buildr::HgRelease","Buildr/HgRelease.html#method-i-tag_release","(tag)","<p>Tag this release in Mercurial\n"],["tag_release","Buildr::SvnRelease","Buildr/SvnRelease.html#method-i-tag_release","(tag)",""],["tagurize","Syck","Syck.html#method-c-tagurize","( val )","<p>Convert a type_id to a taguri\n"],["taint","Delegator","Delegator.html#method-i-taint","","<p>Taint both the object returned by __getobj__ and self.\n"],["tan","CMath","CMath.html#method-c-tan","(z)","<p>returns the tangent of <code>z</code>, where <code>z</code> is given in\nradians\n"],["tan!","CMath","CMath.html#method-c-tan-21","(z)",""],["tanh","CMath","CMath.html#method-c-tanh","(z)","<p>returns the hyperbolic tangent of <code>z</code>, where <code>z</code> is\ngiven in radians\n"],["tanh!","CMath","CMath.html#method-c-tanh-21","(z)",""],["tar","Object","Object.html#method-i-tar","(file)","<p>The TarTask creates a new Tar file. You can include any number of files and\nand directories, use exclusion …\n"],["target","Buildr::Build","Buildr/Build.html#method-i-target","()","<p><strong>Deprecated:</strong> Use +path_to(:target)+ instead.\n"],["target","Buildr::Filter","Buildr/Filter.html#method-i-target","()","<p>The target directory as a file task.\n"],["target","Buildr::ResourcesTask","Buildr/ResourcesTask.html#method-i-target","()","<p>Returns the filter’s target directory as a file task.\n"],["target=","Buildr::Build","Buildr/Build.html#method-i-target-3D","(dir)","<p><strong>Deprecated:</strong> Use Layout instead.\n"],["task","Buildr::Project","Buildr/Project.html#method-i-task","(*args, &block)","<p>Creates and returns a new task in the project. Similar to calling Rake’s\ntask method, but prefixes the …\n"],["tcp","Socket","Socket.html#method-c-tcp","(host, port, local_host=nil, local_port=nil)","<p>creates a new socket object connected to host:port using TCP/IP.\n<p>If local_host:local_port is given, the …\n"],["tcp_server_loop","Socket","Socket.html#method-c-tcp_server_loop","(host=nil, port)","<p>creates a TCP/IP server on <em>port</em> and calls the block for each\nconnection accepted. The block is called …\n"],["tcp_server_sockets","Socket","Socket.html#method-c-tcp_server_sockets","(host=nil, port)","<p>creates TCP/IP server sockets for <em>host</em> and <em>port</em>.\n<em>host</em> is optional.\n<p>If no block given, it returns an array …\n"],["teardown","Buildr::IntegrationTestsTask","Buildr/IntegrationTestsTask.html#method-i-teardown","(*prereqs, &block)","<p>Returns the teardown task. The teardown task is executed after running the\nintegration tests.\n"],["teardown","Buildr::TestTask","Buildr/TestTask.html#method-i-teardown","(*prereqs, &block)","<p>Returns the teardown task. The teardown task is executed at the end of the\ntest task.\n"],["terminate","GetoptLong","GetoptLong.html#method-i-terminate","()","<p>Explicitly terminate option processing.\n"],["terminate","OptionParser","OptionParser.html#method-i-terminate","(arg = nil)","<p>Terminates option parsing. Optional parameter <code>arg</code> is a string\npushed back to be the first non-option …\n"],["terminate","OptionParser","OptionParser.html#method-c-terminate","(arg = nil)",""],["terminated?","GetoptLong","GetoptLong.html#method-i-terminated-3F","()","<p>Returns true if option processing has terminated, false otherwise.\n"],["test","Buildr::Options","Buildr/Options.html#method-i-test","()","<p>Returns the test option (environment variable TEST). Possible values are:\n<p>:false – Do not run any tests …\n"],["test","Buildr::Test","Buildr/Test.html#method-i-test","(*prereqs, &block)","<p>Returns the test task. The test task controls the entire test lifecycle.\n<p>You can use the test task in …\n"],["test=","Buildr::Options","Buildr/Options.html#method-i-test-3D","(flag)","<p>Sets the test option (environment variable TEST). Possible values are true,\nfalse or :all.\n<p>You can also …\n"],["test_dependencies","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-test_dependencies","()",""],["test_dependency_details","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-test_dependency_details","()",""],["test_output_dir","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-test_output_dir","()",""],["test_source_directories","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-test_source_directories","()",""],["tests","Buildr::MultiTest","Buildr/MultiTest.html#method-i-tests","(dependencies)",""],["tests","Buildr::Scala::Specs","Buildr/Scala/Specs.html#method-i-tests","(dependencies)",""],["tests","Buildr::Scala::Specs2","Buildr/Scala/Specs2.html#method-i-tests","(dependencies)",""],["tests","Buildr::TestFramework::Base","Buildr/TestFramework/Base.html#method-i-tests","(dependencies)","<p>TestTask calls this method to return a list of test names that can be run\nin this project. It then applies …\n"],["text","PrettyPrint","PrettyPrint.html#method-i-text","(obj, width=obj.length)","<p>This adds <code>obj</code> as a text of <code>width</code> columns in\nwidth.\n<p>If <code>width</code> is not specified, obj.length is used.\n"],["text","PrettyPrint::SingleLine","PrettyPrint/SingleLine.html#method-i-text","(obj, width=nil)",""],["thnum","DEBUGGER__","DEBUGGER__.html#method-i-thnum","()",""],["thread_eval_proc","MultiTkIp","MultiTkIp.html#method-i-thread_eval_proc","(*args)",""],["thread_eval_proc","MultiTkIp","MultiTkIp.html#method-c-thread_eval_proc","(*args, &blk)",""],["thread_eval_proc","MultiTkIp","MultiTkIp.html#method-i-thread_eval_proc","(*args)",""],["thread_eval_proc","MultiTkIp","MultiTkIp.html#method-c-thread_eval_proc","(*args, &blk)",""],["thread_list","DEBUGGER__","DEBUGGER__.html#method-c-thread_list","(num)",""],["thread_list_all","DEBUGGER__","DEBUGGER__.html#method-c-thread_list_all","()",""],["time","Gem","Gem.html#method-c-time","(msg, width = 0, display = Gem.configuration.verbose)","<p>Prints the amount of time the supplied block takes to run using the debug\nUI output.\n"],["time","ProgressBar","ProgressBar.html#method-i-time","()",""],["timeout","Object","Object.html#method-i-timeout","(n, e = nil, &block)","<p>Identical to:\n\n<pre>Timeout::timeout(n, e, &amp;block).</pre>\n<p>This method is deprecated and provided only for backwards …\n"],["timeout","Timeout","Timeout.html#method-c-timeout","(sec, klass = nil)","<p>Perform an operation in a block, timing it out if it takes longer than\n<code>sec</code> seconds to complete.\n<p>sec &mdash; Number …\n"],["timestamp","Buildr::Util","Buildr/Util.html#method-i-timestamp","(file)","<p>Return the timestamp of file, without having to create a file task\n"],["title","ProgressBar","ProgressBar.html#method-i-title","()",""],["tk_cmd_tbl","MultiTkIp","MultiTkIp.html#method-c-tk_cmd_tbl","()",""],["tk_cmd_tbl","MultiTkIp","MultiTkIp.html#method-c-tk_cmd_tbl","()",""],["tk_object_table","MultiTkIp","MultiTkIp.html#method-c-tk_object_table","(id)",""],["tk_object_table","MultiTkIp","MultiTkIp.html#method-c-tk_object_table","(id)",""],["tk_tcl2ruby","TkComm","TkComm.html#method-c-tk_tcl2ruby","(val, enc_mode = false, listobj = true)",""],["tk_windows","MultiTkIp","MultiTkIp.html#method-c-tk_windows","()",""],["tk_windows","MultiTkIp","MultiTkIp.html#method-c-tk_windows","()",""],["tmpdir","Dir","Dir.html#method-c-tmpdir","()","<p>Returns the operating system’s temporary file path.\n"],["to_a","Benchmark::Tms","Benchmark/Tms.html#method-i-to_a","()","<p>Returns a new 6-element array, consisting of the label, user CPU time,\nsystem CPU time, children’s user …\n"],["to_a","CSV::Table","CSV/Table.html#method-i-to_a","()","<p>Returns the table as an Array of Arrays.  Headers will be the first row,\nthen all of the field rows will …\n"],["to_a","Matrix","Matrix.html#method-i-to_a","()","<p>Returns an array of arrays that describe the rows of the matrix.\n"],["to_a","OptionParser","OptionParser.html#method-i-to_a","()","<p>Returns option summary list.\n"],["to_a","Set","Set.html#method-i-to_a","()","<p>Converts the set to an array.  The order of elements is uncertain.\n"],["to_a","Vector","Vector.html#method-i-to_a","()","<p>Returns the elements of the vector in an array.\n"],["to_csv","Array","Array.html#method-i-to_csv","(options = Hash.new)","<p>Equivalent to <code>CSV::generate_line(self, options)</code>.\n"],["to_csv","CSV::Row","CSV/Row.html#method-i-to_csv","(options = Hash.new)","<p>Returns the row as a CSV String.  Headers are not used.  Equivalent to:\n\n<pre>csv_row.fields.to_csv( options ...</pre>\n"],["to_csv","CSV::Table","CSV/Table.html#method-i-to_csv","(options = Hash.new)","<p>Returns the table as a complete CSV String.  Headers will be listed first,\nthen all of the field rows. …\n"],["to_eval","MultiTkIp","MultiTkIp.html#method-c-to_eval","()",""],["to_eval","MultiTkIp","MultiTkIp.html#method-i-to_eval","()",""],["to_eval","MultiTkIp","MultiTkIp.html#method-i-to_eval","()",""],["to_eval","MultiTkIp","MultiTkIp.html#method-c-to_eval","()",""],["to_hash","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-to_hash","()",""],["to_hash","Buildr::Artifact","Buildr/Artifact.html#method-c-to_hash","(spec)","<p>Turn a spec into a hash. This method accepts a String, Hash or any object\nthat responds to the method …\n"],["to_hash","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-c-to_hash","(spec)","<p>Differs from Artifact.to_hash in that 1) it does not choke when version\nisn’t present and 2) it assumes …\n"],["to_hash","CSV::Row","CSV/Row.html#method-i-to_hash","()","<p>Collapses the row into a simple Hash.  Be warning that this discards field\norder and clobbers duplicate …\n"],["to_i","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-to_i","()",""],["to_i","IPAddr","IPAddr.html#method-i-to_i","()","<p>Returns the integer representation of the ipaddr.\n"],["to_int","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-to_int","()",""],["to_java","Array","Array.html#method-i-to_java","(cls)","<p>Converts a Ruby array into a typed Java array, argument specifies the\nelement type. This is necessary …\n"],["to_java_properties","Hash","Hash.html#method-i-to_java_properties","()","<p>Convert hash to string format used for Java properties file. For example:\n\n<pre class=\"ruby\">{ <span class=\"ruby-string\">'foo'</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">'bar'</span>, <span class=\"ruby-string\">'baz'</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">'fab'</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["to_json","Psych","Psych.html#method-c-to_json","(o)","<p>Dump Ruby object <code>o</code> to a JSON string.\n"],["to_name","Resolv::IPv4","Resolv/IPv4.html#method-i-to_name","()","<p>Turns this IPv4 address into a Resolv::DNS::Name.\n"],["to_name","Resolv::IPv6","Resolv/IPv6.html#method-i-to_name","()","<p>Turns this IPv6 address into a Resolv::DNS::Name.\n"],["to_range","IPAddr","IPAddr.html#method-i-to_range","()","<p>Creates a Range object for the network address.\n"],["to_requirement_spec","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-to_requirement_spec","()","<p>Format this requirement as an `artifact requirement spec`\n"],["to_s","Benchmark::Tms","Benchmark/Tms.html#method-i-to_s","()","<p>Same as #format.\n"],["to_s","Buildr::Filter","Buildr/Filter.html#method-i-to_s","()","<p>Returns the target directory.\n"],["to_s","Buildr::Packaging::Java::Manifest","Buildr/Packaging/Java/Manifest.html#method-i-to_s","()","<p>Convert to MANIFEST.MF format.\n"],["to_s","Buildr::ProcessStatus","Buildr/ProcessStatus.html#method-i-to_s","()",""],["to_s","Buildr::Unzip","Buildr/Unzip.html#method-i-to_s","()","<p>Returns the path to the target directory.\n"],["to_s","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-i-to_s","()","<p>return the parsed expression\n"],["to_s","CSV::Row","CSV/Row.html#method-i-to_s","(options = Hash.new)",""],["to_s","CSV::Table","CSV/Table.html#method-i-to_s","(options = Hash.new)",""],["to_s","IPAddr","IPAddr.html#method-i-to_s","()","<p>Returns a string containing the IP address representation.\n"],["to_s","Matrix","Matrix.html#method-i-to_s","()","<p>Overrides Object#to_s\n"],["to_s","OpenStruct","OpenStruct.html#method-i-to_s","()",""],["to_s","OptionParser","OptionParser.html#method-i-to_s","()",""],["to_s","OptionParser::ParseError","OptionParser/ParseError.html#method-i-to_s","()",""],["to_s","Resolv::DNS::Name","Resolv/DNS/Name.html#method-i-to_s","()","<p>returns the domain name as a string.\n<p>The domain name doesn’t have a trailing dot even if the name object …\n"],["to_s","TkCore","TkCore.html#method-c-to_s","()",""],["to_s","TkCore","TkCore.html#method-i-to_s","()",""],["to_s","URI::FILE","URI/FILE.html#method-i-to_s","()",""],["to_s","Vector","Vector.html#method-i-to_s","()","<p>Overrides Object#to_s\n"],["to_set","Enumerable","Enumerable.html#method-i-to_set","(klass = Set, *args, &block)","<p>Makes a set from the enumerable object with given arguments. Needs to\n+require “set”+ to use …\n"],["to_spec","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-to_spec","()","<p>Returns the artifact specification, in the structure:\n\n<pre>&lt;group&gt;:&lt;artifact&gt;:&lt;type&gt;:&lt;version&gt;</pre>\n<p>or\n"],["to_spec","Buildr::Artifact","Buildr/Artifact.html#method-c-to_spec","(hash)","<p>Convert a hash back to a spec string. This method accepts a string, hash or\nany object that responds …\n"],["to_spec_hash","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-to_spec_hash","()","<p>Returns the artifact specification as a hash. For example:\n\n<pre>com.example:app:jar:1.2</pre>\n<p>becomes:\n"],["to_string","IPAddr","IPAddr.html#method-i-to_string","()","<p>Returns a string containing the IP address representation in canonical\nform.\n"],["to_sym","Buildr::Doc::Base","Buildr/Doc/Base.html#method-c-to_sym","()",""],["to_sym","Buildr::Run::Base","Buildr/Run/Base.html#method-c-to_sym","()",""],["to_sym","Buildr::Shell::Base","Buildr/Shell/Base.html#method-c-to_sym","()",""],["to_sym","Buildr::TestFramework::Base","Buildr/TestFramework/Base.html#method-c-to_sym","()","<p>The framework’s identifier (e.g. :junit).  Inferred from the class name.\n"],["toeuc","Kconv","Kconv.html#method-c-toeuc","(str)","<p>Convert <code>str</code> to EUC-JP\n"],["toeuc","String","String.html#method-i-toeuc","()","<p>Convert <code>self</code> to EUC-JP\n"],["tojis","Kconv","Kconv.html#method-c-tojis","(str)","<p>Convert <code>str</code> to ISO-2022-JP\n"],["tojis","String","String.html#method-i-tojis","()","<p>Convert <code>self</code> to ISO-2022-JP\n"],["tolocale","Kconv","Kconv.html#method-c-tolocale","(str)","<p>Convert <code>self</code> to locale encoding\n"],["tolocale","String","String.html#method-i-tolocale","()","<p>Convert <code>self</code> to locale encoding\n"],["top","OptionParser","OptionParser.html#method-i-top","()","<p>Subject of #on / #on_head, #accept / #reject\n"],["top","OptionParser","OptionParser.html#method-c-top","()",""],["tosjis","Kconv","Kconv.html#method-c-tosjis","(str)","<p>Convert <code>str</code> to Shift_JIS\n"],["tosjis","String","String.html#method-i-tosjis","()","<p>Convert <code>self</code> to Shift_JIS\n"],["total","ProgressBar","ProgressBar.html#method-i-total","()",""],["touch","FileUtils","FileUtils.html#method-c-touch","(list, options = {})","<p>Options: noop verbose\n<p>Updates modification time (mtime) and access time (atime) of file(s) in\n<code>list</code>.   …\n"],["touch","Object","Object.html#method-i-touch","()","<p>Update the access and modification times of each FILE to the current time.\n\n<pre>ruby -run -e touch -- [OPTION] ...</pre>\n"],["toutf16","Kconv","Kconv.html#method-c-toutf16","(str)","<p>Convert <code>str</code> to UTF-16\n"],["toutf16","String","String.html#method-i-toutf16","()","<p>Convert <code>self</code> to UTF-16\n"],["toutf32","Kconv","Kconv.html#method-c-toutf32","(str)","<p>Convert <code>str</code> to UTF-32\n"],["toutf32","String","String.html#method-i-toutf32","()","<p>Convert <code>self</code> to UTF-32\n"],["toutf8","Kconv","Kconv.html#method-c-toutf8","(str)","<p>Convert <code>str</code> to UTF-8\n"],["toutf8","String","String.html#method-i-toutf8","()","<p>Convert <code>self</code> to UTF-8\n"],["tr","Matrix","Matrix.html#method-i-tr","()",""],["trace","Matrix","Matrix.html#method-i-trace","()","<p>Returns the trace (sum of diagonal elements) of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">7</span>,<span class=\"ruby-value\">6</span>], [<span class=\"ruby-value\">3</span>,<span class=\"ruby-value\">9</span>]].<span class=\"ruby-identifier\">trace</span>\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">16</span>\n</pre>\n"],["trace","Object","Object.html#method-i-trace","(message)","<p>Show message.  The message is printed out only when running in trace mode.\n"],["trace?","DEBUGGER__","DEBUGGER__.html#method-i-trace-3F","()",""],["trace?","Object","Object.html#method-i-trace-3F","(*category)",""],["trace_func","DEBUGGER__","DEBUGGER__.html#method-i-trace_func","(event, file, line, id, binding, klass)",""],["trace_func","Tracer","Tracer.html#method-c-trace_func","(*vars)",""],["transaction","PStore","PStore.html#method-i-transaction","(read_only = false)","<p>Opens a new transaction for the data store.  Code executed inside a block\npassed to this method may read …\n"],["transfer","Syck","Syck.html#method-c-transfer","( type_id, obj )","<p>Apply a transfer method to a Ruby object\n"],["transfer_stderr","MultiTkIp","MultiTkIp.html#method-i-transfer_stderr","(dist, src = '')",""],["transfer_stderr","MultiTkIp","MultiTkIp.html#method-c-transfer_stderr","(dist, src = '')",""],["transfer_stderr","MultiTkIp","MultiTkIp.html#method-i-transfer_stderr","(dist, src = '')",""],["transfer_stderr","MultiTkIp","MultiTkIp.html#method-c-transfer_stderr","(dist, src = '')",""],["transfer_stdin","MultiTkIp","MultiTkIp.html#method-i-transfer_stdin","(dist, src = '')",""],["transfer_stdin","MultiTkIp","MultiTkIp.html#method-c-transfer_stdin","(dist, src = '')",""],["transfer_stdin","MultiTkIp","MultiTkIp.html#method-i-transfer_stdin","(dist, src = '')",""],["transfer_stdin","MultiTkIp","MultiTkIp.html#method-c-transfer_stdin","(dist, src = '')",""],["transfer_stdio","MultiTkIp","MultiTkIp.html#method-c-transfer_stdio","(dist, src = '')",""],["transfer_stdio","MultiTkIp","MultiTkIp.html#method-c-transfer_stdio","(dist, src = '')",""],["transfer_stdio","MultiTkIp","MultiTkIp.html#method-i-transfer_stdio","(dist, src = '')",""],["transfer_stdio","MultiTkIp","MultiTkIp.html#method-i-transfer_stdio","(dist, src = '')",""],["transfer_stdout","MultiTkIp","MultiTkIp.html#method-i-transfer_stdout","(dist, src = '')",""],["transfer_stdout","MultiTkIp","MultiTkIp.html#method-c-transfer_stdout","(dist, src = '')",""],["transfer_stdout","MultiTkIp","MultiTkIp.html#method-c-transfer_stdout","(dist, src = '')",""],["transfer_stdout","MultiTkIp","MultiTkIp.html#method-i-transfer_stdout","(dist, src = '')",""],["transform","Buildr::Filter::Mapper","Buildr/Filter/Mapper.html#method-i-transform","(content, path = nil)",""],["transitive","Buildr","Buildr.html#method-i-transitive","(*args)",""],["transpose","Matrix","Matrix.html#method-i-transpose","()","<p>Returns the transpose of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>], [<span class=\"ruby-value\">3</span>,<span class=\"ruby-value\">4</span>], [<span class=\"ruby-value\">5</span>,<span class=\"ruby-value\">6</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span> <span class=\"ruby-value\">2</span>\n     <span class=\"ruby-value\">3</span> <span class=\"ruby-value\">4</span>\n     <span class=\"ruby-value\">5</span> <span class=\"ruby-value\">6</span>\n<span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>], <span class=\"ruby-operator\">...</span>\n</pre>\n"],["trust","Delegator","Delegator.html#method-i-trust","","<p>Trust both the object returned by __getobj__ and self.\n"],["try_activate","Gem","Gem.html#method-c-try_activate","(path)","<p>Try to activate a gem containing <code>path</code>. Returns true if\nactivation succeeded or wasn’t needed because …\n"],["try_const","Object","Object.html#method-i-try_const","(const, headers = nil, opt = \"\", &b)","<p>Returns whether or not the Constant <code>const</code> is defined.\n<p>See also <code>have_const</code>\n"],["try_implicit","Syck","Syck.html#method-c-try_implicit","( obj )","<p>Apply any implicit a node may qualify for\n"],["try_mon_enter","MonitorMixin","MonitorMixin.html#method-i-try_mon_enter","()","<p>For backward compatibility\n"],["try_type","Object","Object.html#method-i-try_type","(type, headers = nil, opt = \"\", &b)","<p>Returns whether or not the static type <code>type</code> is defined.\n<p>See also <code>have_type</code>\n"],["tsort","TSort","TSort.html#method-i-tsort","()","<p>Returns a topologically sorted array of nodes. The array is sorted from\nchildren to parents, i.e. the …\n"],["tsort_each","TSort","TSort.html#method-i-tsort_each","()","<p>The iterator version of the #tsort method.\n<code><em>obj</em>.tsort_each</code> is similar to\n<code><em>obj</em>.tsort.each</code>, but modification …\n"],["tsort_each_child","TSort","TSort.html#method-i-tsort_each_child","(node)","<p>Should be implemented by a extended class.\n<p>#tsort_each_child is used to iterate for child nodes of <em>node</em> …\n"],["tsort_each_node","TSort","TSort.html#method-i-tsort_each_node","()","<p>Should be implemented by a extended class.\n<p>#tsort_each_node is used to iterate for all nodes over a graph. …\n"],["u","ERB::Util","ERB/Util.html#method-c-u","(s)",""],["udp_server_loop","Socket","Socket.html#method-c-udp_server_loop","(host=nil, port)","<p>creates a UDP/IP server on <em>port</em> and calls the block for each\nmessage arrived. The block is called with …\n"],["udp_server_loop_on","Socket","Socket.html#method-c-udp_server_loop_on","(sockets)","<p>Run UDP/IP server loop on the given sockets.\n<p>The return value of Socket.udp_server_sockets is appropriate …\n"],["udp_server_recv","Socket","Socket.html#method-c-udp_server_recv","(sockets)","<p>Receive UDP/IP packets from the given <em>sockets</em>. For each packet\nreceived, the block is called.\n<p>The block …\n"],["udp_server_sockets","Socket","Socket.html#method-c-udp_server_sockets","(host=nil, port)","<p>Creates UDP/IP sockets for a UDP server.\n<p>If no block given, it returns an array of sockets.\n<p>If a block …\n"],["ui","Gem","Gem.html#method-c-ui","()","<p>Lazily loads DefaultUserInteraction and returns the default UI.\n"],["unalias_command","Shell","Shell.html#method-c-unalias_command","(ali)",""],["unconverted_fields?","CSV","CSV.html#method-i-unconverted_fields-3F","()","<p>Returns <code>true</code> if unconverted_fields() to parsed results.  See\nCSV::new for details.\n"],["undef_system_command","Shell","Shell.html#method-c-undef_system_command","(command)",""],["uninstall","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-uninstall","()",""],["uninstall_cmd","TkComm","TkComm.html#method-c-uninstall_cmd","(id, local_cmdtbl=nil)",""],["uninstall_cmd","TkComm","TkComm.html#method-i-uninstall_cmd","(id)",""],["union","Set","Set.html#method-i-union","(enum)",""],["unit","Matrix","Matrix.html#method-c-unit","(n)",""],["unitary?","Matrix","Matrix.html#method-i-unitary-3F","()","<p>Returns <code>true</code> is this is a unitary matrix Raises an error if\nmatrix is not square.\n"],["unix","Socket","Socket.html#method-c-unix","(path)","<p>creates a new socket connected to path using UNIX socket socket.\n<p>If a block is given, the block is called …\n"],["unix_server_loop","Socket","Socket.html#method-c-unix_server_loop","(path)","<p>creates a UNIX socket server on <em>path</em>. It calls the block for each\nsocket accepted.\n<p>If <em>host</em> is specified, …\n"],["unix_server_socket","Socket","Socket.html#method-c-unix_server_socket","(path)","<p>creates a UNIX server socket on <em>path</em>\n<p>If no block given, it returns a listening socket.\n<p>If a block is given, …\n"],["unknown","Logger","Logger.html#method-i-unknown","(progname = nil, &block)","<p>Log an <code>UNKNOWN</code> message.  This will be printed no matter what\nthe logger’s level.\n<p>See #info for more information. …\n"],["unlink","Tempfile","Tempfile.html#method-i-unlink","()","<p>Unlinks (deletes) the file from the filesystem. One should always unlink\nthe file after using it, as …\n"],["unresolved_deps","Gem","Gem.html#method-c-unresolved_deps","()",""],["untaint","Delegator","Delegator.html#method-i-untaint","","<p>Untaint both the object returned by __getobj__ and self.\n"],["untrust","Delegator","Delegator.html#method-i-untrust","","<p>Untrust both the object returned by __getobj__ and self.\n"],["unversioned_spec","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-c-unversioned_spec","(spec)",""],["unversioned_spec","Buildr::ArtifactNamespace::ArtifactRequirement","Buildr/ArtifactNamespace/ArtifactRequirement.html#method-i-unversioned_spec","()","<p>Return an artifact spec without the version part.\n"],["unzip","Buildr","Buildr.html#method-i-unzip","(args)","<p>Creates a task that will unzip a file into the target directory. The task\nname is the target directory, …\n"],["update_classpath","Buildr::Packaging::Java::EarTask","Buildr/Packaging/Java/EarTask.html#method-i-update_classpath","(component)",""],["update_manifest","Buildr::Packaging::Java::Manifest","Buildr/Packaging/Java/Manifest.html#method-c-update_manifest","(file)","<p>Updates the MANIFEST.MF entry of a ZIP (or JAR) file.  Reads the\nMANIFEST.MF, yields to the block with …\n"],["update_version_to_next","Buildr::GitRelease","Buildr/GitRelease.html#method-i-update_version_to_next","()",""],["update_version_to_next","Buildr::HgRelease","Buildr/HgRelease.html#method-i-update_version_to_next","()","<p>Update buildfile with next version number\n"],["update_version_to_next","Buildr::SvnRelease","Buildr/SvnRelease.html#method-i-update_version_to_next","()",""],["upload","Buildr","Buildr.html#method-i-upload","(*args, &block)","<p>Uploads the specified artifacts to the release server as part of the upload\ntask.\n<p>You can use this to …\n"],["upload","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-upload","(upload_to = nil)","<p>Uploads the artifact, its POM and digital signatures to remote server.\n<p>In the first form, uses the upload …\n"],["upload","Buildr::PackageGemTask","Buildr/PackageGemTask.html#method-i-upload","()",""],["upload","URI","URI.html#method-c-upload","(uri, source, options = nil)","<p>Uploads from source to the resource.\n<p>The source may be a file name (string or task), in which case the …\n"],["upload","URI::FILE","URI/FILE.html#method-i-upload","(source, options = nil)",""],["upload","URI::Generic","URI/Generic.html#method-i-upload","(source, options = nil)","<p>Uploads from source to the resource.\n<p>The source may be a file name (string or task), in which case the …\n"],["upload_task","Buildr::ActsAsArtifact","Buildr/ActsAsArtifact.html#method-i-upload_task","(upload_to = nil)",""],["upper_bound","Prime::PseudoPrimeGenerator","Prime/PseudoPrimeGenerator.html#method-i-upper_bound","()",""],["upper_bound=","Prime::PseudoPrimeGenerator","Prime/PseudoPrimeGenerator.html#method-i-upper_bound-3D","(ubound)",""],["upper_triangular?","Matrix","Matrix.html#method-i-upper_triangular-3F","()","<p>Returns <code>true</code> is this is an upper triangular matrix.\n"],["uptodate?","FileUtils","FileUtils.html#method-c-uptodate-3F","(new, old_list, options = nil)","<p>Options: (none)\n<p>Returns true if <code>newer</code> is newer than all <code>old_list</code>.\nNon-existent files are older than any …\n"],["url_encode","ERB::Util","ERB/Util.html#method-c-url_encode","(s)","<p>A utility method for encoding the String <em>s</em> as a URL.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;erb&quot;</span>\n<span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ERB</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Util</span>\n\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-identifier\">url_encode</span>(<span class=\"ruby-string\">&quot;Programming ...\n</span></pre>\n"],["url_for_path","Buildr::IntellijIdea::IdeaModule","Buildr/IntellijIdea/IdeaModule.html#method-i-url_for_path","(path)",""],["urlsafe_base64","SecureRandom","SecureRandom.html#method-c-urlsafe_base64","(n=nil, padding=false)","<p>SecureRandom.urlsafe_base64 generates a random URL-safe base64 string.\n<p>The argument <em>n</em> specifies the length …\n"],["urlsafe_decode64","Base64","Base64.html#method-i-urlsafe_decode64","(str)","<p>Returns the Base64-decoded version of <code>str</code>. This method\ncomplies with “Base 64 Encoding with URL and …\n"],["urlsafe_encode64","Base64","Base64.html#method-i-urlsafe_encode64","(bin)","<p>Returns the Base64-encoded version of <code>bin</code>. This method\ncomplies with “Base 64 Encoding with URL and …\n"],["use","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-use","(*specs)","<p>First and second form are equivalent, the third is used when an\nArtifactRequirement has been previously …\n"],["use_fsc","Buildr::Scala::Scalac","Buildr/Scala/Scalac.html#method-c-use_fsc","()",""],["use_installed?","Buildr::Scala::Scalac","Buildr/Scala/Scalac.html#method-c-use_installed-3F","()",""],["use_paths","Gem","Gem.html#method-c-use_paths","(home, *paths)","<p>Use the <code>home</code> and <code>paths</code> values for Gem.dir and\nGem.path.  Used mainly by the unit tests to provide environment …\n"],["user","Buildr::Settings","Buildr/Settings.html#method-i-user","()","<p>User settings loaded from setting.yaml file in user’s home directory.\n"],["user_home","Gem","Gem.html#method-c-user_home","()","<p>The home directory for the user.\n"],["using","Buildr::CompileTask","Buildr/CompileTask.html#method-i-using","(*args)","<p>Sets the compiler options from a hash and returns self.  Can also be used\nto select the compiler.\n<p>For …\n"],["using","Buildr::Doc::DocTask","Buildr/Doc/DocTask.html#method-i-using","(*args)","<p>Sets the documentation tool options from a hash and returns self.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">doc</span>.<span class=\"ruby-identifier\">using</span> :<span class=\"ruby-identifier\">windowtitle=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">'My ...\n</span></pre>\n"],["using","Buildr::Filter","Buildr/Filter.html#method-i-using","(*args, &block)","<p>Specifies the mapping to use and returns self.\n<p>The most typical mapping uses a Hash, and the default mapping …\n"],["using","Buildr::Filter::Mapper","Buildr/Filter/Mapper.html#method-i-using","(*args, &block)",""],["using","Buildr::Run::RunTask","Buildr/Run/RunTask.html#method-i-using","(*args)","<p>Sets the run options from a hash and returns self.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">run</span>.<span class=\"ruby-identifier\">using</span> :<span class=\"ruby-identifier\">main=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">'org.example.Main'</span>\n</pre>\n"],["using","Buildr::Shell::ShellTask","Buildr/Shell/ShellTask.html#method-i-using","(*args)","<p>Sets the run options from a hash and returns self.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">shell</span>.<span class=\"ruby-identifier\">using</span> :<span class=\"ruby-identifier\">properties</span> =<span class=\"ruby-operator\">&gt;</span> {<span class=\"ruby-string\">'foo'</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'bar'</span>} <span class=\"ruby-operator\">...</span>\n</pre>\n"],["using","Buildr::TestTask","Buildr/TestTask.html#method-i-using","(*args)","<p>Sets various test options from a hash and returns self.  For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">test</span>.<span class=\"ruby-identifier\">using</span> :<span class=\"ruby-identifier\">fork=</span><span class=\"ruby-operator\">&gt;</span>:<span class=\"ruby-identifier\">each</span>, :<span class=\"ruby-identifier\">properties=</span><span class=\"ruby-operator\">&gt;</span>{ <span class=\"ruby-operator\">...</span>\n</pre>\n"],["uuid","SecureRandom","SecureRandom.html#method-c-uuid","()","<p>SecureRandom.uuid generates a v4 random UUID (Universally Unique\nIDentifier).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">SecureRandom</span>.<span class=\"ruby-identifier\">uuid</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n"],["values","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-values","(include_parents = false, include_groups = true)","<p>Return all requirements for this namespace\n"],["values_at","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-values_at","(*names)","<p>Return only the named requirements\n"],["values_at","CSV::Row","CSV/Row.html#method-i-values_at","(*headers_and_or_indices)",""],["values_at","CSV::Table","CSV/Table.html#method-i-values_at","(*indices_or_headers)","<p>The mixed mode default is to treat a list of indices as row access,\nreturning the rows indicated.  Anything …\n"],["var_list","DEBUGGER__","DEBUGGER__.html#method-i-var_list","(ary, binding)",""],["vcs_component","Buildr::IntellijIdea::IdeaProject","Buildr/IntellijIdea/IdeaProject.html#method-i-vcs_component","()",""],["ver","OptionParser","OptionParser.html#method-i-ver","()","<p>Returns version string from program_name, version and release.\n"],["version","Buildr::Ant","Buildr/Ant.html#method-c-version","()","<p>Current version of Ant being used.\n"],["version","Buildr::Cobertura","Buildr/Cobertura.html#method-c-version","()",""],["version","Buildr::Emma","Buildr/Emma.html#method-c-version","()",""],["version","Buildr::Groovy::EasyB","Buildr/Groovy/EasyB.html#method-c-version","()",""],["version","Buildr::JBehave","Buildr/JBehave.html#method-c-version","()",""],["version","Buildr::JMock","Buildr/JMock.html#method-c-version","()",""],["version","Buildr::JUnit","Buildr/JUnit.html#method-c-version","()",""],["version","Buildr::Scala","Buildr/Scala.html#method-c-version","()",""],["version","Buildr::Scala","Buildr/Scala.html#method-c-version","()",""],["version","Buildr::Scala::Check","Buildr/Scala/Check.html#method-c-version","()",""],["version","Buildr::Scala::Mockito","Buildr/Scala/Mockito.html#method-c-version","()",""],["version","Buildr::Scala::ScalaTest","Buildr/Scala/ScalaTest.html#method-c-version","()",""],["version","Buildr::Scala::Specs","Buildr/Scala/Specs.html#method-c-version","()",""],["version","Buildr::Scala::Specs2","Buildr/Scala/Specs2.html#method-c-version","()",""],["version","Buildr::Shell::BeanShell","Buildr/Shell/BeanShell.html#method-c-version","()",""],["version","Buildr::TestFramework::JRubyBased","Buildr/TestFramework/JRubyBased.html#method-c-version","()",""],["version","Buildr::TestNG","Buildr/TestNG.html#method-c-version","()",""],["version","ERB","ERB.html#method-c-version","()","<p>Returns revision information for the erb.rb module.\n"],["version","IRB","IRB.html#method-c-version","()","<p>IRB version method\n"],["version","Java","Java.html#method-c-version","()","<p><strong>Deprecated:</strong> Use ENV_JAVA instead.\n"],["version","OptionParser","OptionParser.html#method-i-version","()","<p>Version\n"],["version=","Gem::Version","Gem/Version.html#method-i-version-3D","(version)",""],["version?","Buildr::Scala","Buildr/Scala.html#method-c-version-3F","(*v)","<p>check if version matches any of the given prefixes\n"],["version?","Buildr::Scala","Buildr/Scala.html#method-c-version-3F","(*v)","<p>check if version matches any of the given prefixes\n"],["version?","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-c-version-3F","(str)","<p>is <code>str</code> a version string?\n"],["version_str","Buildr::Scala","Buildr/Scala.html#method-c-version_str","()",""],["version_str","Buildr::Scala","Buildr/Scala.html#method-c-version_str","()",""],["version_without_build","Buildr::Scala","Buildr/Scala.html#method-c-version_without_build","()","<p>returns Scala version without build number. e.g.  “2.9.0-1” =&gt; “2.9.0”\n"],["version_without_build","Buildr::Scala","Buildr/Scala.html#method-c-version_without_build","()","<p>returns Scala version without build number. e.g.  “2.9.0-1” =&gt; “2.9.0”\n"],["virtual","Buildr::ArtifactNamespace","Buildr/ArtifactNamespace.html#method-i-virtual","(group_name, *members)",""],["wait","ConditionVariable","ConditionVariable.html#method-i-wait","(mutex, timeout=nil)","<p>Releases the lock held in <code>mutex</code> and waits; reacquires the lock\non wakeup.\n<p>If <code>timeout</code> is given, this method …\n"],["wait","MonitorMixin::ConditionVariable","MonitorMixin/ConditionVariable.html#method-i-wait","(timeout = nil)","<p>Releases the lock held in the associated monitor and waits; reacquires the\nlock on wakeup.\n<p>If <code>timeout</code> …\n"],["wait_on_mainloop=","MultiTkIp","MultiTkIp.html#method-i-wait_on_mainloop-3D","(bool)",""],["wait_on_mainloop=","MultiTkIp","MultiTkIp.html#method-i-wait_on_mainloop-3D","(bool)",""],["wait_on_mainloop?","MultiTkIp","MultiTkIp.html#method-i-wait_on_mainloop-3F","()",""],["wait_on_mainloop?","MultiTkIp","MultiTkIp.html#method-i-wait_on_mainloop-3F","()",""],["wait_until","MonitorMixin::ConditionVariable","MonitorMixin/ConditionVariable.html#method-i-wait_until","()","<p>Calls wait repeatedly until the given block yields a truthy value.\n"],["wait_while","MonitorMixin::ConditionVariable","MonitorMixin/ConditionVariable.html#method-i-wait_while","()","<p>Calls wait repeatedly while the given block yields a truthy value.\n"],["wait_writable","Object","Object.html#method-i-wait_writable","()","<p>Wait until the file becomes writable.\n\n<pre>ruby -run -e wait_writable -- [OPTION] FILE\n\n-n RETRY    count to ...</pre>\n"],["waiting","DEBUGGER__","DEBUGGER__.html#method-c-waiting","()",""],["warn","Logger","Logger.html#method-i-warn","(progname = nil, &block)","<p>Log a <code>WARN</code> message.\n<p>See #info for more information.\n"],["warn","Object","Object.html#method-i-warn","(message)","<p>Show warning message.\n"],["warn","OptionParser","OptionParser.html#method-i-warn","(mesg = $!)",""],["warn?","Logger","Logger.html#method-i-warn-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>WARN</code> messages.\n"],["warn_without_color","Object","Object.html#method-i-warn_without_color","(message)",""],["weakref_alive?","WeakRef","WeakRef.html#method-i-weakref_alive-3F","()","<p>Returns true if the referenced object is still alive.\n"],["width","ProgressBar","ProgressBar.html#method-c-width","()",""],["win32_last_error","Fiddle","Fiddle.html#method-c-win32_last_error","()","<p>Returns the last win32 <code>Error</code> of the current executing\n<code>Thread</code> or nil if none\n"],["win32_last_error=","Fiddle","Fiddle.html#method-c-win32_last_error-3D","(error)","<p>Sets the last win32 <code>Error</code> of the current executing\n<code>Thread</code> to <code>error</code>\n"],["win_os?","Buildr::Util","Buildr/Util.html#method-i-win_os-3F","()","<p>In order to determine if we are running on a windows OS, prefer this\nfunction instead of using Gem.win_platform? …\n"],["win_platform?","Gem","Gem.html#method-c-win_platform-3F","()","<p>Is this a windows platform?\n"],["window","TkComm","TkComm.html#method-c-window","(val)",""],["with","Buildr::ArchiveTask","Buildr/ArchiveTask.html#method-i-with","(options)","<p>Passes options to the task and returns self. Some tasks support additional\noptions, for example, the …\n"],["with","Buildr::CompileTask","Buildr/CompileTask.html#method-i-with","(*specs)","<p>Adds files and artifacts as dependencies, and returns self.\n<p>Calls #artifacts on the arguments, so you …\n"],["with","Buildr::Doc::DocTask","Buildr/Doc/DocTask.html#method-i-with","(*specs)","<p>Adds files and artifacts as classpath dependencies, and returns self.\n"],["with","Buildr::Packaging::Java::JarTask","Buildr/Packaging/Java/JarTask.html#method-i-with","(*args)","<p>Additional Pass options to the task. Returns self. ZipTask itself does not\nsupport any options, but other …\n"],["with","Buildr::Run::RunTask","Buildr/Run/RunTask.html#method-i-with","(*specs)","<p>Adds files and artifacts as classpath dependencies, and returns self.\n"],["with","Buildr::Shell::ShellTask","Buildr/Shell/ShellTask.html#method-i-with","(*specs)","<p>Adds files and artifacts as classpath dependencies, and returns self.\n"],["with","Buildr::TestTask","Buildr/TestTask.html#method-i-with","(*artifacts)","<p>Specify artifacts (specs, tasks, files, etc) to include in the dependencies\nlist when compiling and running …\n"],["with","OptionParser","OptionParser.html#method-c-with","(*args, &block)","<p>Initializes a new instance and evaluates the optional block in context of\nthe instance. Arguments <code>args</code> …\n"],["with_config","Object","Object.html#method-i-with_config","(config, default=nil)","<p>Tests for the presence of a –with-<code>config</code> or\n–without-<code>config</code> option. Returns true if the with option …\n"],["with_object","Prime::PseudoPrimeGenerator","Prime/PseudoPrimeGenerator.html#method-i-with_object","(obj)","<p>see <code>Enumerator</code>#with_object.\n"],["with_uncompressed_tar","Buildr::TarTask","Buildr/TarTask.html#method-i-with_uncompressed_tar","(&block)","<p>Yields an Archive::Tar::Minitar::Input object to the provided block.\nOpening, closing and Gzip-decompressing …\n"],["wrapper","Java","Java.html#method-c-wrapper","()","<p><strong>Deprecated:</strong> In earlier versions, Java.wrapper served as a\nwrapper around RJB/JRuby. From this version ...\n"],["write","Buildr","Buildr.html#method-i-write","(name, content = nil)","<p>Write the contents into a file. The second form calls the block and writes\nthe result.\n<p>For example:\n\n<pre>write ...</pre>\n"],["write","Buildr::IntellijIdea::IdeaFile","Buildr/IntellijIdea/IdeaFile.html#method-i-write","(f)","<p>IDEA can not handle text content with indents so need to removing indenting\nCan not pass true as third …\n"],["write","Logger::LogDevice","Logger/LogDevice.html#method-i-write","(message)",""],["write","URI","URI.html#method-c-write","(uri, *args, &block)","<p>Writes to the resource behind the URI. The first form writes the content\nfrom a string or an object that …\n"],["write","URI::Generic","URI/Generic.html#method-i-write","(*args, &block)","<p>Writes to the resource behind the URI. The first form writes the content\nfrom a string or an object that …\n"],["write_headers?","CSV","CSV.html#method-i-write_headers-3F","()","<p>Returns <code>true</code> if headers are written in output. See CSV::new\nfor details.\n"],["xmlschema","Time","Time.html#method-c-xmlschema","(date)","<p>Parses <code>date</code> as dateTime defined by XML Schema and converts it\nto a Time object.  The format is restricted …\n"],["xmlschema","Time","Time.html#method-i-xmlschema","(fraction_digits=0)","<p>Returns a string which represents the time as dateTime defined by XML\nSchema:\n\n<pre>CCYY-MM-DDThh:mm:ssTZD\nCCYY-MM-DDThh:mm:ss.sssTZD</pre>\n"],["zero","Matrix","Matrix.html#method-c-zero","(row_size, column_size = row_size)","<p>Creates a zero matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">zero</span>(<span class=\"ruby-value\">2</span>)\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">0</span> <span class=\"ruby-value\">0</span>\n     <span class=\"ruby-value\">0</span> <span class=\"ruby-value\">0</span>\n</pre>\n"],["zero?","Matrix","Matrix.html#method-i-zero-3F","()","<p>Returns <code>true</code> is this is a matrix with only zero elements\n"],["zip","Buildr","Buildr.html#method-i-zip","(file)","<p>The ZipTask creates a new Zip file. You can include any number of files and\nand directories, use exclusion …\n"],["zone_offset","Time","Time.html#method-c-zone_offset","(zone, year=self.now.year)",""],["|","Buildr::VersionRequirement","Buildr/VersionRequirement.html#method-i-7C","(other)","<p>Either modify the current requirement (if it’s already an or operation) or\ncreate a new requirement\n"],["|","IPAddr","IPAddr.html#method-i-7C","(other)","<p>Returns a new ipaddr built by bitwise OR.\n"],["|","Set","Set.html#method-i-7C","(enum)","<p>Returns a new set built by merging the set and the elements of the given\nenumerable object.\n"],["~","IPAddr","IPAddr.html#method-i-7E","()","<p>Returns a new ipaddr built by bitwise negation.\n"],["CHANGELOG","","CHANGELOG.html","","<p>1.4.10 (2013-02-10)\n\n<pre>Added:  Support a single intermediate directory for each project hierarchy\n       ...</pre>\n"],["LICENSE","","LICENSE.html","","\n<pre>         Apache License\n   Version 2.0, January 2004\nhttp://www.apache.org/licenses/</pre>\n<p>TERMS AND CONDITIONS …\n"],["NOTICE","","NOTICE.html","","<p>Apache Buildr Copyright 2007-2009 The Apache Software Foundation\n<p>This product includes software developed …\n"],["README","","README_rdoc.html","","<p>Buildr\n<p>This is Buildr, the build system that lets you build like you code.\n<p>buildr.apache.org/\n"]]}}